{"version":3,"file":"rootWrapper-VNF48q3T.js","sources":["../../node_modules/@sentry/core/build/esm/utils-hoist/instrument/handlers.js","../../node_modules/@sentry/core/build/esm/utils-hoist/instrument/globalError.js","../../node_modules/@sentry/core/build/esm/utils-hoist/instrument/globalUnhandledRejection.js","../../node_modules/@sentry/core/build/esm/tracing/errors.js","../../node_modules/@sentry/core/build/esm/tracing/utils.js","../../node_modules/@sentry/core/build/esm/tracing/sentryNonRecordingSpan.js","../../node_modules/@sentry/core/build/esm/tracing/logSpans.js","../../node_modules/@sentry/core/build/esm/utils/parseSampleRate.js","../../node_modules/@sentry/core/build/esm/tracing/sampling.js","../../node_modules/@sentry/core/build/esm/utils-hoist/dsn.js","../../node_modules/@sentry/core/build/esm/utils-hoist/envelope.js","../../node_modules/@sentry/core/build/esm/envelope.js","../../node_modules/@sentry/core/build/esm/tracing/measurement.js","../../node_modules/@sentry/core/build/esm/tracing/sentrySpan.js","../../node_modules/@sentry/core/build/esm/tracing/trace.js","../../node_modules/@sentry/core/build/esm/tracing/idleSpan.js","../../node_modules/@sentry/core/build/esm/api.js","../../node_modules/@sentry/core/build/esm/integration.js","../../node_modules/@sentry/core/build/esm/utils-hoist/clientreport.js","../../node_modules/@sentry/core/build/esm/utils-hoist/error.js","../../node_modules/@sentry/core/build/esm/baseclient.js","../../node_modules/@sentry/core/build/esm/sdk.js","../../node_modules/@sentry/core/build/esm/utils-hoist/promisebuffer.js","../../node_modules/@sentry/core/build/esm/utils-hoist/ratelimit.js","../../node_modules/@sentry/core/build/esm/transports/base.js","../../node_modules/@sentry/core/build/esm/utils/isSentryRequestUrl.js","../../node_modules/@sentry/core/build/esm/utils/sdkMetadata.js","../../node_modules/@sentry/core/build/esm/utils/traceData.js","../../node_modules/@sentry/core/build/esm/breadcrumbs.js","../../node_modules/@sentry/core/build/esm/integrations/functiontostring.js","../../node_modules/@sentry/core/build/esm/integrations/inboundfilters.js","../../node_modules/@sentry/core/build/esm/utils-hoist/aggregate-errors.js","../../node_modules/@sentry/core/build/esm/utils-hoist/url.js","../../node_modules/@sentry/core/build/esm/utils-hoist/instrument/console.js","../../node_modules/@sentry/core/build/esm/utils-hoist/severity.js","../../node_modules/@sentry/core/build/esm/integrations/captureconsole.js","../../node_modules/@sentry/core/build/esm/integrations/dedupe.js","../../node_modules/@sentry/core/build/esm/fetch.js","../../node_modules/@sentry/core/build/esm/utils-hoist/breadcrumb-log-level.js","../../node_modules/@sentry/core/build/esm/utils-hoist/supports.js","../../node_modules/@sentry/core/build/esm/utils-hoist/instrument/fetch.js","../../node_modules/@sentry/core/build/esm/utils-hoist/env.js","../../node_modules/@sentry/core/build/esm/utils-hoist/vendor/supportsHistory.js","../../node_modules/@sentry/browser/build/npm/esm/helpers.js","../../node_modules/@sentry/browser/build/npm/esm/debug-build.js","../../node_modules/@sentry/browser/build/npm/esm/eventbuilder.js","../../node_modules/@sentry/browser/build/npm/esm/userfeedback.js","../../node_modules/@sentry/browser/build/npm/esm/client.js","../../node_modules/@sentry-internal/browser-utils/build/esm/debug-build.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/bindReporter.js","../../node_modules/@sentry-internal/browser-utils/build/esm/types.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/generateUniqueID.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/getNavigationEntry.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/getActivationStart.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/initMetric.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/observe.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/onHidden.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/runOnce.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/getVisibilityWatcher.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/whenActivated.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/onFCP.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/getCLS.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/getFID.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/polyfills/interactionCountPolyfill.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/interactions.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/whenIdle.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/getINP.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/getLCP.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/onTTFB.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/instrument.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/utils.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/cls.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/browserMetrics.js","../../node_modules/@sentry-internal/browser-utils/build/esm/instrument/dom.js","../../node_modules/@sentry-internal/browser-utils/build/esm/instrument/history.js","../../node_modules/@sentry-internal/browser-utils/build/esm/getNativeImplementation.js","../../node_modules/@sentry-internal/browser-utils/build/esm/instrument/xhr.js","../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/inp.js","../../node_modules/@sentry/browser/build/npm/esm/transports/fetch.js","../../node_modules/@sentry/browser/build/npm/esm/stack-parsers.js","../../node_modules/@sentry/browser/build/npm/esm/integrations/breadcrumbs.js","../../node_modules/@sentry/browser/build/npm/esm/integrations/browserapierrors.js","../../node_modules/@sentry/browser/build/npm/esm/integrations/browsersession.js","../../node_modules/@sentry/browser/build/npm/esm/integrations/globalhandlers.js","../../node_modules/@sentry/browser/build/npm/esm/integrations/httpcontext.js","../../node_modules/@sentry/browser/build/npm/esm/integrations/linkederrors.js","../../node_modules/@sentry/browser/build/npm/esm/sdk.js","../../node_modules/@sentry/browser/build/npm/esm/integrations/httpclient.js","../../node_modules/@sentry/browser/build/npm/esm/tracing/request.js","../../node_modules/@sentry/browser/build/npm/esm/tracing/backgroundtab.js","../../node_modules/@sentry/browser/build/npm/esm/tracing/browserTracingIntegration.js","../../node_modules/@sentry/react/build/esm/sdk.js","../../node_modules/react-is/cjs/react-is.production.min.js","../../node_modules/react-is/index.js","../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../../node_modules/@sentry/react/build/esm/debug-build.js","../../node_modules/@sentry/react/build/esm/reactrouterv6-compat-utils.js","../../node_modules/@sentry/react/build/esm/reactrouterv6.js","../../src/sentry2.tsx","../../src/rootWrapper.tsx"],"sourcesContent":["import { DEBUG_BUILD } from '../debug-build.js';\nimport { logger } from '../logger.js';\nimport { getFunctionName } from '../stacktrace.js';\n\n// We keep the handlers globally\nconst handlers = {};\nconst instrumented = {};\n\n/** Add a handler function. */\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nfunction resetInstrumentationHandlers() {\n  Object.keys(handlers).forEach(key => {\n    handlers[key ] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nfunction maybeInstrument(type, instrumentFn) {\n  if (!instrumented[type]) {\n    instrumented[type] = true;\n    try {\n      instrumentFn();\n    } catch (e) {\n      DEBUG_BUILD && logger.error(`Error while instrumenting ${type}`, e);\n    }\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nexport { addHandler, maybeInstrument, resetInstrumentationHandlers, triggerHandlers };\n//# sourceMappingURL=handlers.js.map\n","import { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers.js';\n\nlet _oldOnErrorHandler = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalErrorInstrumentationHandler(handler) {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError() {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  // Note: The reason we are doing window.onerror instead of window.addEventListener('error')\n  // is that we are using this handler in the Loader Script, to handle buffered errors consistently\n  GLOBAL_OBJ.onerror = function (\n    msg,\n    url,\n    line,\n    column,\n    error,\n  ) {\n    const handlerData = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { addGlobalErrorInstrumentationHandler };\n//# sourceMappingURL=globalError.js.map\n","import { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers.js';\n\nlet _oldOnUnhandledRejectionHandler = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalUnhandledRejectionInstrumentationHandler(\n  handler,\n) {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  // Note: The reason we are doing window.onunhandledrejection instead of window.addEventListener('unhandledrejection')\n  // is that we are using this handler in the Loader Script, to handle buffered rejections consistently\n  GLOBAL_OBJ.onunhandledrejection = function (e) {\n    const handlerData = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { addGlobalUnhandledRejectionInstrumentationHandler };\n//# sourceMappingURL=globalUnhandledRejection.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { addGlobalErrorInstrumentationHandler } from '../utils-hoist/instrument/globalError.js';\nimport { addGlobalUnhandledRejectionInstrumentationHandler } from '../utils-hoist/instrument/globalUnhandledRejection.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { getActiveSpan, getRootSpan } from '../utils/spanUtils.js';\nimport { SPAN_STATUS_ERROR } from './spanstatus.js';\n\nlet errorsInstrumented = false;\n\n/**\n * Ensure that global errors automatically set the active span status.\n */\nfunction registerSpanErrorInstrumentation() {\n  if (errorsInstrumented) {\n    return;\n  }\n\n  errorsInstrumented = true;\n  addGlobalErrorInstrumentationHandler(errorCallback);\n  addGlobalUnhandledRejectionInstrumentationHandler(errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active root span as failed\n */\nfunction errorCallback() {\n  const activeSpan = getActiveSpan();\n  const rootSpan = activeSpan && getRootSpan(activeSpan);\n  if (rootSpan) {\n    const message = 'internal_error';\n    DEBUG_BUILD && logger.log(`[Tracing] Root span: ${message} -> Global error occurred`);\n    rootSpan.setStatus({ code: SPAN_STATUS_ERROR, message });\n  }\n}\n\n// The function name will be lost when bundling but we need to be able to identify this listener later to maintain the\n// node.js default exit behaviour\nerrorCallback.tag = 'sentry_tracingErrorCallback';\n\nexport { registerSpanErrorInstrumentation };\n//# sourceMappingURL=errors.js.map\n","import { addNonEnumerableProperty } from '../utils-hoist/object.js';\n\nconst SCOPE_ON_START_SPAN_FIELD = '_sentryScope';\nconst ISOLATION_SCOPE_ON_START_SPAN_FIELD = '_sentryIsolationScope';\n\n/** Store the scope & isolation scope for a span, which can the be used when it is finished. */\nfunction setCapturedScopesOnSpan(span, scope, isolationScope) {\n  if (span) {\n    addNonEnumerableProperty(span, ISOLATION_SCOPE_ON_START_SPAN_FIELD, isolationScope);\n    addNonEnumerableProperty(span, SCOPE_ON_START_SPAN_FIELD, scope);\n  }\n}\n\n/**\n * Grabs the scope and isolation scope off a span that were active when the span was started.\n */\nfunction getCapturedScopesOnSpan(span) {\n  return {\n    scope: (span )[SCOPE_ON_START_SPAN_FIELD],\n    isolationScope: (span )[ISOLATION_SCOPE_ON_START_SPAN_FIELD],\n  };\n}\n\nexport { getCapturedScopesOnSpan, setCapturedScopesOnSpan };\n//# sourceMappingURL=utils.js.map\n","import { generateTraceId, generateSpanId } from '../utils-hoist/propagationContext.js';\nimport { TRACE_FLAG_NONE } from '../utils/spanUtils.js';\n\n/**\n * A Sentry Span that is non-recording, meaning it will not be sent to Sentry.\n */\nclass SentryNonRecordingSpan  {\n\n   constructor(spanContext = {}) {\n    this._traceId = spanContext.traceId || generateTraceId();\n    this._spanId = spanContext.spanId || generateSpanId();\n  }\n\n  /** @inheritdoc */\n   spanContext() {\n    return {\n      spanId: this._spanId,\n      traceId: this._traceId,\n      traceFlags: TRACE_FLAG_NONE,\n    };\n  }\n\n  /** @inheritdoc */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n   end(_timestamp) {}\n\n  /** @inheritdoc */\n   setAttribute(_key, _value) {\n    return this;\n  }\n\n  /** @inheritdoc */\n   setAttributes(_values) {\n    return this;\n  }\n\n  /** @inheritdoc */\n   setStatus(_status) {\n    return this;\n  }\n\n  /** @inheritdoc */\n   updateName(_name) {\n    return this;\n  }\n\n  /** @inheritdoc */\n   isRecording() {\n    return false;\n  }\n\n  /** @inheritdoc */\n   addEvent(\n    _name,\n    _attributesOrStartTime,\n    _startTime,\n  ) {\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but we need it for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n   addLink(_link) {\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but we need it for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n   addLinks(_links) {\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but we need it for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n   recordException(_exception, _time) {\n    // noop\n  }\n}\n\nexport { SentryNonRecordingSpan };\n//# sourceMappingURL=sentryNonRecordingSpan.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { spanToJSON, spanIsSampled, getRootSpan } from '../utils/spanUtils.js';\n\n/**\n * Print a log message for a started span.\n */\nfunction logSpanStart(span) {\n  if (!DEBUG_BUILD) return;\n\n  const { description = '< unknown name >', op = '< unknown op >', parent_span_id: parentSpanId } = spanToJSON(span);\n  const { spanId } = span.spanContext();\n\n  const sampled = spanIsSampled(span);\n  const rootSpan = getRootSpan(span);\n  const isRootSpan = rootSpan === span;\n\n  const header = `[Tracing] Starting ${sampled ? 'sampled' : 'unsampled'} ${isRootSpan ? 'root ' : ''}span`;\n\n  const infoParts = [`op: ${op}`, `name: ${description}`, `ID: ${spanId}`];\n\n  if (parentSpanId) {\n    infoParts.push(`parent ID: ${parentSpanId}`);\n  }\n\n  if (!isRootSpan) {\n    const { op, description } = spanToJSON(rootSpan);\n    infoParts.push(`root ID: ${rootSpan.spanContext().spanId}`);\n    if (op) {\n      infoParts.push(`root op: ${op}`);\n    }\n    if (description) {\n      infoParts.push(`root description: ${description}`);\n    }\n  }\n\n  logger.log(`${header}\n  ${infoParts.join('\\n  ')}`);\n}\n\n/**\n * Print a log message for an ended span.\n */\nfunction logSpanEnd(span) {\n  if (!DEBUG_BUILD) return;\n\n  const { description = '< unknown name >', op = '< unknown op >' } = spanToJSON(span);\n  const { spanId } = span.spanContext();\n  const rootSpan = getRootSpan(span);\n  const isRootSpan = rootSpan === span;\n\n  const msg = `[Tracing] Finishing \"${op}\" ${isRootSpan ? 'root ' : ''}span \"${description}\" with ID ${spanId}`;\n  logger.log(msg);\n}\n\nexport { logSpanEnd, logSpanStart };\n//# sourceMappingURL=logSpans.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { logger } from '../utils-hoist/logger.js';\n\n/**\n * Parse a sample rate from a given value.\n * This will either return a boolean or number sample rate, if the sample rate is valid (between 0 and 1).\n * If a string is passed, we try to convert it to a number.\n *\n * Any invalid sample rate will return `undefined`.\n */\nfunction parseSampleRate(sampleRate) {\n  if (typeof sampleRate === 'boolean') {\n    return Number(sampleRate);\n  }\n\n  const rate = typeof sampleRate === 'string' ? parseFloat(sampleRate) : sampleRate;\n  if (typeof rate !== 'number' || isNaN(rate) || rate < 0 || rate > 1) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          sampleRate,\n        )} of type ${JSON.stringify(typeof sampleRate)}.`,\n      );\n    return undefined;\n  }\n\n  return rate;\n}\n\nexport { parseSampleRate };\n//# sourceMappingURL=parseSampleRate.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled.js';\nimport { parseSampleRate } from '../utils/parseSampleRate.js';\n\n/**\n * Makes a sampling decision for the given options.\n *\n * Called every time a root span is created. Only root spans which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n */\nfunction sampleSpan(\n  options,\n  samplingContext,\n) {\n  // nothing to do if tracing is not enabled\n  if (!hasTracingEnabled(options)) {\n    return [false];\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` nor `enableTracing` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n  } else {\n    // When `enableTracing === true`, we use a sample rate of 100%\n    sampleRate = 1;\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get.\n  // (The only valid values are booleans or numbers between 0 and 1.)\n  const parsedSampleRate = parseSampleRate(sampleRate);\n\n  if (parsedSampleRate === undefined) {\n    DEBUG_BUILD && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    return [false];\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!parsedSampleRate) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    return [false, parsedSampleRate];\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  const shouldSample = Math.random() < parsedSampleRate;\n\n  // if we're not going to keep it, we're done\n  if (!shouldSample) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return [false, parsedSampleRate];\n  }\n\n  return [true, parsedSampleRate];\n}\n\nexport { sampleSpan };\n//# sourceMappingURL=sampling.js.map\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { consoleSandbox, logger } from './logger.js';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host = '', port = '', lastPath = ''] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n\nexport { dsnFromString, dsnToString, makeDsn };\n//# sourceMappingURL=dsn.js.map\n","import { dsnToString } from './dsn.js';\nimport { normalize } from './normalize.js';\nimport { dropUndefinedKeys } from './object.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8 array.\n */\nfunction encodeUTF8(input) {\n  return GLOBAL_OBJ.__SENTRY__ && GLOBAL_OBJ.__SENTRY__.encodePolyfill\n    ? GLOBAL_OBJ.__SENTRY__.encodePolyfill(input)\n    : new TextEncoder().encode(input);\n}\n\n/**\n * Decode a UTF8 array to string.\n */\nfunction decodeUTF8(input) {\n  return GLOBAL_OBJ.__SENTRY__ && GLOBAL_OBJ.__SENTRY__.decodePolyfill\n    ? GLOBAL_OBJ.__SENTRY__.decodePolyfill(input)\n    : new TextDecoder().decode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.stringify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(env) {\n  let buffer = typeof env === 'string' ? encodeUTF8(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(decodeUTF8(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates envelope item for a single span\n */\nfunction createSpanEnvelopeItem(spanJson) {\n  const spanHeaders = {\n    type: 'span',\n  };\n\n  return [spanHeaders, spanJson];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(attachment) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  profile_chunk: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  statsd: 'metric_bucket',\n  raw_security: 'security',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, createEventEnvelopeHeaders, createSpanEnvelopeItem, envelopeContainsItemType, envelopeItemTypeToDataCategory, forEachEnvelopeItem, getSdkMetadataForEnvelopeHeader, parseEnvelope, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { getDynamicSamplingContextFromSpan } from './tracing/dynamicSamplingContext.js';\nimport { dsnToString } from './utils-hoist/dsn.js';\nimport { getSdkMetadataForEnvelopeHeader, createEnvelope, createEventEnvelopeHeaders, createSpanEnvelopeItem } from './utils-hoist/envelope.js';\nimport './utils-hoist/version.js';\nimport './utils-hoist/debug-build.js';\nimport './utils-hoist/logger.js';\nimport { spanToJSON, showSpanDropWarning } from './utils/spanUtils.js';\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session.toJSON()];\n\n  return createEnvelope(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjust a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  const envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem = [{ type: eventType }, event];\n  return createEnvelope(envelopeHeaders, [eventItem]);\n}\n\n/**\n * Create envelope from Span item.\n *\n * Takes an optional client and runs spans through `beforeSendSpan` if available.\n */\nfunction createSpanEnvelope(spans, client) {\n  function dscHasRequiredProps(dsc) {\n    return !!dsc.trace_id && !!dsc.public_key;\n  }\n\n  // For the moment we'll obtain the DSC from the first span in the array\n  // This might need to be changed if we permit sending multiple spans from\n  // different segments in one envelope\n  const dsc = getDynamicSamplingContextFromSpan(spans[0]);\n\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n\n  const headers = {\n    sent_at: new Date().toISOString(),\n    ...(dscHasRequiredProps(dsc) && { trace: dsc }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const beforeSendSpan = client && client.getOptions().beforeSendSpan;\n  const convertToSpanJSON = beforeSendSpan\n    ? (span) => {\n        const spanJson = beforeSendSpan(spanToJSON(span) );\n        if (!spanJson) {\n          showSpanDropWarning();\n        }\n        return spanJson;\n      }\n    : (span) => spanToJSON(span);\n\n  const items = [];\n  for (const span of spans) {\n    const spanJson = convertToSpanJSON(span);\n    if (spanJson) {\n      items.push(createSpanEnvelopeItem(spanJson));\n    }\n  }\n\n  return createEnvelope(headers, items);\n}\n\nexport { createEventEnvelope, createSessionEnvelope, createSpanEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT } from '../semanticAttributes.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { getRootSpan, getActiveSpan } from '../utils/spanUtils.js';\n\n/**\n * Adds a measurement to the active transaction on the current global scope. You can optionally pass in a different span\n * as the 4th parameter.\n */\nfunction setMeasurement(name, value, unit, activeSpan = getActiveSpan()) {\n  const rootSpan = activeSpan && getRootSpan(activeSpan);\n\n  if (rootSpan) {\n    DEBUG_BUILD && logger.log(`[Measurement] Setting measurement on root span: ${name} = ${value} ${unit}`);\n    rootSpan.addEvent(name, {\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: value,\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: unit ,\n    });\n  }\n}\n\n/**\n * Convert timed events to measurements.\n */\nfunction timedEventsToMeasurements(events) {\n  if (!events || events.length === 0) {\n    return undefined;\n  }\n\n  const measurements = {};\n  events.forEach(event => {\n    const attributes = event.attributes || {};\n    const unit = attributes[SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT] ;\n    const value = attributes[SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE] ;\n\n    if (typeof unit === 'string' && typeof value === 'number') {\n      measurements[event.name] = { value, unit };\n    }\n  });\n\n  return measurements;\n}\n\nexport { setMeasurement, timedEventsToMeasurements };\n//# sourceMappingURL=measurement.js.map\n","import { getClient, getCurrentScope } from '../currentScopes.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { createSpanEnvelope } from '../envelope.js';\nimport { getMetricSummaryJsonForSpan } from '../metrics/metric-summary.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_PROFILE_ID, SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME } from '../semanticAttributes.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { dropUndefinedKeys } from '../utils-hoist/object.js';\nimport { generateTraceId, generateSpanId } from '../utils-hoist/propagationContext.js';\nimport { timestampInSeconds } from '../utils-hoist/time.js';\nimport { TRACE_FLAG_SAMPLED, TRACE_FLAG_NONE, spanTimeInputToSeconds, getStatusMessage, getRootSpan, spanToJSON, getSpanDescendants, spanToTransactionTraceContext } from '../utils/spanUtils.js';\nimport { getDynamicSamplingContextFromSpan } from './dynamicSamplingContext.js';\nimport { logSpanEnd } from './logSpans.js';\nimport { timedEventsToMeasurements } from './measurement.js';\nimport { getCapturedScopesOnSpan } from './utils.js';\n\nconst MAX_SPAN_COUNT = 1000;\n\n/**\n * Span contains all data about a span\n */\nclass SentrySpan  {\n\n  /** Epoch timestamp in seconds when the span started. */\n\n  /** Epoch timestamp in seconds when the span ended. */\n\n  /** Internal keeper of the status */\n\n  /** The timed events added to this span. */\n\n  /** if true, treat span as a standalone span (not part of a transaction) */\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startSpan()`\n   * or other span methods.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(spanContext = {}) {\n    this._traceId = spanContext.traceId || generateTraceId();\n    this._spanId = spanContext.spanId || generateSpanId();\n    this._startTime = spanContext.startTimestamp || timestampInSeconds();\n\n    this._attributes = {};\n    this.setAttributes({\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'manual',\n      [SEMANTIC_ATTRIBUTE_SENTRY_OP]: spanContext.op,\n      ...spanContext.attributes,\n    });\n\n    this._name = spanContext.name;\n\n    if (spanContext.parentSpanId) {\n      this._parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this._sampled = spanContext.sampled;\n    }\n    if (spanContext.endTimestamp) {\n      this._endTime = spanContext.endTimestamp;\n    }\n\n    this._events = [];\n\n    this._isStandaloneSpan = spanContext.isStandalone;\n\n    // If the span is already ended, ensure we finalize the span immediately\n    if (this._endTime) {\n      this._onSpanEnded();\n    }\n  }\n\n  /**\n   * This should generally not be used,\n   * but it is needed for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n   addLink(_link) {\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but it is needed for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n   addLinks(_links) {\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but it is needed for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n   recordException(_exception, _time) {\n    // noop\n  }\n\n  /** @inheritdoc */\n   spanContext() {\n    const { _spanId: spanId, _traceId: traceId, _sampled: sampled } = this;\n    return {\n      spanId,\n      traceId,\n      traceFlags: sampled ? TRACE_FLAG_SAMPLED : TRACE_FLAG_NONE,\n    };\n  }\n\n  /** @inheritdoc */\n   setAttribute(key, value) {\n    if (value === undefined) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._attributes[key];\n    } else {\n      this._attributes[key] = value;\n    }\n\n    return this;\n  }\n\n  /** @inheritdoc */\n   setAttributes(attributes) {\n    Object.keys(attributes).forEach(key => this.setAttribute(key, attributes[key]));\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but we need it for browser tracing where we want to adjust the start time afterwards.\n   * USE THIS WITH CAUTION!\n   *\n   * @hidden\n   * @internal\n   */\n   updateStartTime(timeInput) {\n    this._startTime = spanTimeInputToSeconds(timeInput);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setStatus(value) {\n    this._status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateName(name) {\n    this._name = name;\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'custom');\n    return this;\n  }\n\n  /** @inheritdoc */\n   end(endTimestamp) {\n    // If already ended, skip\n    if (this._endTime) {\n      return;\n    }\n\n    this._endTime = spanTimeInputToSeconds(endTimestamp);\n    logSpanEnd(this);\n\n    this._onSpanEnded();\n  }\n\n  /**\n   * Get JSON representation of this span.\n   *\n   * @hidden\n   * @internal This method is purely for internal purposes and should not be used outside\n   * of SDK code. If you need to get a JSON representation of a span,\n   * use `spanToJSON(span)` instead.\n   */\n   getSpanJSON() {\n    return dropUndefinedKeys({\n      data: this._attributes,\n      description: this._name,\n      op: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP],\n      parent_span_id: this._parentSpanId,\n      span_id: this._spanId,\n      start_timestamp: this._startTime,\n      status: getStatusMessage(this._status),\n      timestamp: this._endTime,\n      trace_id: this._traceId,\n      origin: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] ,\n      _metrics_summary: getMetricSummaryJsonForSpan(this),\n      profile_id: this._attributes[SEMANTIC_ATTRIBUTE_PROFILE_ID] ,\n      exclusive_time: this._attributes[SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME] ,\n      measurements: timedEventsToMeasurements(this._events),\n      is_segment: (this._isStandaloneSpan && getRootSpan(this) === this) || undefined,\n      segment_id: this._isStandaloneSpan ? getRootSpan(this).spanContext().spanId : undefined,\n    });\n  }\n\n  /** @inheritdoc */\n   isRecording() {\n    return !this._endTime && !!this._sampled;\n  }\n\n  /**\n   * @inheritdoc\n   */\n   addEvent(\n    name,\n    attributesOrStartTime,\n    startTime,\n  ) {\n    DEBUG_BUILD && logger.log('[Tracing] Adding an event to span:', name);\n\n    const time = isSpanTimeInput(attributesOrStartTime) ? attributesOrStartTime : startTime || timestampInSeconds();\n    const attributes = isSpanTimeInput(attributesOrStartTime) ? {} : attributesOrStartTime || {};\n\n    const event = {\n      name,\n      time: spanTimeInputToSeconds(time),\n      attributes,\n    };\n\n    this._events.push(event);\n\n    return this;\n  }\n\n  /**\n   * This method should generally not be used,\n   * but for now we need a way to publicly check if the `_isStandaloneSpan` flag is set.\n   * USE THIS WITH CAUTION!\n   * @internal\n   * @hidden\n   * @experimental\n   */\n   isStandaloneSpan() {\n    return !!this._isStandaloneSpan;\n  }\n\n  /** Emit `spanEnd` when the span is ended. */\n   _onSpanEnded() {\n    const client = getClient();\n    if (client) {\n      client.emit('spanEnd', this);\n    }\n\n    // A segment span is basically the root span of a local span tree.\n    // So for now, this is either what we previously refer to as the root span,\n    // or a standalone span.\n    const isSegmentSpan = this._isStandaloneSpan || this === getRootSpan(this);\n\n    if (!isSegmentSpan) {\n      return;\n    }\n\n    // if this is a standalone span, we send it immediately\n    if (this._isStandaloneSpan) {\n      if (this._sampled) {\n        sendSpanEnvelope(createSpanEnvelope([this], client));\n      } else {\n        DEBUG_BUILD &&\n          logger.log('[Tracing] Discarding standalone span because its trace was not chosen to be sampled.');\n        if (client) {\n          client.recordDroppedEvent('sample_rate', 'span');\n        }\n      }\n      return;\n    }\n\n    const transactionEvent = this._convertSpanToTransaction();\n    if (transactionEvent) {\n      const scope = getCapturedScopesOnSpan(this).scope || getCurrentScope();\n      scope.captureEvent(transactionEvent);\n    }\n  }\n\n  /**\n   * Finish the transaction & prepare the event to send to Sentry.\n   */\n   _convertSpanToTransaction() {\n    // We can only convert finished spans\n    if (!isFullFinishedSpan(spanToJSON(this))) {\n      return undefined;\n    }\n\n    if (!this._name) {\n      DEBUG_BUILD && logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this._name = '<unlabeled transaction>';\n    }\n\n    const { scope: capturedSpanScope, isolationScope: capturedSpanIsolationScope } = getCapturedScopesOnSpan(this);\n    const scope = capturedSpanScope || getCurrentScope();\n    const client = scope.getClient() || getClient();\n\n    if (this._sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      DEBUG_BUILD && logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    // The transaction span itself as well as any potential standalone spans should be filtered out\n    const finishedSpans = getSpanDescendants(this).filter(span => span !== this && !isStandaloneSpan(span));\n\n    const spans = finishedSpans.map(span => spanToJSON(span)).filter(isFullFinishedSpan);\n\n    const source = this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] ;\n\n    // remove internal root span attributes we don't need to send.\n    /* eslint-disable @typescript-eslint/no-dynamic-delete */\n    delete this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME];\n    spans.forEach(span => {\n      span.data && delete span.data[SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME];\n    });\n    // eslint-enabled-next-line @typescript-eslint/no-dynamic-delete\n\n    const transaction = {\n      contexts: {\n        trace: spanToTransactionTraceContext(this),\n      },\n      spans:\n        // spans.sort() mutates the array, but `spans` is already a copy so we can safely do this here\n        // we do not use spans anymore after this point\n        spans.length > MAX_SPAN_COUNT\n          ? spans.sort((a, b) => a.start_timestamp - b.start_timestamp).slice(0, MAX_SPAN_COUNT)\n          : spans,\n      start_timestamp: this._startTime,\n      timestamp: this._endTime,\n      transaction: this._name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        capturedSpanScope,\n        capturedSpanIsolationScope,\n        ...dropUndefinedKeys({\n          dynamicSamplingContext: getDynamicSamplingContextFromSpan(this),\n        }),\n      },\n      _metrics_summary: getMetricSummaryJsonForSpan(this),\n      ...(source && {\n        transaction_info: {\n          source,\n        },\n      }),\n    };\n\n    const measurements = timedEventsToMeasurements(this._events);\n    const hasMeasurements = measurements && Object.keys(measurements).length;\n\n    if (hasMeasurements) {\n      DEBUG_BUILD &&\n        logger.log(\n          '[Measurements] Adding measurements to transaction event',\n          JSON.stringify(measurements, undefined, 2),\n        );\n      transaction.measurements = measurements;\n    }\n\n    return transaction;\n  }\n}\n\nfunction isSpanTimeInput(value) {\n  return (value && typeof value === 'number') || value instanceof Date || Array.isArray(value);\n}\n\n// We want to filter out any incomplete SpanJSON objects\nfunction isFullFinishedSpan(input) {\n  return !!input.start_timestamp && !!input.timestamp && !!input.span_id && !!input.trace_id;\n}\n\n/** `SentrySpan`s can be sent as a standalone span rather than belonging to a transaction */\nfunction isStandaloneSpan(span) {\n  return span instanceof SentrySpan && span.isStandaloneSpan();\n}\n\n/**\n * Sends a `SpanEnvelope`.\n *\n * Note: If the envelope's spans are dropped, e.g. via `beforeSendSpan`,\n * the envelope will not be sent either.\n */\nfunction sendSpanEnvelope(envelope) {\n  const client = getClient();\n  if (!client) {\n    return;\n  }\n\n  const spanItems = envelope[1];\n  if (!spanItems || spanItems.length === 0) {\n    client.recordDroppedEvent('before_send', 'span');\n    return;\n  }\n\n  // sendEnvelope should not throw\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  client.sendEnvelope(envelope);\n}\n\nexport { SentrySpan };\n//# sourceMappingURL=sentrySpan.js.map\n","import { getMainCarrier } from '../carrier.js';\nimport { withScope, getCurrentScope, getIsolationScope, getClient } from '../currentScopes.js';\nimport { getAsyncContextStrategy } from '../asyncContext/index.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE } from '../semanticAttributes.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { generateTraceId } from '../utils-hoist/propagationContext.js';\nimport { propagationContextFromHeaders } from '../utils-hoist/tracing.js';\nimport { handleCallbackErrors } from '../utils/handleCallbackErrors.js';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled.js';\nimport { _setSpanForScope, _getSpanForScope } from '../utils/spanOnScope.js';\nimport { spanToJSON, addChildSpanToSpan, spanIsSampled, spanTimeInputToSeconds, getRootSpan } from '../utils/spanUtils.js';\nimport { getDynamicSamplingContextFromSpan, freezeDscOnSpan } from './dynamicSamplingContext.js';\nimport { logSpanStart } from './logSpans.js';\nimport { sampleSpan } from './sampling.js';\nimport { SentryNonRecordingSpan } from './sentryNonRecordingSpan.js';\nimport { SentrySpan } from './sentrySpan.js';\nimport { SPAN_STATUS_ERROR } from './spanstatus.js';\nimport { setCapturedScopesOnSpan } from './utils.js';\n\nconst SUPPRESS_TRACING_KEY = '__SENTRY_SUPPRESS_TRACING__';\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * If you want to create a span that is not set as active, use {@link startInactiveSpan}.\n *\n * You'll always get a span passed to the callback,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nfunction startSpan(options, callback) {\n  const acs = getAcs();\n  if (acs.startSpan) {\n    return acs.startSpan(options, callback);\n  }\n\n  const spanArguments = parseSentrySpanArguments(options);\n  const { forceTransaction, parentSpan: customParentSpan } = options;\n\n  return withScope(options.scope, () => {\n    // If `options.parentSpan` is defined, we want to wrap the callback in `withActiveSpan`\n    const wrapper = getActiveSpanWrapper(customParentSpan);\n\n    return wrapper(() => {\n      const scope = getCurrentScope();\n      const parentSpan = getParentSpan(scope);\n\n      const shouldSkipSpan = options.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? new SentryNonRecordingSpan()\n        : createChildOrRootSpan({\n            parentSpan,\n            spanArguments,\n            forceTransaction,\n            scope,\n          });\n\n      _setSpanForScope(scope, activeSpan);\n\n      return handleCallbackErrors(\n        () => callback(activeSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet, and the span is not yet finished\n          const { status } = spanToJSON(activeSpan);\n          if (activeSpan.isRecording() && (!status || status === 'ok')) {\n            activeSpan.setStatus({ code: SPAN_STATUS_ERROR, message: 'internal_error' });\n          }\n        },\n        () => activeSpan.end(),\n      );\n    });\n  });\n}\n\n/**\n * Similar to `Sentry.startSpan`. Wraps a function with a transaction/span, but does not finish the span\n * after the function is done automatically. You'll have to call `span.end()` manually.\n *\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * You'll always get a span passed to the callback,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nfunction startSpanManual(options, callback) {\n  const acs = getAcs();\n  if (acs.startSpanManual) {\n    return acs.startSpanManual(options, callback);\n  }\n\n  const spanArguments = parseSentrySpanArguments(options);\n  const { forceTransaction, parentSpan: customParentSpan } = options;\n\n  return withScope(options.scope, () => {\n    // If `options.parentSpan` is defined, we want to wrap the callback in `withActiveSpan`\n    const wrapper = getActiveSpanWrapper(customParentSpan);\n\n    return wrapper(() => {\n      const scope = getCurrentScope();\n      const parentSpan = getParentSpan(scope);\n\n      const shouldSkipSpan = options.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? new SentryNonRecordingSpan()\n        : createChildOrRootSpan({\n            parentSpan,\n            spanArguments,\n            forceTransaction,\n            scope,\n          });\n\n      _setSpanForScope(scope, activeSpan);\n\n      function finishAndSetSpan() {\n        activeSpan.end();\n      }\n\n      return handleCallbackErrors(\n        () => callback(activeSpan, finishAndSetSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet, and the span is not yet finished\n          const { status } = spanToJSON(activeSpan);\n          if (activeSpan.isRecording() && (!status || status === 'ok')) {\n            activeSpan.setStatus({ code: SPAN_STATUS_ERROR, message: 'internal_error' });\n          }\n        },\n      );\n    });\n  });\n}\n\n/**\n * Creates a span. This span is not set as active, so will not get automatic instrumentation spans\n * as children or be able to be accessed via `Sentry.getActiveSpan()`.\n *\n * If you want to create a span that is set as active, use {@link startSpan}.\n *\n * This function will always return a span,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nfunction startInactiveSpan(options) {\n  const acs = getAcs();\n  if (acs.startInactiveSpan) {\n    return acs.startInactiveSpan(options);\n  }\n\n  const spanArguments = parseSentrySpanArguments(options);\n  const { forceTransaction, parentSpan: customParentSpan } = options;\n\n  // If `options.scope` is defined, we use this as as a wrapper,\n  // If `options.parentSpan` is defined, we want to wrap the callback in `withActiveSpan`\n  const wrapper = options.scope\n    ? (callback) => withScope(options.scope, callback)\n    : customParentSpan !== undefined\n      ? (callback) => withActiveSpan(customParentSpan, callback)\n      : (callback) => callback();\n\n  return wrapper(() => {\n    const scope = getCurrentScope();\n    const parentSpan = getParentSpan(scope);\n\n    const shouldSkipSpan = options.onlyIfParent && !parentSpan;\n\n    if (shouldSkipSpan) {\n      return new SentryNonRecordingSpan();\n    }\n\n    return createChildOrRootSpan({\n      parentSpan,\n      spanArguments,\n      forceTransaction,\n      scope,\n    });\n  });\n}\n\n/**\n * Continue a trace from `sentry-trace` and `baggage` values.\n * These values can be obtained from incoming request headers, or in the browser from `<meta name=\"sentry-trace\">`\n * and `<meta name=\"baggage\">` HTML tags.\n *\n * Spans started with `startSpan`, `startSpanManual` and `startInactiveSpan`, within the callback will automatically\n * be attached to the incoming trace.\n */\nconst continueTrace = (\n  {\n    sentryTrace,\n    baggage,\n  }\n\n,\n  callback,\n) => {\n  return withScope(scope => {\n    const propagationContext = propagationContextFromHeaders(sentryTrace, baggage);\n    scope.setPropagationContext(propagationContext);\n    return callback();\n  });\n};\n\n/**\n * Forks the current scope and sets the provided span as active span in the context of the provided callback. Can be\n * passed `null` to start an entirely new span tree.\n *\n * @param span Spans started in the context of the provided callback will be children of this span. If `null` is passed,\n * spans started within the callback will not be attached to a parent span.\n * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.\n * @returns the value returned from the provided callback function.\n */\nfunction withActiveSpan(span, callback) {\n  const acs = getAcs();\n  if (acs.withActiveSpan) {\n    return acs.withActiveSpan(span, callback);\n  }\n\n  return withScope(scope => {\n    _setSpanForScope(scope, span || undefined);\n    return callback(scope);\n  });\n}\n\n/** Suppress tracing in the given callback, ensuring no spans are generated inside of it. */\nfunction suppressTracing(callback) {\n  const acs = getAcs();\n\n  if (acs.suppressTracing) {\n    return acs.suppressTracing(callback);\n  }\n\n  return withScope(scope => {\n    scope.setSDKProcessingMetadata({ [SUPPRESS_TRACING_KEY]: true });\n    return callback();\n  });\n}\n\n/**\n * Starts a new trace for the duration of the provided callback. Spans started within the\n * callback will be part of the new trace instead of a potentially previously started trace.\n *\n * Important: Only use this function if you want to override the default trace lifetime and\n * propagation mechanism of the SDK for the duration and scope of the provided callback.\n * The newly created trace will also be the root of a new distributed trace, for example if\n * you make http requests within the callback.\n * This function might be useful if the operation you want to instrument should not be part\n * of a potentially ongoing trace.\n *\n * Default behavior:\n * - Server-side: A new trace is started for each incoming request.\n * - Browser: A new trace is started for each page our route. Navigating to a new route\n *            or page will automatically create a new trace.\n */\nfunction startNewTrace(callback) {\n  return withScope(scope => {\n    scope.setPropagationContext({ traceId: generateTraceId() });\n    DEBUG_BUILD && logger.info(`Starting a new trace with id ${scope.getPropagationContext().traceId}`);\n    return withActiveSpan(null, callback);\n  });\n}\n\nfunction createChildOrRootSpan({\n  parentSpan,\n  spanArguments,\n  forceTransaction,\n  scope,\n}\n\n) {\n  if (!hasTracingEnabled()) {\n    return new SentryNonRecordingSpan();\n  }\n\n  const isolationScope = getIsolationScope();\n\n  let span;\n  if (parentSpan && !forceTransaction) {\n    span = _startChildSpan(parentSpan, scope, spanArguments);\n    addChildSpanToSpan(parentSpan, span);\n  } else if (parentSpan) {\n    // If we forced a transaction but have a parent span, make sure to continue from the parent span, not the scope\n    const dsc = getDynamicSamplingContextFromSpan(parentSpan);\n    const { traceId, spanId: parentSpanId } = parentSpan.spanContext();\n    const parentSampled = spanIsSampled(parentSpan);\n\n    span = _startRootSpan(\n      {\n        traceId,\n        parentSpanId,\n        ...spanArguments,\n      },\n      scope,\n      parentSampled,\n    );\n\n    freezeDscOnSpan(span, dsc);\n  } else {\n    const {\n      traceId,\n      dsc,\n      parentSpanId,\n      sampled: parentSampled,\n    } = {\n      ...isolationScope.getPropagationContext(),\n      ...scope.getPropagationContext(),\n    };\n\n    span = _startRootSpan(\n      {\n        traceId,\n        parentSpanId,\n        ...spanArguments,\n      },\n      scope,\n      parentSampled,\n    );\n\n    if (dsc) {\n      freezeDscOnSpan(span, dsc);\n    }\n  }\n\n  logSpanStart(span);\n\n  setCapturedScopesOnSpan(span, scope, isolationScope);\n\n  return span;\n}\n\n/**\n * This converts StartSpanOptions to SentrySpanArguments.\n * For the most part (for now) we accept the same options,\n * but some of them need to be transformed.\n */\nfunction parseSentrySpanArguments(options) {\n  const exp = options.experimental || {};\n  const initialCtx = {\n    isStandalone: exp.standalone,\n    ...options,\n  };\n\n  if (options.startTime) {\n    const ctx = { ...initialCtx };\n    ctx.startTimestamp = spanTimeInputToSeconds(options.startTime);\n    delete ctx.startTime;\n    return ctx;\n  }\n\n  return initialCtx;\n}\n\nfunction getAcs() {\n  const carrier = getMainCarrier();\n  return getAsyncContextStrategy(carrier);\n}\n\nfunction _startRootSpan(spanArguments, scope, parentSampled) {\n  const client = getClient();\n  const options = (client && client.getOptions()) || {};\n\n  const { name = '', attributes } = spanArguments;\n  const [sampled, sampleRate] = scope.getScopeData().sdkProcessingMetadata[SUPPRESS_TRACING_KEY]\n    ? [false]\n    : sampleSpan(options, {\n        name,\n        parentSampled,\n        attributes,\n        transactionContext: {\n          name,\n          parentSampled,\n        },\n      });\n\n  const rootSpan = new SentrySpan({\n    ...spanArguments,\n    attributes: {\n      [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'custom',\n      ...spanArguments.attributes,\n    },\n    sampled,\n  });\n  if (sampleRate !== undefined) {\n    rootSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, sampleRate);\n  }\n\n  if (client) {\n    client.emit('spanStart', rootSpan);\n  }\n\n  return rootSpan;\n}\n\n/**\n * Creates a new `Span` while setting the current `Span.id` as `parentSpanId`.\n * This inherits the sampling decision from the parent span.\n */\nfunction _startChildSpan(parentSpan, scope, spanArguments) {\n  const { spanId, traceId } = parentSpan.spanContext();\n  const sampled = scope.getScopeData().sdkProcessingMetadata[SUPPRESS_TRACING_KEY] ? false : spanIsSampled(parentSpan);\n\n  const childSpan = sampled\n    ? new SentrySpan({\n        ...spanArguments,\n        parentSpanId: spanId,\n        traceId,\n        sampled,\n      })\n    : new SentryNonRecordingSpan({ traceId });\n\n  addChildSpanToSpan(parentSpan, childSpan);\n\n  const client = getClient();\n  if (client) {\n    client.emit('spanStart', childSpan);\n    // If it has an endTimestamp, it's already ended\n    if (spanArguments.endTimestamp) {\n      client.emit('spanEnd', childSpan);\n    }\n  }\n\n  return childSpan;\n}\n\nfunction getParentSpan(scope) {\n  const span = _getSpanForScope(scope) ;\n\n  if (!span) {\n    return undefined;\n  }\n\n  const client = getClient();\n  const options = client ? client.getOptions() : {};\n  if (options.parentSpanIsAlwaysRootSpan) {\n    return getRootSpan(span) ;\n  }\n\n  return span;\n}\n\nfunction getActiveSpanWrapper(parentSpan) {\n  return parentSpan !== undefined\n    ? (callback) => {\n        return withActiveSpan(parentSpan, callback);\n      }\n    : (callback) => callback();\n}\n\nexport { continueTrace, startInactiveSpan, startNewTrace, startSpan, startSpanManual, suppressTracing, withActiveSpan };\n//# sourceMappingURL=trace.js.map\n","import { getClient, getCurrentScope } from '../currentScopes.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON } from '../semanticAttributes.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { timestampInSeconds } from '../utils-hoist/time.js';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled.js';\nimport { _setSpanForScope } from '../utils/spanOnScope.js';\nimport { getActiveSpan, spanTimeInputToSeconds, getSpanDescendants, spanToJSON, removeChildSpanFromSpan } from '../utils/spanUtils.js';\nimport { SentryNonRecordingSpan } from './sentryNonRecordingSpan.js';\nimport { SPAN_STATUS_ERROR } from './spanstatus.js';\nimport { startInactiveSpan } from './trace.js';\n\nconst TRACING_DEFAULTS = {\n  idleTimeout: 1000,\n  finalTimeout: 30000,\n  childSpanTimeout: 15000,\n};\n\nconst FINISH_REASON_HEARTBEAT_FAILED = 'heartbeatFailed';\nconst FINISH_REASON_IDLE_TIMEOUT = 'idleTimeout';\nconst FINISH_REASON_FINAL_TIMEOUT = 'finalTimeout';\nconst FINISH_REASON_EXTERNAL_FINISH = 'externalFinish';\n\n/**\n * An idle span is a span that automatically finishes. It does this by tracking child spans as activities.\n * An idle span is always the active span.\n */\nfunction startIdleSpan(startSpanOptions, options = {}) {\n  // Activities store a list of active spans\n  const activities = new Map();\n\n  // We should not use heartbeat if we finished a span\n  let _finished = false;\n\n  // Timer that tracks idleTimeout\n  let _idleTimeoutID;\n\n  // The reason why the span was finished\n  let _finishReason = FINISH_REASON_EXTERNAL_FINISH;\n\n  let _autoFinishAllowed = !options.disableAutoFinish;\n\n  const _cleanupHooks = [];\n\n  const {\n    idleTimeout = TRACING_DEFAULTS.idleTimeout,\n    finalTimeout = TRACING_DEFAULTS.finalTimeout,\n    childSpanTimeout = TRACING_DEFAULTS.childSpanTimeout,\n    beforeSpanEnd,\n  } = options;\n\n  const client = getClient();\n\n  if (!client || !hasTracingEnabled()) {\n    return new SentryNonRecordingSpan();\n  }\n\n  const scope = getCurrentScope();\n  const previousActiveSpan = getActiveSpan();\n  const span = _startIdleSpan(startSpanOptions);\n\n  // We patch span.end to ensure we can run some things before the span is ended\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  span.end = new Proxy(span.end, {\n    apply(target, thisArg, args) {\n      if (beforeSpanEnd) {\n        beforeSpanEnd(span);\n      }\n\n      // Just ensuring that this keeps working, even if we ever have more arguments here\n      const [definedEndTimestamp, ...rest] = args;\n      const timestamp = definedEndTimestamp || timestampInSeconds();\n      const spanEndTimestamp = spanTimeInputToSeconds(timestamp);\n\n      // Ensure we end with the last span timestamp, if possible\n      const spans = getSpanDescendants(span).filter(child => child !== span);\n\n      // If we have no spans, we just end, nothing else to do here\n      if (!spans.length) {\n        onIdleSpanEnded(spanEndTimestamp);\n        return Reflect.apply(target, thisArg, [spanEndTimestamp, ...rest]);\n      }\n\n      const childEndTimestamps = spans\n        .map(span => spanToJSON(span).timestamp)\n        .filter(timestamp => !!timestamp) ;\n      const latestSpanEndTimestamp = childEndTimestamps.length ? Math.max(...childEndTimestamps) : undefined;\n\n      // In reality this should always exist here, but type-wise it may be undefined...\n      const spanStartTimestamp = spanToJSON(span).start_timestamp;\n\n      // The final endTimestamp should:\n      // * Never be before the span start timestamp\n      // * Be the latestSpanEndTimestamp, if there is one, and it is smaller than the passed span end timestamp\n      // * Otherwise be the passed end timestamp\n      // Final timestamp can never be after finalTimeout\n      const endTimestamp = Math.min(\n        spanStartTimestamp ? spanStartTimestamp + finalTimeout / 1000 : Infinity,\n        Math.max(spanStartTimestamp || -Infinity, Math.min(spanEndTimestamp, latestSpanEndTimestamp || Infinity)),\n      );\n\n      onIdleSpanEnded(endTimestamp);\n      return Reflect.apply(target, thisArg, [endTimestamp, ...rest]);\n    },\n  });\n\n  /**\n   * Cancels the existing idle timeout, if there is one.\n   */\n  function _cancelIdleTimeout() {\n    if (_idleTimeoutID) {\n      clearTimeout(_idleTimeoutID);\n      _idleTimeoutID = undefined;\n    }\n  }\n\n  /**\n   * Restarts idle timeout, if there is no running idle timeout it will start one.\n   */\n  function _restartIdleTimeout(endTimestamp) {\n    _cancelIdleTimeout();\n    _idleTimeoutID = setTimeout(() => {\n      if (!_finished && activities.size === 0 && _autoFinishAllowed) {\n        _finishReason = FINISH_REASON_IDLE_TIMEOUT;\n        span.end(endTimestamp);\n      }\n    }, idleTimeout);\n  }\n\n  /**\n   * Restarts child span timeout, if there is none running it will start one.\n   */\n  function _restartChildSpanTimeout(endTimestamp) {\n    _idleTimeoutID = setTimeout(() => {\n      if (!_finished && _autoFinishAllowed) {\n        _finishReason = FINISH_REASON_HEARTBEAT_FAILED;\n        span.end(endTimestamp);\n      }\n    }, childSpanTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n  function _pushActivity(spanId) {\n    _cancelIdleTimeout();\n    activities.set(spanId, true);\n\n    const endTimestamp = timestampInSeconds();\n    // We need to add the timeout here to have the real endtimestamp of the idle span\n    // Remember timestampInSeconds is in seconds, timeout is in ms\n    _restartChildSpanTimeout(endTimestamp + childSpanTimeout / 1000);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n  function _popActivity(spanId) {\n    if (activities.has(spanId)) {\n      activities.delete(spanId);\n    }\n\n    if (activities.size === 0) {\n      const endTimestamp = timestampInSeconds();\n      // We need to add the timeout here to have the real endtimestamp of the idle span\n      // Remember timestampInSeconds is in seconds, timeout is in ms\n      _restartIdleTimeout(endTimestamp + idleTimeout / 1000);\n    }\n  }\n\n  function onIdleSpanEnded(endTimestamp) {\n    _finished = true;\n    activities.clear();\n\n    _cleanupHooks.forEach(cleanup => cleanup());\n\n    _setSpanForScope(scope, previousActiveSpan);\n\n    const spanJSON = spanToJSON(span);\n\n    const { start_timestamp: startTimestamp } = spanJSON;\n    // This should never happen, but to make TS happy...\n    if (!startTimestamp) {\n      return;\n    }\n\n    const attributes = spanJSON.data || {};\n    if (!attributes[SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON]) {\n      span.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON, _finishReason);\n    }\n\n    logger.log(`[Tracing] Idle span \"${spanJSON.op}\" finished`);\n\n    const childSpans = getSpanDescendants(span).filter(child => child !== span);\n\n    let discardedSpans = 0;\n    childSpans.forEach(childSpan => {\n      // We cancel all pending spans with status \"cancelled\" to indicate the idle span was finished early\n      if (childSpan.isRecording()) {\n        childSpan.setStatus({ code: SPAN_STATUS_ERROR, message: 'cancelled' });\n        childSpan.end(endTimestamp);\n        DEBUG_BUILD &&\n          logger.log('[Tracing] Cancelling span since span ended early', JSON.stringify(childSpan, undefined, 2));\n      }\n\n      const childSpanJSON = spanToJSON(childSpan);\n      const { timestamp: childEndTimestamp = 0, start_timestamp: childStartTimestamp = 0 } = childSpanJSON;\n\n      const spanStartedBeforeIdleSpanEnd = childStartTimestamp <= endTimestamp;\n\n      // Add a delta with idle timeout so that we prevent false positives\n      const timeoutWithMarginOfError = (finalTimeout + idleTimeout) / 1000;\n      const spanEndedBeforeFinalTimeout = childEndTimestamp - childStartTimestamp <= timeoutWithMarginOfError;\n\n      if (DEBUG_BUILD) {\n        const stringifiedSpan = JSON.stringify(childSpan, undefined, 2);\n        if (!spanStartedBeforeIdleSpanEnd) {\n          logger.log('[Tracing] Discarding span since it happened after idle span was finished', stringifiedSpan);\n        } else if (!spanEndedBeforeFinalTimeout) {\n          logger.log('[Tracing] Discarding span since it finished after idle span final timeout', stringifiedSpan);\n        }\n      }\n\n      if (!spanEndedBeforeFinalTimeout || !spanStartedBeforeIdleSpanEnd) {\n        removeChildSpanFromSpan(span, childSpan);\n        discardedSpans++;\n      }\n    });\n\n    if (discardedSpans > 0) {\n      span.setAttribute('sentry.idle_span_discarded_spans', discardedSpans);\n    }\n  }\n\n  _cleanupHooks.push(\n    client.on('spanStart', startedSpan => {\n      // If we already finished the idle span,\n      // or if this is the idle span itself being started,\n      // or if the started span has already been closed,\n      // we don't care about it for activity\n      if (_finished || startedSpan === span || !!spanToJSON(startedSpan).timestamp) {\n        return;\n      }\n\n      const allSpans = getSpanDescendants(span);\n\n      // If the span that was just started is a child of the idle span, we should track it\n      if (allSpans.includes(startedSpan)) {\n        _pushActivity(startedSpan.spanContext().spanId);\n      }\n    }),\n  );\n\n  _cleanupHooks.push(\n    client.on('spanEnd', endedSpan => {\n      if (_finished) {\n        return;\n      }\n\n      _popActivity(endedSpan.spanContext().spanId);\n    }),\n  );\n\n  _cleanupHooks.push(\n    client.on('idleSpanEnableAutoFinish', spanToAllowAutoFinish => {\n      if (spanToAllowAutoFinish === span) {\n        _autoFinishAllowed = true;\n        _restartIdleTimeout();\n\n        if (activities.size) {\n          _restartChildSpanTimeout();\n        }\n      }\n    }),\n  );\n\n  // We only start the initial idle timeout if we are not delaying the auto finish\n  if (!options.disableAutoFinish) {\n    _restartIdleTimeout();\n  }\n\n  setTimeout(() => {\n    if (!_finished) {\n      span.setStatus({ code: SPAN_STATUS_ERROR, message: 'deadline_exceeded' });\n      _finishReason = FINISH_REASON_FINAL_TIMEOUT;\n      span.end();\n    }\n  }, finalTimeout);\n\n  return span;\n}\n\nfunction _startIdleSpan(options) {\n  const span = startInactiveSpan(options);\n\n  _setSpanForScope(getCurrentScope(), span);\n\n  DEBUG_BUILD && logger.log('[Tracing] Started span is an idle span');\n\n  return span;\n}\n\nexport { TRACING_DEFAULTS, startIdleSpan };\n//# sourceMappingURL=idleSpan.js.map\n","import { makeDsn, dsnToString } from './utils-hoist/dsn.js';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  const params = {\n    sentry_version: SENTRY_API_VERSION,\n  };\n\n  if (dsn.publicKey) {\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    params.sentry_key = dsn.publicKey;\n  }\n\n  if (sdkInfo) {\n    params.sentry_client = `${sdkInfo.name}/${sdkInfo.version}`;\n  }\n\n  return new URLSearchParams(params).toString();\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(dsn, tunnel, sdkInfo) {\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint };\n//# sourceMappingURL=api.js.map\n","import { getClient } from './currentScopes.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { logger } from './utils-hoist/logger.js';\n\nconst installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preserve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations) {\n  const integrationsByName = {};\n\n  integrations.forEach((currentInstance) => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.values(integrationsByName);\n}\n\n/** Gets integrations to install */\nfunction getIntegrationsToSetup(options) {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach((integration) => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations;\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    const resolvedUserIntegrations = userIntegrations(defaultIntegrations);\n    integrations = Array.isArray(resolvedUserIntegrations) ? resolvedUserIntegrations : [resolvedUserIntegrations];\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = finalIntegrations.findIndex(integration => integration.name === 'Debug');\n  if (debugIndex > -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1) ;\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(client, integrations) {\n  const integrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nfunction afterSetupIntegrations(client, integrations) {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration && integration.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nfunction setupIntegration(client, integration, integrationIndex) {\n  if (integrationIndex[integration.name]) {\n    DEBUG_BUILD && logger.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1 && typeof integration.setupOnce === 'function') {\n    integration.setupOnce();\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) ;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) ;\n\n    const processor = Object.assign((event, hint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current scope's client. */\nfunction addIntegration(integration) {\n  const client = getClient();\n\n  if (!client) {\n    DEBUG_BUILD && logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nfunction defineIntegration(fn) {\n  return fn;\n}\n\nexport { addIntegration, afterSetupIntegrations, defineIntegration, getIntegrationsToSetup, installedIntegrations, setupIntegration, setupIntegrations };\n//# sourceMappingURL=integration.js.map\n","import { createEnvelope } from './envelope.js';\nimport { dateTimestampInSeconds } from './time.js';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  const clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\nexport { createClientReportEnvelope };\n//# sourceMappingURL=clientreport.js.map\n","/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n\n   constructor(\n     message,\n    logLevel = 'warn',\n  ) {\n    super(message);this.message = message;\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n\nexport { SentryError };\n//# sourceMappingURL=error.js.map\n","import { getEnvelopeEndpointWithUrlEncodedAuth } from './api.js';\nimport { getTraceContextFromScope, getCurrentScope, getIsolationScope } from './currentScopes.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope.js';\nimport { setupIntegration, afterSetupIntegrations, setupIntegrations } from './integration.js';\nimport { updateSession } from './session.js';\nimport { getDynamicSamplingContextFromScope } from './tracing/dynamicSamplingContext.js';\nimport { createClientReportEnvelope } from './utils-hoist/clientreport.js';\nimport { makeDsn, dsnToString } from './utils-hoist/dsn.js';\nimport { addItemToEnvelope, createAttachmentEnvelopeItem } from './utils-hoist/envelope.js';\nimport { SentryError } from './utils-hoist/error.js';\nimport { isPrimitive, isThenable, isPlainObject, isParameterizedString } from './utils-hoist/is.js';\nimport { logger, consoleSandbox } from './utils-hoist/logger.js';\nimport { uuid4, checkOrSetAlreadyCaught } from './utils-hoist/misc.js';\nimport { resolvedSyncPromise, SyncPromise, rejectedSyncPromise } from './utils-hoist/syncpromise.js';\nimport { parseSampleRate } from './utils/parseSampleRate.js';\nimport { prepareEvent } from './utils/prepareEvent.js';\nimport { showSpanDropWarning } from './utils/spanUtils.js';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /** Options passed to the SDK. */\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n\n  /** Array of set up integrations. */\n\n  /** Number of calls being processed */\n\n  /** Holds flushable  */\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {\n    this._options = options;\n    this._integrations = {};\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(\n        this._dsn,\n        options.tunnel,\n        options._metadata ? options._metadata.sdk : undefined,\n      );\n      this._transport = options.transport({\n        tunnel: this._options.tunnel,\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n\n    // TODO(v9): Remove this deprecation warning\n    const tracingOptions = ['enableTracing', 'tracesSampleRate', 'tracesSampler'] ;\n    const undefinedOption = tracingOptions.find(option => option in options && options[option] == undefined);\n    if (undefinedOption) {\n      consoleSandbox(() => {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `[Sentry] Deprecation warning: \\`${undefinedOption}\\` is set to undefined, which leads to tracing being enabled. In v9, a value of \\`undefined\\` will result in tracing being disabled.`,\n        );\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureException(exception, hint, scope) {\n    const eventId = uuid4();\n\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return eventId;\n    }\n\n    const hintWithEventId = {\n      event_id: eventId,\n      ...hint,\n    };\n\n    this._process(\n      this.eventFromException(exception, hintWithEventId).then(event =>\n        this._captureEvent(event, hintWithEventId, scope),\n      ),\n    );\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    level,\n    hint,\n    currentScope,\n  ) {\n    const hintWithEventId = {\n      event_id: uuid4(),\n      ...hint,\n    };\n\n    const eventMessage = isParameterizedString(message) ? message : String(message);\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(eventMessage, level, hintWithEventId)\n      : this.eventFromException(message, hintWithEventId);\n\n    this._process(promisedEvent.then(event => this._captureEvent(event, hintWithEventId, currentScope)));\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, currentScope) {\n    const eventId = uuid4();\n\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return eventId;\n    }\n\n    const hintWithEventId = {\n      event_id: eventId,\n      ...hint,\n    };\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope = sdkProcessingMetadata.capturedSpanScope;\n\n    this._process(this._captureEvent(event, hintWithEventId, capturedSpanScope || currentScope));\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!(typeof session.release === 'string')) {\n      DEBUG_BUILD && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata\n   *\n   * @return The metadata of the SDK\n   */\n   getSdkMetadata() {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    const transport = this._transport;\n    if (transport) {\n      this.emit('flush');\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      this.emit('close');\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n   getEventProcessors() {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n   addEventProcessor(eventProcessor) {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /** @inheritdoc */\n   init() {\n    if (\n      this._isEnabled() ||\n      // Force integrations to be setup even if no DSN was set when we have\n      // Spotlight enabled. This is particularly important for browser as we\n      // don't support the `spotlight` option there and rely on the users\n      // adding the `spotlightBrowserIntegration()` to their integrations which\n      // wouldn't get initialized with the check below when there's no DSN set.\n      this._options.integrations.some(({ name }) => name.startsWith('Spotlight'))\n    ) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n   getIntegrationByName(integrationName) {\n    return this._integrations[integrationName] ;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addIntegration(integration) {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    setupIntegration(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      afterSetupIntegrations(this, [integration]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(env, createAttachmentEnvelopeItem(attachment));\n    }\n\n    const promise = this.sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category, eventOrCount) {\n    if (this._options.sendClientReports) {\n      // TODO v9: We do not need the `event` passed as third argument anymore, and can possibly remove this overload\n      // If event is passed as third argument, we assume this is a count of 1\n      const count = typeof eventOrCount === 'number' ? eventOrCount : 1;\n\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && logger.log(`Recording outcome: \"${key}\"${count > 1 ? ` (${count} times)` : ''}`);\n      this._outcomes[key] = (this._outcomes[key] || 0) + count;\n    }\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   on(hook, callback) {\n    const hooks = (this._hooks[hook] = this._hooks[hook] || []);\n\n    // @ts-expect-error We assume the types are correct\n    hooks.push(callback);\n\n    // This function returns a callback execution handler that, when invoked,\n    // deregisters a callback. This is crucial for managing instances where callbacks\n    // need to be unregistered to prevent self-referencing in callback closures,\n    // ensuring proper garbage collection.\n    return () => {\n      // @ts-expect-error We assume the types are correct\n      const cbIndex = hooks.indexOf(callback);\n      if (cbIndex > -1) {\n        hooks.splice(cbIndex, 1);\n      }\n    };\n  }\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   emit(hook, ...rest) {\n    const callbacks = this._hooks[hook];\n    if (callbacks) {\n      callbacks.forEach(callback => callback(...rest));\n    }\n  }\n\n  /**\n   * @inheritdoc\n   */\n   sendEnvelope(envelope) {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && logger.error('Error while sending envelope:', reason);\n        return reason;\n      });\n    }\n\n    DEBUG_BUILD && logger.error('Transport disabled');\n\n    return resolvedSyncPromise({});\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n   _setupIntegrations() {\n    const { integrations } = this._options;\n    this._integrations = setupIntegrations(this, integrations);\n    afterSetupIntegrations(this, integrations);\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new SyncPromise(resolve => {\n      let ticked = 0;\n      const tick = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param currentScope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(\n    event,\n    hint,\n    currentScope = getCurrentScope(),\n    isolationScope = getIsolationScope(),\n  ) {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    if (!event.type) {\n      isolationScope.setLastEventId(event.event_id || hint.event_id);\n    }\n\n    return prepareEvent(options, event, hint, currentScope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      evt.contexts = {\n        trace: getTraceContextFromScope(currentScope),\n        ...evt.contexts,\n      };\n\n      const dynamicSamplingContext = getDynamicSamplingContextFromScope(this, currentScope);\n\n      evt.sdkProcessingMetadata = {\n        dynamicSamplingContext,\n        ...evt.sdkProcessingMetadata,\n      };\n\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason ;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param currentScope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, currentScope) {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    const parsedSampleRate = typeof sampleRate === 'undefined' ? undefined : parseSampleRate(sampleRate);\n    if (isError && typeof parsedSampleRate === 'number' && Math.random() > parsedSampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanIsolationScope = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    return this._prepareEvent(event, hint, currentScope, capturedSpanIsolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(this, options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          if (isTransaction) {\n            const spans = event.spans || [];\n            // the transaction itself counts as one span, plus all the child spans that are added\n            const spanCount = 1 + spans.length;\n            this.recordDroppedEvent('before_send', 'span', spanCount);\n          }\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = currentScope && currentScope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        if (isTransaction) {\n          const spanCountBefore =\n            (processedEvent.sdkProcessingMetadata && processedEvent.sdkProcessingMetadata.spanCountBeforeProcessing) ||\n            0;\n          const spanCountAfter = processedEvent.spans ? processedEvent.spans.length : 0;\n\n          const droppedSpanCount = spanCountBefore - spanCountAfter;\n          if (droppedSpanCount > 0) {\n            this.recordDroppedEvent('before_send', 'span', droppedSpanCount);\n          }\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.entries(outcomes).map(([key, quantity]) => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity,\n      };\n    });\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    DEBUG_BUILD && logger.log('Flushing outcomes...');\n\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      DEBUG_BUILD && logger.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      DEBUG_BUILD && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult,\n  beforeSendLabel,\n) {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  client,\n  options,\n  event,\n  hint,\n) {\n  const { beforeSend, beforeSendTransaction, beforeSendSpan } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event)) {\n    if (event.spans && beforeSendSpan) {\n      const processedSpans = [];\n      for (const span of event.spans) {\n        const processedSpan = beforeSendSpan(span);\n        if (processedSpan) {\n          processedSpans.push(processedSpan);\n        } else {\n          showSpanDropWarning();\n          client.recordDroppedEvent('before_send', 'span');\n        }\n      }\n      event.spans = processedSpans;\n    }\n\n    if (beforeSendTransaction) {\n      if (event.spans) {\n        // We store the # of spans before processing in SDK metadata,\n        // so we can compare it afterwards to determine how many spans were dropped\n        const spanCountBefore = event.spans.length;\n        event.sdkProcessingMetadata = {\n          ...event.sdkProcessingMetadata,\n          spanCountBeforeProcessing: spanCountBefore,\n        };\n      }\n      return beforeSendTransaction(event, hint);\n    }\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event) {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map\n","import { getCurrentScope } from './currentScopes.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { logger, consoleSandbox } from './utils-hoist/logger.js';\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if (DEBUG_BUILD) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      consoleSandbox(() => {\n        // eslint-disable-next-line no-console\n        console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n      });\n    }\n  }\n  const scope = getCurrentScope();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  setCurrentClient(client);\n  client.init();\n  return client;\n}\n\n/**\n * Make the given client the current client.\n */\nfunction setCurrentClient(client) {\n  getCurrentScope().setClient(client);\n}\n\nexport { initAndBind, setCurrentClient };\n//# sourceMappingURL=sdk.js.map\n","import { SentryError } from './error.js';\nimport { rejectedSyncPromise, SyncPromise, resolvedSyncPromise } from './syncpromise.js';\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0] || Promise.resolve(undefined);\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexport { makePromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map\n","// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nfunction disabledUntil(limits, dataCategory) {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, dataCategory, now = Date.now()) {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5) ;\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits };\n//# sourceMappingURL=ratelimit.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { forEachEnvelopeItem, envelopeItemTypeToDataCategory, createEnvelope, serializeEnvelope } from '../utils-hoist/envelope.js';\nimport { SentryError } from '../utils-hoist/error.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { makePromiseBuffer } from '../utils-hoist/promisebuffer.js';\nimport { isRateLimited, updateRateLimits } from '../utils-hoist/ratelimit.js';\nimport { resolvedSyncPromise } from '../utils-hoist/syncpromise.js';\n\nconst DEFAULT_TRANSPORT_BUFFER_SIZE = 64;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n) {\n  let rateLimits = {};\n  const flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    const filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const dataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, dataCategory)) {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise({});\n    }\n\n    const filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          DEBUG_BUILD && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise({});\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item, type) {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item )[1] : undefined;\n}\n\nexport { DEFAULT_TRANSPORT_BUFFER_SIZE, createTransport };\n//# sourceMappingURL=base.js.map\n","/**\n * Checks whether given url points to Sentry server\n *\n * @param url url to verify\n */\nfunction isSentryRequestUrl(url, client) {\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n  return checkDsn(url, dsn) || checkTunnel(url, tunnel);\n}\n\nfunction checkTunnel(url, tunnel) {\n  if (!tunnel) {\n    return false;\n  }\n\n  return removeTrailingSlash(url) === removeTrailingSlash(tunnel);\n}\n\nfunction checkDsn(url, dsn) {\n  return dsn ? url.includes(dsn.host) : false;\n}\n\nfunction removeTrailingSlash(str) {\n  return str[str.length - 1] === '/' ? str.slice(0, -1) : str;\n}\n\nexport { isSentryRequestUrl };\n//# sourceMappingURL=isSentryRequestUrl.js.map\n","import { SDK_VERSION } from '../utils-hoist/version.js';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nfunction applySdkMetadata(options, name, names = [name], source = 'npm') {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n\nexport { applySdkMetadata };\n//# sourceMappingURL=sdkMetadata.js.map\n","import { getAsyncContextStrategy } from '../asyncContext/index.js';\nimport { getMainCarrier } from '../carrier.js';\nimport { getClient, getCurrentScope } from '../currentScopes.js';\nimport { isEnabled } from '../exports.js';\nimport '../tracing/errors.js';\nimport '../utils-hoist/version.js';\nimport '../utils-hoist/debug-build.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport '../debug-build.js';\nimport '../utils-hoist/time.js';\nimport { getActiveSpan, spanToTraceHeader } from './spanUtils.js';\nimport { TRACEPARENT_REGEXP, generateSentryTraceHeader } from '../utils-hoist/tracing.js';\nimport { getDynamicSamplingContextFromSpan, getDynamicSamplingContextFromScope } from '../tracing/dynamicSamplingContext.js';\nimport { dynamicSamplingContextToSentryBaggageHeader } from '../utils-hoist/baggage.js';\n\n/**\n * Extracts trace propagation data from the current span or from the client's scope (via transaction or propagation\n * context) and serializes it to `sentry-trace` and `baggage` values to strings. These values can be used to propagate\n * a trace via our tracing Http headers or Html `<meta>` tags.\n *\n * This function also applies some validation to the generated sentry-trace and baggage values to ensure that\n * only valid strings are returned.\n *\n * @returns an object with the tracing data values. The object keys are the name of the tracing key to be used as header\n * or meta tag name.\n */\nfunction getTraceData(options = {}) {\n  const client = getClient();\n  if (!isEnabled() || !client) {\n    return {};\n  }\n\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  if (acs.getTraceData) {\n    return acs.getTraceData(options);\n  }\n\n  const scope = getCurrentScope();\n  const span = options.span || getActiveSpan();\n  const sentryTrace = span ? spanToTraceHeader(span) : scopeToTraceHeader(scope);\n  const dsc = span ? getDynamicSamplingContextFromSpan(span) : getDynamicSamplingContextFromScope(client, scope);\n  const baggage = dynamicSamplingContextToSentryBaggageHeader(dsc);\n\n  const isValidSentryTraceHeader = TRACEPARENT_REGEXP.test(sentryTrace);\n  if (!isValidSentryTraceHeader) {\n    logger.warn('Invalid sentry-trace data. Cannot generate trace data');\n    return {};\n  }\n\n  return {\n    'sentry-trace': sentryTrace,\n    baggage,\n  };\n}\n\n/**\n * Get a sentry-trace header value for the given scope.\n */\nfunction scopeToTraceHeader(scope) {\n  // TODO(v9): Use generateSpanId() instead of spanId\n  // eslint-disable-next-line deprecation/deprecation\n  const { traceId, sampled, spanId } = scope.getPropagationContext();\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\nexport { getTraceData };\n//# sourceMappingURL=traceData.js.map\n","import { getClient, getIsolationScope } from './currentScopes.js';\nimport { consoleSandbox } from './utils-hoist/logger.js';\nimport { dateTimestampInSeconds } from './utils-hoist/time.js';\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n */\nfunction addBreadcrumb(breadcrumb, hint) {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n\n  if (!client) return;\n\n  const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } = client.getOptions();\n\n  if (maxBreadcrumbs <= 0) return;\n\n  const timestamp = dateTimestampInSeconds();\n  const mergedBreadcrumb = { timestamp, ...breadcrumb };\n  const finalBreadcrumb = beforeBreadcrumb\n    ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n    : mergedBreadcrumb;\n\n  if (finalBreadcrumb === null) return;\n\n  if (client.emit) {\n    client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n  }\n\n  isolationScope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n}\n\nexport { addBreadcrumb };\n//# sourceMappingURL=breadcrumbs.js.map\n","import { getClient } from '../currentScopes.js';\nimport { defineIntegration } from '../integration.js';\nimport { getOriginalFunction } from '../utils-hoist/object.js';\n\nlet originalFunctionToString;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        Function.prototype.toString = function ( ...args) {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() ) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch (e) {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) ;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nconst functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n\nexport { functionToStringIntegration };\n//# sourceMappingURL=functiontostring.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { defineIntegration } from '../integration.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { getEventDescription } from '../utils-hoist/misc.js';\nimport { stringMatchesSomePattern } from '../utils-hoist/string.js';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/, // The browser logs this when a ResizeObserver handler takes a bit longer. Usually this is not an actual issue though. It indicates slowness.\n  /^Cannot redefine property: googletag$/, // This is thrown when google tag manager is used in combination with an ad blocker\n  \"undefined is not an object (evaluating 'a.L')\", // Random error that happens but not actionable or noticeable to end-users.\n  'can\\'t redefine non-configurable property \"solana\"', // Probably a browser extension or custom browser (Brave) throwing this error\n  \"vv().getRestrictions is not a function. (In 'vv().getRestrictions(1,a)', 'vv().getRestrictions' is undefined)\", // Error thrown by GTM, seemingly not affecting end-users\n  \"Can't find variable: _AutofillCallbackHandler\", // Unactionable error in instagram webview https://developers.facebook.com/community/threads/320013549791141/\n  /^Non-Error promise rejection captured with value: Object Not Found Matching Id:\\d+, MethodName:simulateEvent, ParamCount:\\d+$/, // unactionable error from CEFSharp, a .NET library that embeds chromium in .NET apps\n];\n\n/** Options for the InboundFilters integration */\n\nconst INTEGRATION_NAME = 'InboundFilters';\nconst _inboundFiltersIntegration = ((options = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(event, _hint, client) {\n      const clientOptions = client.getOptions();\n      const mergedOptions = _mergeOptions(options, clientOptions);\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n}) ;\n\nconst inboundFiltersIntegration = defineIntegration(_inboundFiltersIntegration);\n\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [...(internalOptions.ignoreTransactions || []), ...(clientOptions.ignoreTransactions || [])],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isUselessError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not having an error message, error type or stacktrace.\\nEvent: ${getEventDescription(\n          event,\n        )}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event, ignoreTransactions) {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event) {\n  const possibleMessages = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    DEBUG_BUILD && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nfunction _isUselessError(event) {\n  if (event.type) {\n    // event is not an error\n    return false;\n  }\n\n  // We only want to consider events for dropping that actually have recorded exception values.\n  if (!event.exception || !event.exception.values || event.exception.values.length === 0) {\n    return false;\n  }\n\n  return (\n    // No top-level message\n    !event.message &&\n    // There are no exception values that have a stacktrace, a non-generic-Error type or value\n    !event.exception.values.some(value => value.stacktrace || (value.type && value.type !== 'Error') || value.value)\n  );\n}\n\nexport { inboundFiltersIntegration };\n//# sourceMappingURL=inboundfilters.js.map\n","import { isInstanceOf } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nfunction applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation,\n  parser,\n  maxValueLimit = 250,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException ,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation,\n  parser,\n  limit,\n  error,\n  key,\n  prevExceptions,\n  exception,\n  exceptionId,\n) {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception, exceptionId) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception,\n  source,\n  exceptionId,\n  parentId,\n) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions, maxValueLength) {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n\nexport { applyAggregateErrorsToEvent };\n//# sourceMappingURL=aggregate-errors.js.map\n","/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  return (urlPath.split(/[?#]/, 1) )[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n *\n * @deprecated This function will be removed in the next major version.\n */\n// TODO(v9): Hoist this function into the places where we use it. (as it stands only react router v6 instrumentation)\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span name\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nfunction getSanitizedUrlString(url) {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n\nexport { getNumberOfUrlSegments, getSanitizedUrlString, parseUrl, stripUrlQueryAndFragment };\n//# sourceMappingURL=url.js.map\n","import { CONSOLE_LEVELS, originalConsoleMethods } from '../logger.js';\nimport { fill } from '../object.js';\nimport { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers.js';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addConsoleInstrumentationHandler(handler) {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole() {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod) {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args) {\n        const handlerData = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n\nexport { addConsoleInstrumentationHandler };\n//# sourceMappingURL=console.js.map\n","/**\n * @deprecated This variable has been deprecated and will be removed in the next major version.\n */\nconst validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (\n    level === 'warn' ? 'warning' : ['fatal', 'error', 'warning', 'log', 'info', 'debug'].includes(level) ? level : 'log'\n  ) ;\n}\n\nexport { severityLevelFromString, validSeverityLevels };\n//# sourceMappingURL=severity.js.map\n","import { getClient, withScope } from '../currentScopes.js';\nimport { captureMessage, captureException } from '../exports.js';\nimport { defineIntegration } from '../integration.js';\nimport { addConsoleInstrumentationHandler } from '../utils-hoist/instrument/console.js';\nimport { CONSOLE_LEVELS } from '../utils-hoist/logger.js';\nimport { addExceptionMechanism } from '../utils-hoist/misc.js';\nimport { severityLevelFromString } from '../utils-hoist/severity.js';\nimport { safeJoin } from '../utils-hoist/string.js';\nimport { GLOBAL_OBJ } from '../utils-hoist/worldwide.js';\n\nconst INTEGRATION_NAME = 'CaptureConsole';\n\nconst _captureConsoleIntegration = ((options = {}) => {\n  const levels = options.levels || CONSOLE_LEVELS;\n  // TODO(v9): Flip default value to `true`\n  const handled = !!options.handled;\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      if (!('console' in GLOBAL_OBJ)) {\n        return;\n      }\n\n      addConsoleInstrumentationHandler(({ args, level }) => {\n        if (getClient() !== client || !levels.includes(level)) {\n          return;\n        }\n\n        consoleHandler(args, level, handled);\n      });\n    },\n  };\n}) ;\n\n/**\n * Send Console API calls as Sentry Events.\n */\nconst captureConsoleIntegration = defineIntegration(_captureConsoleIntegration);\n\nfunction consoleHandler(args, level, handled) {\n  const captureContext = {\n    level: severityLevelFromString(level),\n    extra: {\n      arguments: args,\n    },\n  };\n\n  withScope(scope => {\n    scope.addEventProcessor(event => {\n      event.logger = 'console';\n\n      addExceptionMechanism(event, {\n        handled,\n        type: 'console',\n      });\n\n      return event;\n    });\n\n    if (level === 'assert') {\n      if (!args[0]) {\n        const message = `Assertion failed: ${safeJoin(args.slice(1), ' ') || 'console.assert'}`;\n        scope.setExtra('arguments', args.slice(1));\n        captureMessage(message, captureContext);\n      }\n      return;\n    }\n\n    const error = args.find(arg => arg instanceof Error);\n    if (error) {\n      captureException(error, captureContext);\n      return;\n    }\n\n    const message = safeJoin(args, ' ');\n    captureMessage(message, captureContext);\n  });\n}\n\nexport { captureConsoleIntegration };\n//# sourceMappingURL=captureconsole.js.map\n","import { defineIntegration } from '../integration.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { getFramesFromEvent } from '../utils-hoist/stacktrace.js';\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent;\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          DEBUG_BUILD && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch (_oO) {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) ;\n\n/**\n * Deduplication filter.\n */\nconst dedupeIntegration = defineIntegration(_dedupeIntegration);\n\n/** only exported for tests. */\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = getFramesFromEvent(currentEvent);\n  let previousFrames = getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const frameA = previousFrames[i];\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\nexport { _shouldDropEvent, dedupeIntegration };\n//# sourceMappingURL=dedupe.js.map\n","import { SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_OP } from './semanticAttributes.js';\nimport './tracing/errors.js';\nimport { isInstanceOf } from './utils-hoist/is.js';\nimport './utils-hoist/version.js';\nimport './utils-hoist/debug-build.js';\nimport './utils-hoist/logger.js';\nimport './utils-hoist/time.js';\nimport './utils-hoist/syncpromise.js';\nimport { parseUrl } from './utils-hoist/url.js';\nimport { SENTRY_BAGGAGE_KEY_PREFIX } from './utils-hoist/baggage.js';\nimport './debug-build.js';\nimport { hasTracingEnabled } from './utils/hasTracingEnabled.js';\nimport { getActiveSpan } from './utils/spanUtils.js';\nimport { SentryNonRecordingSpan } from './tracing/sentryNonRecordingSpan.js';\nimport { setHttpStatus, SPAN_STATUS_ERROR } from './tracing/spanstatus.js';\nimport { startInactiveSpan } from './tracing/trace.js';\nimport { getTraceData } from './utils/traceData.js';\n\n/**\n * Create and track fetch request spans for usage in combination with `addFetchInstrumentationHandler`.\n *\n * @returns Span if a span was created, otherwise void.\n */\nfunction instrumentFetchRequest(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n  spanOrigin = 'auto.http.browser',\n) {\n  if (!handlerData.fetchData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = hasTracingEnabled() && shouldCreateSpan(handlerData.fetchData.url);\n\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      endSpan(span, handlerData);\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const { method, url } = handlerData.fetchData;\n\n  const fullUrl = getFullURL(url);\n  const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n\n  const hasParent = !!getActiveSpan();\n\n  const span =\n    shouldCreateSpanResult && hasParent\n      ? startInactiveSpan({\n          name: `${method} ${url}`,\n          attributes: {\n            url,\n            type: 'fetch',\n            'http.method': method,\n            'http.url': fullUrl,\n            'server.address': host,\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanOrigin,\n            [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'http.client',\n          },\n        })\n      : new SentryNonRecordingSpan();\n\n  handlerData.fetchData.__span = span.spanContext().spanId;\n  spans[span.spanContext().spanId] = span;\n\n  if (shouldAttachHeaders(handlerData.fetchData.url)) {\n    const request = handlerData.args[0];\n\n    const options = handlerData.args[1] || {};\n\n    const headers = _addTracingHeadersToFetchRequest(\n      request,\n      options,\n      // If performance is disabled (TWP) or there's no active root span (pageload/navigation/interaction),\n      // we do not want to use the span as base for the trace headers,\n      // which means that the headers will be generated from the scope and the sampling decision is deferred\n      hasTracingEnabled() && hasParent ? span : undefined,\n    );\n    if (headers) {\n      // Ensure this is actually set, if no options have been passed previously\n      handlerData.args[1] = options;\n      options.headers = headers;\n    }\n  }\n\n  return span;\n}\n\n/**\n * Adds sentry-trace and baggage headers to the various forms of fetch headers.\n */\nfunction _addTracingHeadersToFetchRequest(\n  request,\n  fetchOptionsObj\n\n,\n  span,\n) {\n  const traceHeaders = getTraceData({ span });\n  const sentryTrace = traceHeaders['sentry-trace'];\n  const baggage = traceHeaders.baggage;\n\n  // Nothing to do, when we return undefined here, the original headers will be used\n  if (!sentryTrace) {\n    return undefined;\n  }\n\n  const headers = fetchOptionsObj.headers || (isRequest(request) ? request.headers : undefined);\n\n  if (!headers) {\n    return { ...traceHeaders };\n  } else if (isHeaders(headers)) {\n    const newHeaders = new Headers(headers);\n    newHeaders.set('sentry-trace', sentryTrace);\n\n    if (baggage) {\n      const prevBaggageHeader = newHeaders.get('baggage');\n      if (prevBaggageHeader) {\n        const prevHeaderStrippedFromSentryBaggage = stripBaggageHeaderOfSentryBaggageValues(prevBaggageHeader);\n        newHeaders.set(\n          'baggage',\n          // If there are non-sentry entries (i.e. if the stripped string is non-empty/truthy) combine the stripped header and sentry baggage header\n          // otherwise just set the sentry baggage header\n          prevHeaderStrippedFromSentryBaggage ? `${prevHeaderStrippedFromSentryBaggage},${baggage}` : baggage,\n        );\n      } else {\n        newHeaders.set('baggage', baggage);\n      }\n    }\n\n    return newHeaders;\n  } else if (Array.isArray(headers)) {\n    const newHeaders = [\n      ...headers\n        // Remove any existing sentry-trace headers\n        .filter(header => {\n          return !(Array.isArray(header) && header[0] === 'sentry-trace');\n        })\n        // Get rid of previous sentry baggage values in baggage header\n        .map(header => {\n          if (Array.isArray(header) && header[0] === 'baggage' && typeof header[1] === 'string') {\n            const [headerName, headerValue, ...rest] = header;\n            return [headerName, stripBaggageHeaderOfSentryBaggageValues(headerValue), ...rest];\n          } else {\n            return header;\n          }\n        }),\n      // Attach the new sentry-trace header\n      ['sentry-trace', sentryTrace],\n    ];\n\n    if (baggage) {\n      // If there are multiple entries with the same key, the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.push(['baggage', baggage]);\n    }\n\n    return newHeaders ;\n  } else {\n    const existingBaggageHeader = 'baggage' in headers ? headers.baggage : undefined;\n    let newBaggageHeaders = [];\n\n    if (Array.isArray(existingBaggageHeader)) {\n      newBaggageHeaders = existingBaggageHeader\n        .map(headerItem =>\n          typeof headerItem === 'string' ? stripBaggageHeaderOfSentryBaggageValues(headerItem) : headerItem,\n        )\n        .filter(headerItem => headerItem === '');\n    } else if (existingBaggageHeader) {\n      newBaggageHeaders.push(stripBaggageHeaderOfSentryBaggageValues(existingBaggageHeader));\n    }\n\n    if (baggage) {\n      newBaggageHeaders.push(baggage);\n    }\n\n    return {\n      ...(headers ),\n      'sentry-trace': sentryTrace,\n      baggage: newBaggageHeaders.length > 0 ? newBaggageHeaders.join(',') : undefined,\n    };\n  }\n}\n\n/**\n * Adds sentry-trace and baggage headers to the various forms of fetch headers.\n *\n * @deprecated This function will not be exported anymore in v9.\n */\nfunction addTracingHeadersToFetchRequest(\n  request,\n  _client,\n  _scope,\n  fetchOptionsObj\n\n,\n  span,\n) {\n  return _addTracingHeadersToFetchRequest(request , fetchOptionsObj, span);\n}\n\nfunction getFullURL(url) {\n  try {\n    const parsed = new URL(url);\n    return parsed.href;\n  } catch (e) {\n    return undefined;\n  }\n}\n\nfunction endSpan(span, handlerData) {\n  if (handlerData.response) {\n    setHttpStatus(span, handlerData.response.status);\n\n    const contentLength =\n      handlerData.response && handlerData.response.headers && handlerData.response.headers.get('content-length');\n\n    if (contentLength) {\n      const contentLengthNum = parseInt(contentLength);\n      if (contentLengthNum > 0) {\n        span.setAttribute('http.response_content_length', contentLengthNum);\n      }\n    }\n  } else if (handlerData.error) {\n    span.setStatus({ code: SPAN_STATUS_ERROR, message: 'internal_error' });\n  }\n  span.end();\n}\n\nfunction stripBaggageHeaderOfSentryBaggageValues(baggageHeader) {\n  return (\n    baggageHeader\n      .split(',')\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      .filter(baggageEntry => !baggageEntry.split('=')[0].startsWith(SENTRY_BAGGAGE_KEY_PREFIX))\n      .join(',')\n  );\n}\n\nfunction isRequest(request) {\n  return typeof Request !== 'undefined' && isInstanceOf(request, Request);\n}\n\nfunction isHeaders(headers) {\n  return typeof Headers !== 'undefined' && isInstanceOf(headers, Headers);\n}\n\nexport { addTracingHeadersToFetchRequest, instrumentFetchRequest };\n//# sourceMappingURL=fetch.js.map\n","/**\n * Determine a breadcrumb's log level (only `warning` or `error`) based on an HTTP status code.\n */\nfunction getBreadcrumbLogLevelFromHttpStatusCode(statusCode) {\n  // NOTE: undefined defaults to 'info' in Sentry\n  if (statusCode === undefined) {\n    return undefined;\n  } else if (statusCode >= 400 && statusCode < 500) {\n    return 'warning';\n  } else if (statusCode >= 500) {\n    return 'error';\n  } else {\n    return undefined;\n  }\n}\n\nexport { getBreadcrumbLogLevelFromHttpStatusCode };\n//# sourceMappingURL=breadcrumb-log-level.js.map\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { logger } from './logger.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\nconst WINDOW = GLOBAL_OBJ ;\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * isNative checks if the given function is a native implementation\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFunction(func) {\n  return func && /^function\\s+\\w+\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFunction(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFunction(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      DEBUG_BUILD &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport { isNativeFunction, supportsDOMError, supportsDOMException, supportsErrorEvent, supportsFetch, supportsNativeFetch, supportsReferrerPolicy, supportsReportingObserver };\n//# sourceMappingURL=supports.js.map\n","import { isError } from '../is.js';\nimport { fill, addNonEnumerableProperty } from '../object.js';\nimport { supportsNativeFetch } from '../supports.js';\nimport { timestampInSeconds } from '../time.js';\nimport { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers.js';\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addFetchInstrumentationHandler(\n  handler,\n  skipNativeFetchCheck,\n) {\n  const type = 'fetch';\n  addHandler(type, handler);\n  maybeInstrument(type, () => instrumentFetch(undefined, skipNativeFetchCheck));\n}\n\n/**\n * Add an instrumentation handler for long-lived fetch requests, like consuming server-sent events (SSE) via fetch.\n * The handler will resolve the request body and emit the actual `endTimestamp`, so that the\n * span can be updated accordingly.\n *\n * Only used internally\n * @hidden\n */\nfunction addFetchEndInstrumentationHandler(handler) {\n  const type = 'fetch-body-resolved';\n  addHandler(type, handler);\n  maybeInstrument(type, () => instrumentFetch(streamHandler));\n}\n\nfunction instrumentFetch(onFetchResolved, skipNativeFetchCheck = false) {\n  if (skipNativeFetchCheck && !supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch) {\n    return function (...args) {\n      // We capture the error right here and not in the Promise error callback because Safari (and probably other\n      // browsers too) will wipe the stack trace up to this point, only leaving us with this file which is useless.\n\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n      //       it means the error, that was caused by your fetch call did not\n      //       have a stack trace, so the SDK backfilled the stack trace so\n      //       you can see which fetch call failed.\n      const virtualError = new Error();\n\n      const { method, url } = parseFetchArgs(args);\n      const handlerData = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: timestampInSeconds() * 1000,\n        // // Adding the error to be able to fingerprint the failed fetch event in HttpClient instrumentation\n        virtualError,\n      };\n\n      // if there is no callback, fetch is instrumented directly\n      if (!onFetchResolved) {\n        triggerHandlers('fetch', {\n          ...handlerData,\n        });\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        async (response) => {\n          if (onFetchResolved) {\n            onFetchResolved(response);\n          } else {\n            triggerHandlers('fetch', {\n              ...handlerData,\n              endTimestamp: timestampInSeconds() * 1000,\n              response,\n            });\n          }\n\n          return response;\n        },\n        (error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: timestampInSeconds() * 1000,\n            error,\n          });\n\n          if (isError(error) && error.stack === undefined) {\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n            //       it means the error, that was caused by your fetch call did not\n            //       have a stack trace, so the SDK backfilled the stack trace so\n            //       you can see which fetch call failed.\n            error.stack = virtualError.stack;\n            addNonEnumerableProperty(error, 'framesToPop', 1);\n          }\n\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nasync function resolveResponse(res, onFinishedResolving) {\n  if (res && res.body) {\n    const body = res.body;\n    const responseReader = body.getReader();\n\n    // Define a maximum duration after which we just cancel\n    const maxFetchDurationTimeout = setTimeout(\n      () => {\n        body.cancel().then(null, () => {\n          // noop\n        });\n      },\n      90 * 1000, // 90s\n    );\n\n    let readingActive = true;\n    while (readingActive) {\n      let chunkTimeout;\n      try {\n        // abort reading if read op takes more than 5s\n        chunkTimeout = setTimeout(() => {\n          body.cancel().then(null, () => {\n            // noop on error\n          });\n        }, 5000);\n\n        // This .read() call will reject/throw when we abort due to timeouts through `body.cancel()`\n        const { done } = await responseReader.read();\n\n        clearTimeout(chunkTimeout);\n\n        if (done) {\n          onFinishedResolving();\n          readingActive = false;\n        }\n      } catch (error) {\n        readingActive = false;\n      } finally {\n        clearTimeout(chunkTimeout);\n      }\n    }\n\n    clearTimeout(maxFetchDurationTimeout);\n\n    responseReader.releaseLock();\n    body.cancel().then(null, () => {\n      // noop on error\n    });\n  }\n}\n\nfunction streamHandler(response) {\n  // clone response for awaiting stream\n  let clonedResponseForResolving;\n  try {\n    clonedResponseForResolving = response.clone();\n  } catch (e) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  resolveResponse(clonedResponseForResolving, () => {\n    triggerHandlers('fetch-body-resolved', {\n      endTimestamp: timestampInSeconds() * 1000,\n      response,\n    });\n  });\n}\n\nfunction hasProp(obj, prop) {\n  return !!obj && typeof obj === 'object' && !!(obj )[prop];\n}\n\nfunction getUrlFromResource(resource) {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nfunction parseFetchArgs(fetchArgs) {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs ;\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg ),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\nexport { addFetchEndInstrumentationHandler, addFetchInstrumentationHandler, parseFetchArgs };\n//# sourceMappingURL=fetch.js.map\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // This comment is used to identify this line in the CDN bundle build step and replace this with \"return 'cdn';\"\n  /* __SENTRY_SDK_SOURCE__ */ return 'npm';\n}\n\nexport { getSDKSource, isBrowserBundle };\n//# sourceMappingURL=env.js.map\n","import { GLOBAL_OBJ } from '../worldwide.js';\n\n// Based on https://github.com/angular/angular.js/pull/13945/files\n// The MIT License\n\n\nconst WINDOW = GLOBAL_OBJ ;\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  // TODO(v9): Remove this custom check, it is pretty old and likely not needed anymore\n  const chromeVar = (WINDOW ).chrome;\n  const isChromePackagedApp = chromeVar && chromeVar.app && chromeVar.app.runtime;\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\nexport { supportsHistory };\n//# sourceMappingURL=supportsHistory.js.map\n","import { GLOBAL_OBJ, getOriginalFunction, markFunctionWrapped, addNonEnumerableProperty, withScope, addExceptionTypeValue, addExceptionMechanism, captureException } from '@sentry/core';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  function isFunction(fn) {\n    return typeof fn === 'function';\n  }\n\n  if (!isFunction(fn)) {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = (fn ).__sentry_wrapped__;\n    if (wrapper) {\n      if (typeof wrapper === 'function') {\n        return wrapper;\n      } else {\n        // If we find that the `__sentry_wrapped__` function is not a function at the time of accessing it, it means\n        // that something messed with it. In that case we want to return the originally passed function.\n        return fn;\n      }\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  // Wrap the function itself\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped = function ( ...args) {\n    try {\n      // Also wrap arguments that are themselves functions\n      const wrappedArguments = args.map(arg => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  } ;\n\n  // Wrap the wrapped function in a proxy, to ensure any other properties of the original function remain available\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property ] = fn[property ];\n      }\n    }\n  } catch (e2) {\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  }\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name');\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n  } catch (e3) {\n    // This may throw if e.g. the descriptor does not exist, or a browser does not allow redefining `name`.\n    // to save some bytes we simply try-catch this\n  }\n\n  return sentryWrapped;\n}\n\nexport { WINDOW, ignoreNextOnError, shouldIgnoreOnError, wrap };\n//# sourceMappingURL=helpers.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","import { addExceptionMechanism, resolvedSyncPromise, isErrorEvent, isDOMError, isDOMException, addExceptionTypeValue, isError, isPlainObject, isEvent, isParameterizedString, getClient, normalizeToSize, extractExceptionKeysForMessage } from '@sentry/core';\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nfunction exceptionFromError(stackParser, ex) {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception = {\n    type: extractType(ex),\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\nfunction eventFromPlainObject(\n  stackParser,\n  exception,\n  syntheticException,\n  isUnhandledRejection,\n) {\n  const client = getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  // If we can, we extract an exception from the object properties\n  const errorFromProp = getErrorPropertyFromObject(exception);\n\n  const extra = {\n    __serialized__: normalizeToSize(exception, normalizeDepth),\n  };\n\n  if (errorFromProp) {\n    return {\n      exception: {\n        values: [exceptionFromError(stackParser, errorFromProp)],\n      },\n      extra,\n    };\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        } ,\n      ],\n    },\n    extra,\n  } ;\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      event.exception.values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\nfunction eventFromError(stackParser, ex) {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser,\n  ex,\n) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const skipLines = getSkipFirstStackStringLines(ex);\n  const framesToPop = getPopFirstTopFrames(ex);\n\n  try {\n    return stackParser(stacktrace, skipLines, framesToPop);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\n/**\n * Certain known React errors contain links that would be falsely\n * parsed as frames. This function check for these errors and\n * returns number of the stack string lines to skip.\n */\nfunction getSkipFirstStackStringLines(ex) {\n  if (ex && reactMinifiedRegexp.test(ex.message)) {\n    return 1;\n  }\n\n  return 0;\n}\n\n/**\n * If error has `framesToPop` property, it means that the\n * creator tells us the first x frames will be useless\n * and should be discarded. Typically error from wrapper function\n * which don't point to the actual location in the developer's code.\n *\n * Example: https://github.com/zertosh/invariant/blob/master/invariant.js#L46\n */\nfunction getPopFirstTopFrames(ex) {\n  if (typeof ex.framesToPop === 'number') {\n    return ex.framesToPop;\n  }\n\n  return 0;\n}\n\n// https://developer.mozilla.org/en-US/docs/WebAssembly/JavaScript_interface/Exception\n// @ts-expect-error - WebAssembly.Exception is a valid class\nfunction isWebAssemblyException(exception) {\n  // Check for support\n  // @ts-expect-error - WebAssembly.Exception is a valid class\n  if (typeof WebAssembly !== 'undefined' && typeof WebAssembly.Exception !== 'undefined') {\n    // @ts-expect-error - WebAssembly.Exception is a valid class\n    return exception instanceof WebAssembly.Exception;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Extracts from errors what we use as the exception `type` in error events.\n *\n * Usually, this is the `name` property on Error objects but WASM errors need to be treated differently.\n */\nfunction extractType(ex) {\n  const name = ex && ex.name;\n\n  // The name for WebAssembly.Exception Errors needs to be extracted differently.\n  // Context: https://github.com/getsentry/sentry-javascript/issues/13787\n  if (!name && isWebAssemblyException(ex)) {\n    // Emscripten sets array[type, message] to the \"message\" property on the WebAssembly.Exception object\n    const hasTypeInMessage = ex.message && Array.isArray(ex.message) && ex.message.length == 2;\n    return hasTypeInMessage ? ex.message[0] : 'WebAssembly.Exception';\n  }\n\n  return name;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n  const message = ex && ex.message;\n\n  if (!message) {\n    return 'No error message';\n  }\n\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n\n  // Emscripten sets array[type, message] to the \"message\" property on the WebAssembly.Exception object\n  if (isWebAssemblyException(ex) && Array.isArray(ex.message) && ex.message.length == 2) {\n    return ex.message[1];\n  }\n\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nfunction eventFromException(\n  stackParser,\n  exception,\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(\n  stackParser,\n  exception,\n  syntheticException,\n  attachStacktrace,\n  isUnhandledRejection,\n) {\n  let event;\n\n  if (isErrorEvent(exception ) && (exception ).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception ;\n    return eventFromError(stackParser, errorEvent.error );\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception )) {\n    const domException = exception ;\n\n    if ('stack' in (exception )) {\n      event = eventFromError(stackParser, exception );\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception ;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\nfunction eventFromString(\n  stackParser,\n  message,\n  syntheticException,\n  attachStacktrace,\n) {\n  const event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n    addExceptionMechanism(event, { synthetic: true });\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception,\n  { isUnhandledRejection },\n) {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj) {\n  try {\n    const prototype = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n\n/** If a plain object has a property that is an `Error`, return this error. */\nfunction getErrorPropertyFromObject(obj) {\n  for (const prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      const value = obj[prop];\n      if (value instanceof Error) {\n        return value;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nexport { eventFromException, eventFromMessage, eventFromUnknownInput, exceptionFromError, extractMessage, extractType };\n//# sourceMappingURL=eventbuilder.js.map\n","import { dsnToString, createEnvelope } from '@sentry/core';\n\n/**\n * Creates an envelope from a user feedback.\n */\nfunction createUserFeedbackEnvelope(\n  feedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }\n\n,\n) {\n  const headers = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback) {\n  const feedbackHeaders = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n\nexport { createUserFeedbackEnvelope };\n//# sourceMappingURL=userfeedback.js.map\n","import { BaseClient, getSDKSource, applySdkMetadata, logger } from '@sentry/core';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { eventFromException, eventFromMessage } from './eventbuilder.js';\nimport { WINDOW } from './helpers.js';\nimport { createUserFeedbackEnvelope } from './userfeedback.js';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/core Options for more information.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends BaseClient {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    const opts = {\n      // We default this to true, as it is the safer scenario\n      parentSpanIsAlwaysRootSpan: true,\n      ...options,\n    };\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(opts, 'browser', ['browser'], sdkSource);\n\n    super(opts);\n\n    if (opts.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n    level = 'info',\n    hint,\n  ) {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   *\n   * @deprecated Use `captureFeedback` instead.\n   */\n   captureUserFeedback(feedback) {\n    if (!this._isEnabled()) {\n      DEBUG_BUILD && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n}\n\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","const getRating = (value, thresholds) => {\n  if (value > thresholds[1]) {\n    return 'poor';\n  }\n  if (value > thresholds[0]) {\n    return 'needs-improvement';\n  }\n  return 'good';\n};\n\nconst bindReporter = (\n  callback,\n  metric,\n  thresholds,\n  reportAllChanges,\n) => {\n  let prevValue;\n  let delta;\n  return (forceReport) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          metric.rating = getRating(metric.value, thresholds);\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n\nexport { bindReporter };\n//# sourceMappingURL=bindReporter.js.map\n","import { GLOBAL_OBJ } from '@sentry/core';\n\nconst WINDOW = GLOBAL_OBJ\n\n;\n\nexport { WINDOW };\n//# sourceMappingURL=types.js.map\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nconst generateUniqueID = () => {\n  return `v4-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n\nexport { generateUniqueID };\n//# sourceMappingURL=generateUniqueID.js.map\n","import { WINDOW } from '../../../types.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n// sentry-specific change:\n// add optional param to not check for responseStart (see comment below)\nconst getNavigationEntry = (checkResponseStart = true) => {\n  const navigationEntry =\n    WINDOW.performance && WINDOW.performance.getEntriesByType && WINDOW.performance.getEntriesByType('navigation')[0];\n  // Check to ensure the `responseStart` property is present and valid.\n  // In some cases no value is reported by the browser (for\n  // privacy/security reasons), and in other cases (bugs) the value is\n  // negative or is larger than the current page time. Ignore these cases:\n  // https://github.com/GoogleChrome/web-vitals/issues/137\n  // https://github.com/GoogleChrome/web-vitals/issues/162\n  // https://github.com/GoogleChrome/web-vitals/issues/275\n  if (\n    // sentry-specific change:\n    // We don't want to check for responseStart for our own use of `getNavigationEntry`\n    !checkResponseStart ||\n    (navigationEntry && navigationEntry.responseStart > 0 && navigationEntry.responseStart < performance.now())\n  ) {\n    return navigationEntry;\n  }\n};\n\nexport { getNavigationEntry };\n//# sourceMappingURL=getNavigationEntry.js.map\n","import { getNavigationEntry } from './getNavigationEntry.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst getActivationStart = () => {\n  const navEntry = getNavigationEntry();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n\nexport { getActivationStart };\n//# sourceMappingURL=getActivationStart.js.map\n","import { WINDOW } from '../../../types.js';\nimport { generateUniqueID } from './generateUniqueID.js';\nimport { getActivationStart } from './getActivationStart.js';\nimport { getNavigationEntry } from './getNavigationEntry.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst initMetric = (name, value) => {\n  const navEntry = getNavigationEntry();\n  let navigationType = 'navigate';\n\n  if (navEntry) {\n    if ((WINDOW.document && WINDOW.document.prerendering) || getActivationStart() > 0) {\n      navigationType = 'prerender';\n    } else if (WINDOW.document && WINDOW.document.wasDiscarded) {\n      navigationType = 'restore';\n    } else if (navEntry.type) {\n      navigationType = navEntry.type.replace(/_/g, '-') ;\n    }\n  }\n\n  // Use `entries` type specific for the metric.\n  const entries = [];\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good' , // If needed, will be updated when reported. `const` to keep the type from widening to `string`.\n    delta: 0,\n    entries,\n    id: generateUniqueID(),\n    navigationType,\n  };\n};\n\nexport { initMetric };\n//# sourceMappingURL=initMetric.js.map\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nconst observe = (\n  type,\n  callback,\n  opts,\n) => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        // Delay by a microtask to workaround a bug in Safari where the\n        // callback is invoked immediately, rather than in a separate task.\n        // See: https://github.com/GoogleChrome/web-vitals/issues/277\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        Promise.resolve().then(() => {\n          callback(list.getEntries() );\n        });\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) ,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n\nexport { observe };\n//# sourceMappingURL=observe.js.map\n","import { WINDOW } from '../../../types.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n// Sentry-specific change:\n// This function's logic was NOT updated to web-vitals 4.2.4 but we continue\n// to use the web-vitals 3.5.2 due to us having stricter browser support.\n// PR with context that made the changes: https://github.com/GoogleChrome/web-vitals/pull/442/files#r1530492402\n// The PR removed listening to the `pagehide` event, in favour of only listening to `visibilitychange` event.\n// This is \"more correct\" but some browsers we still support (Safari 12.1-14.0) don't fully support `visibilitychange`\n// or have known bugs w.r.t the `visibilitychange` event.\n// TODO (v9): If we decide to drop support for Safari 12.1-14.0, we can use the logic from web-vitals 4.2.4\n// In this case, we also need to update the integration tests that currently trigger the `pagehide` event to\n// simulate the page being hidden.\nconst onHidden = (cb) => {\n  const onHiddenOrPageHide = (event) => {\n    if (event.type === 'pagehide' || (WINDOW.document && WINDOW.document.visibilityState === 'hidden')) {\n      cb(event);\n    }\n  };\n\n  if (WINDOW.document) {\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n  }\n};\n\nexport { onHidden };\n//# sourceMappingURL=onHidden.js.map\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst runOnce = (cb) => {\n  let called = false;\n  return () => {\n    if (!called) {\n      cb();\n      called = true;\n    }\n  };\n};\n\nexport { runOnce };\n//# sourceMappingURL=runOnce.js.map\n","import { WINDOW } from '../../../types.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = () => {\n  // If the document is hidden when this code runs, assume it was always\n  // hidden and the page was loaded in the background, with the one exception\n  // that visibility state is always 'hidden' during prerendering, so we have\n  // to ignore that case until prerendering finishes (see: `prerenderingchange`\n  // event logic below).\n  return WINDOW.document.visibilityState === 'hidden' && !WINDOW.document.prerendering ? 0 : Infinity;\n};\n\nconst onVisibilityUpdate = (event) => {\n  // If the document is 'hidden' and no previous hidden timestamp has been\n  // set, update it based on the current event data.\n  if (WINDOW.document.visibilityState === 'hidden' && firstHiddenTime > -1) {\n    // If the event is a 'visibilitychange' event, it means the page was\n    // visible prior to this change, so the event timestamp is the first\n    // hidden time.\n    // However, if the event is not a 'visibilitychange' event, then it must\n    // be a 'prerenderingchange' event, and the fact that the document is\n    // still 'hidden' from the above check means the tab was activated\n    // in a background state and so has always been hidden.\n    firstHiddenTime = event.type === 'visibilitychange' ? event.timeStamp : 0;\n\n    // Remove all listeners now that a `firstHiddenTime` value has been set.\n    removeChangeListeners();\n  }\n};\n\nconst addChangeListeners = () => {\n  addEventListener('visibilitychange', onVisibilityUpdate, true);\n  // IMPORTANT: when a page is prerendering, its `visibilityState` is\n  // 'hidden', so in order to account for cases where this module checks for\n  // visibility during prerendering, an additional check after prerendering\n  // completes is also required.\n  addEventListener('prerenderingchange', onVisibilityUpdate, true);\n};\n\nconst removeChangeListeners = () => {\n  removeEventListener('visibilitychange', onVisibilityUpdate, true);\n  removeEventListener('prerenderingchange', onVisibilityUpdate, true);\n};\n\nconst getVisibilityWatcher = () => {\n  if (WINDOW.document && firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    firstHiddenTime = initHiddenTime();\n    addChangeListeners();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n\nexport { getVisibilityWatcher };\n//# sourceMappingURL=getVisibilityWatcher.js.map\n","import { WINDOW } from '../../../types.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst whenActivated = (callback) => {\n  if (WINDOW.document && WINDOW.document.prerendering) {\n    addEventListener('prerenderingchange', () => callback(), true);\n  } else {\n    callback();\n  }\n};\n\nexport { whenActivated };\n//# sourceMappingURL=whenActivated.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getActivationStart } from './lib/getActivationStart.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { whenActivated } from './lib/whenActivated.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for FCP. See https://web.dev/articles/fcp#what_is_a_good_fcp_score */\nconst FCPThresholds = [1800, 3000];\n\n/**\n * Calculates the [FCP](https://web.dev/articles/fcp) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `paint` performance entry used to determine the value. The reported\n * value is a `DOMHighResTimeStamp`.\n */\nconst onFCP = (onReport, opts = {}) => {\n  whenActivated(() => {\n    const visibilityWatcher = getVisibilityWatcher();\n    const metric = initMetric('FCP');\n    let report;\n\n    const handleEntries = (entries) => {\n      entries.forEach(entry => {\n        if (entry.name === 'first-contentful-paint') {\n          po.disconnect();\n\n          // Only report if the page wasn't hidden prior to the first paint.\n          if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n            // The activationStart reference is used because FCP should be\n            // relative to page activation rather than navigation start if the\n            // page was prerendered. But in cases where `activationStart` occurs\n            // after the FCP, this time should be clamped at 0.\n            metric.value = Math.max(entry.startTime - getActivationStart(), 0);\n            metric.entries.push(entry);\n            report(true);\n          }\n        }\n      });\n    };\n\n    const po = observe('paint', handleEntries);\n\n    if (po) {\n      report = bindReporter(onReport, metric, FCPThresholds, opts.reportAllChanges);\n    }\n  });\n};\n\nexport { FCPThresholds, onFCP };\n//# sourceMappingURL=onFCP.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\nimport { runOnce } from './lib/runOnce.js';\nimport { onFCP } from './onFCP.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for CLS. See https://web.dev/articles/cls#what_is_a_good_cls_score */\nconst CLSThresholds = [0.1, 0.25];\n\n/**\n * Calculates the [CLS](https://web.dev/articles/cls) value for the current page and\n * calls the `callback` function once the value is ready to be reported, along\n * with all `layout-shift` performance entries that were used in the metric\n * value calculation. The reported value is a `double` (corresponding to a\n * [layout shift score](https://web.dev/articles/cls#layout_shift_score)).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** CLS should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nconst onCLS = (onReport, opts = {}) => {\n  // Start monitoring FCP so we can only report CLS if FCP is also reported.\n  // Note: this is done to match the current behavior of CrUX.\n  onFCP(\n    runOnce(() => {\n      const metric = initMetric('CLS', 0);\n      let report;\n\n      let sessionValue = 0;\n      let sessionEntries = [];\n\n      const handleEntries = (entries) => {\n        entries.forEach(entry => {\n          // Only count layout shifts without recent user input.\n          if (!entry.hadRecentInput) {\n            const firstSessionEntry = sessionEntries[0];\n            const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n            // If the entry occurred less than 1 second after the previous entry\n            // and less than 5 seconds after the first entry in the session,\n            // include the entry in the current session. Otherwise, start a new\n            // session.\n            if (\n              sessionValue &&\n              firstSessionEntry &&\n              lastSessionEntry &&\n              entry.startTime - lastSessionEntry.startTime < 1000 &&\n              entry.startTime - firstSessionEntry.startTime < 5000\n            ) {\n              sessionValue += entry.value;\n              sessionEntries.push(entry);\n            } else {\n              sessionValue = entry.value;\n              sessionEntries = [entry];\n            }\n          }\n        });\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (sessionValue > metric.value) {\n          metric.value = sessionValue;\n          metric.entries = sessionEntries;\n          report();\n        }\n      };\n\n      const po = observe('layout-shift', handleEntries);\n      if (po) {\n        report = bindReporter(onReport, metric, CLSThresholds, opts.reportAllChanges);\n\n        onHidden(() => {\n          handleEntries(po.takeRecords() );\n          report(true);\n        });\n\n        // Queue a task to report (if nothing else triggers a report first).\n        // This allows CLS to be reported as soon as FCP fires when\n        // `reportAllChanges` is true.\n        setTimeout(report, 0);\n      }\n    }),\n  );\n};\n\nexport { CLSThresholds, onCLS };\n//# sourceMappingURL=getCLS.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\nimport { runOnce } from './lib/runOnce.js';\nimport { whenActivated } from './lib/whenActivated.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for FID. See https://web.dev/articles/fid#what_is_a_good_fid_score */\nconst FIDThresholds = [100, 300];\n\n/**\n * Calculates the [FID](https://web.dev/articles/fid) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it's possible that it will not be reported for some page loads._\n */\nconst onFID = (onReport, opts = {}) => {\n  whenActivated(() => {\n    const visibilityWatcher = getVisibilityWatcher();\n    const metric = initMetric('FID');\n    // eslint-disable-next-line prefer-const\n    let report;\n\n    const handleEntry = (entry) => {\n      // Only report if the page wasn't hidden prior to the first input.\n      if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n        metric.value = entry.processingStart - entry.startTime;\n        metric.entries.push(entry);\n        report(true);\n      }\n    };\n\n    const handleEntries = (entries) => {\n      (entries ).forEach(handleEntry);\n    };\n\n    const po = observe('first-input', handleEntries);\n\n    report = bindReporter(onReport, metric, FIDThresholds, opts.reportAllChanges);\n\n    if (po) {\n      onHidden(\n        runOnce(() => {\n          handleEntries(po.takeRecords() );\n          po.disconnect();\n        }),\n      );\n    }\n  });\n};\n\nexport { FIDThresholds, onFID };\n//# sourceMappingURL=getFID.js.map\n","import { observe } from '../observe.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nlet interactionCountEstimate = 0;\nlet minKnownInteractionId = Infinity;\nlet maxKnownInteractionId = 0;\n\nconst updateEstimate = (entries) => {\n  entries.forEach(e => {\n    if (e.interactionId) {\n      minKnownInteractionId = Math.min(minKnownInteractionId, e.interactionId);\n      maxKnownInteractionId = Math.max(maxKnownInteractionId, e.interactionId);\n\n      interactionCountEstimate = maxKnownInteractionId ? (maxKnownInteractionId - minKnownInteractionId) / 7 + 1 : 0;\n    }\n  });\n};\n\nlet po;\n\n/**\n * Returns the `interactionCount` value using the native API (if available)\n * or the polyfill estimate in this module.\n */\nconst getInteractionCount = () => {\n  return po ? interactionCountEstimate : performance.interactionCount || 0;\n};\n\n/**\n * Feature detects native support or initializes the polyfill if needed.\n */\nconst initInteractionCountPolyfill = () => {\n  if ('interactionCount' in performance || po) return;\n\n  po = observe('event', updateEstimate, {\n    type: 'event',\n    buffered: true,\n    durationThreshold: 0,\n  } );\n};\n\nexport { getInteractionCount, initInteractionCountPolyfill };\n//# sourceMappingURL=interactionCountPolyfill.js.map\n","import { getInteractionCount } from './polyfills/interactionCountPolyfill.js';\n\n/*\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n// A list of longest interactions on the page (by latency) sorted so the\n// longest one is first. The list is at most MAX_INTERACTIONS_TO_CONSIDER long.\nconst longestInteractionList = [];\n\n// A mapping of longest interactions by their interaction ID.\n// This is used for faster lookup.\nconst longestInteractionMap = new Map();\n\n// The default `durationThreshold` used across this library for observing\n// `event` entries via PerformanceObserver.\nconst DEFAULT_DURATION_THRESHOLD = 40;\n\n// Used to store the interaction count after a bfcache restore, since p98\n// interaction latencies should only consider the current navigation.\nlet prevInteractionCount = 0;\n\n/**\n * Returns the interaction count since the last bfcache restore (or for the\n * full page lifecycle if there were no bfcache restores).\n */\nconst getInteractionCountForNavigation = () => {\n  return getInteractionCount() - prevInteractionCount;\n};\n\n/**\n * Returns the estimated p98 longest interaction based on the stored\n * interaction candidates and the interaction count for the current page.\n */\nconst estimateP98LongestInteraction = () => {\n  const candidateInteractionIndex = Math.min(\n    longestInteractionList.length - 1,\n    Math.floor(getInteractionCountForNavigation() / 50),\n  );\n\n  return longestInteractionList[candidateInteractionIndex];\n};\n\n// To prevent unnecessary memory usage on pages with lots of interactions,\n// store at most 10 of the longest interactions to consider as INP candidates.\nconst MAX_INTERACTIONS_TO_CONSIDER = 10;\n\n/**\n * A list of callback functions to run before each entry is processed.\n * Exposing this list allows the attribution build to hook into the\n * entry processing pipeline.\n */\nconst entryPreProcessingCallbacks = [];\n\n/**\n * Takes a performance entry and adds it to the list of worst interactions\n * if its duration is long enough to make it among the worst. If the\n * entry is part of an existing interaction, it is merged and the latency\n * and entries list is updated as needed.\n */\nconst processInteractionEntry = (entry) => {\n  entryPreProcessingCallbacks.forEach(cb => cb(entry));\n\n  // Skip further processing for entries that cannot be INP candidates.\n  if (!(entry.interactionId || entry.entryType === 'first-input')) return;\n\n  // The least-long of the 10 longest interactions.\n  const minLongestInteraction = longestInteractionList[longestInteractionList.length - 1];\n\n  const existingInteraction = longestInteractionMap.get(entry.interactionId);\n\n  // Only process the entry if it's possibly one of the ten longest,\n  // or if it's part of an existing interaction.\n  if (\n    existingInteraction ||\n    longestInteractionList.length < MAX_INTERACTIONS_TO_CONSIDER ||\n    (minLongestInteraction && entry.duration > minLongestInteraction.latency)\n  ) {\n    // If the interaction already exists, update it. Otherwise create one.\n    if (existingInteraction) {\n      // If the new entry has a longer duration, replace the old entries,\n      // otherwise add to the array.\n      if (entry.duration > existingInteraction.latency) {\n        existingInteraction.entries = [entry];\n        existingInteraction.latency = entry.duration;\n      } else if (\n        entry.duration === existingInteraction.latency &&\n        entry.startTime === (existingInteraction.entries[0] && existingInteraction.entries[0].startTime)\n      ) {\n        existingInteraction.entries.push(entry);\n      }\n    } else {\n      const interaction = {\n        id: entry.interactionId,\n        latency: entry.duration,\n        entries: [entry],\n      };\n      longestInteractionMap.set(interaction.id, interaction);\n      longestInteractionList.push(interaction);\n    }\n\n    // Sort the entries by latency (descending) and keep only the top ten.\n    longestInteractionList.sort((a, b) => b.latency - a.latency);\n    if (longestInteractionList.length > MAX_INTERACTIONS_TO_CONSIDER) {\n      longestInteractionList.splice(MAX_INTERACTIONS_TO_CONSIDER).forEach(i => longestInteractionMap.delete(i.id));\n    }\n  }\n};\n\nexport { DEFAULT_DURATION_THRESHOLD, entryPreProcessingCallbacks, estimateP98LongestInteraction, longestInteractionList, longestInteractionMap, processInteractionEntry };\n//# sourceMappingURL=interactions.js.map\n","import { WINDOW } from '../../../types.js';\nimport { onHidden } from './onHidden.js';\nimport { runOnce } from './runOnce.js';\n\n/*\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * Runs the passed callback during the next idle period, or immediately\n * if the browser's visibility state is (or becomes) hidden.\n */\nconst whenIdle = (cb) => {\n  const rIC = WINDOW.requestIdleCallback || WINDOW.setTimeout;\n\n  let handle = -1;\n  // eslint-disable-next-line no-param-reassign\n  cb = runOnce(cb) ;\n  // If the document is hidden, run the callback immediately, otherwise\n  // race an idle callback with the next `visibilitychange` event.\n  if (WINDOW.document && WINDOW.document.visibilityState === 'hidden') {\n    cb();\n  } else {\n    handle = rIC(cb);\n    onHidden(cb);\n  }\n  return handle;\n};\n\nexport { whenIdle };\n//# sourceMappingURL=whenIdle.js.map\n","import { WINDOW } from '../../types.js';\nimport { bindReporter } from './lib/bindReporter.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { DEFAULT_DURATION_THRESHOLD, processInteractionEntry, estimateP98LongestInteraction } from './lib/interactions.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\nimport { initInteractionCountPolyfill } from './lib/polyfills/interactionCountPolyfill.js';\nimport { whenActivated } from './lib/whenActivated.js';\nimport { whenIdle } from './lib/whenIdle.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for INP. See https://web.dev/articles/inp#what_is_a_good_inp_score */\nconst INPThresholds = [200, 500];\n\n/**\n * Calculates the [INP](https://web.dev/articles/inp) value for the current\n * page and calls the `callback` function once the value is ready, along with\n * the `event` performance entries reported for that interaction. The reported\n * value is a `DOMHighResTimeStamp`.\n *\n * A custom `durationThreshold` configuration option can optionally be passed to\n * control what `event-timing` entries are considered for INP reporting. The\n * default threshold is `40`, which means INP scores of less than 40 are\n * reported as 0. Note that this will not affect your 75th percentile INP value\n * unless that value is also less than 40 (well below the recommended\n * [good](https://web.dev/articles/inp#what_is_a_good_inp_score) threshold).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** INP should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nconst onINP = (onReport, opts = {}) => {\n  // Return if the browser doesn't support all APIs needed to measure INP.\n  if (!('PerformanceEventTiming' in WINDOW && 'interactionId' in PerformanceEventTiming.prototype)) {\n    return;\n  }\n\n  whenActivated(() => {\n    // TODO(philipwalton): remove once the polyfill is no longer needed.\n    initInteractionCountPolyfill();\n\n    const metric = initMetric('INP');\n    // eslint-disable-next-line prefer-const\n    let report;\n\n    const handleEntries = (entries) => {\n      // Queue the `handleEntries()` callback in the next idle task.\n      // This is needed to increase the chances that all event entries that\n      // occurred between the user interaction and the next paint\n      // have been dispatched. Note: there is currently an experiment\n      // running in Chrome (EventTimingKeypressAndCompositionInteractionId)\n      // 123+ that if rolled out fully may make this no longer necessary.\n      whenIdle(() => {\n        entries.forEach(processInteractionEntry);\n\n        const inp = estimateP98LongestInteraction();\n\n        if (inp && inp.latency !== metric.value) {\n          metric.value = inp.latency;\n          metric.entries = inp.entries;\n          report();\n        }\n      });\n    };\n\n    const po = observe('event', handleEntries, {\n      // Event Timing entries have their durations rounded to the nearest 8ms,\n      // so a duration of 40ms would be any event that spans 2.5 or more frames\n      // at 60Hz. This threshold is chosen to strike a balance between usefulness\n      // and performance. Running this callback for any interaction that spans\n      // just one or two frames is likely not worth the insight that could be\n      // gained.\n      durationThreshold: opts.durationThreshold != null ? opts.durationThreshold : DEFAULT_DURATION_THRESHOLD,\n    });\n\n    report = bindReporter(onReport, metric, INPThresholds, opts.reportAllChanges);\n\n    if (po) {\n      // Also observe entries of type `first-input`. This is useful in cases\n      // where the first interaction is less than the `durationThreshold`.\n      po.observe({ type: 'first-input', buffered: true });\n\n      onHidden(() => {\n        handleEntries(po.takeRecords() );\n        report(true);\n      });\n    }\n  });\n};\n\nexport { INPThresholds, onINP };\n//# sourceMappingURL=getINP.js.map\n","import { WINDOW } from '../../types.js';\nimport { bindReporter } from './lib/bindReporter.js';\nimport { getActivationStart } from './lib/getActivationStart.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\nimport { runOnce } from './lib/runOnce.js';\nimport { whenActivated } from './lib/whenActivated.js';\nimport { whenIdle } from './lib/whenIdle.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for LCP. See https://web.dev/articles/lcp#what_is_a_good_lcp_score */\nconst LCPThresholds = [2500, 4000];\n\nconst reportedMetricIDs = {};\n\n/**\n * Calculates the [LCP](https://web.dev/articles/lcp) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called any time a new `largest-contentful-paint`\n * performance entry is dispatched, or once the final value of the metric has\n * been determined.\n */\nconst onLCP = (onReport, opts = {}) => {\n  whenActivated(() => {\n    const visibilityWatcher = getVisibilityWatcher();\n    const metric = initMetric('LCP');\n    let report;\n\n    const handleEntries = (entries) => {\n      // If reportAllChanges is set then call this function for each entry,\n      // otherwise only consider the last one.\n      if (!opts.reportAllChanges) {\n        // eslint-disable-next-line no-param-reassign\n        entries = entries.slice(-1);\n      }\n\n      entries.forEach(entry => {\n        // Only report if the page wasn't hidden prior to LCP.\n        if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n          // The startTime attribute returns the value of the renderTime if it is\n          // not 0, and the value of the loadTime otherwise. The activationStart\n          // reference is used because LCP should be relative to page activation\n          // rather than navigation start if the page was pre-rendered. But in cases\n          // where `activationStart` occurs after the LCP, this time should be\n          // clamped at 0.\n          metric.value = Math.max(entry.startTime - getActivationStart(), 0);\n          metric.entries = [entry];\n          report();\n        }\n      });\n    };\n\n    const po = observe('largest-contentful-paint', handleEntries);\n\n    if (po) {\n      report = bindReporter(onReport, metric, LCPThresholds, opts.reportAllChanges);\n\n      const stopListening = runOnce(() => {\n        if (!reportedMetricIDs[metric.id]) {\n          handleEntries(po.takeRecords() );\n          po.disconnect();\n          reportedMetricIDs[metric.id] = true;\n          report(true);\n        }\n      });\n\n      // Stop listening after input. Note: while scrolling is an input that\n      // stops LCP observation, it's unreliable since it can be programmatically\n      // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n      ['keydown', 'click'].forEach(type => {\n        // Wrap in a setTimeout so the callback is run in a separate task\n        // to avoid extending the keyboard/click handler to reduce INP impact\n        // https://github.com/GoogleChrome/web-vitals/issues/383\n        if (WINDOW.document) {\n          addEventListener(type, () => whenIdle(stopListening ), {\n            once: true,\n            capture: true,\n          });\n        }\n      });\n\n      onHidden(stopListening);\n    }\n  });\n};\n\nexport { LCPThresholds, onLCP };\n//# sourceMappingURL=getLCP.js.map\n","import { WINDOW } from '../../types.js';\nimport { bindReporter } from './lib/bindReporter.js';\nimport { getActivationStart } from './lib/getActivationStart.js';\nimport { getNavigationEntry } from './lib/getNavigationEntry.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { whenActivated } from './lib/whenActivated.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for TTFB. See https://web.dev/articles/ttfb#what_is_a_good_ttfb_score */\nconst TTFBThresholds = [800, 1800];\n\n/**\n * Runs in the next task after the page is done loading and/or prerendering.\n * @param callback\n */\nconst whenReady = (callback) => {\n  if (WINDOW.document && WINDOW.document.prerendering) {\n    whenActivated(() => whenReady(callback));\n  } else if (WINDOW.document && WINDOW.document.readyState !== 'complete') {\n    addEventListener('load', () => whenReady(callback), true);\n  } else {\n    // Queue a task so the callback runs after `loadEventEnd`.\n    setTimeout(callback, 0);\n  }\n};\n\n/**\n * Calculates the [TTFB](https://web.dev/articles/ttfb) value for the\n * current page and calls the `callback` function once the page has loaded,\n * along with the relevant `navigation` performance entry used to determine the\n * value. The reported value is a `DOMHighResTimeStamp`.\n *\n * Note, this function waits until after the page is loaded to call `callback`\n * in order to ensure all properties of the `navigation` entry are populated.\n * This is useful if you want to report on other metrics exposed by the\n * [Navigation Timing API](https://w3c.github.io/navigation-timing/). For\n * example, the TTFB metric starts from the page's [time\n * origin](https://www.w3.org/TR/hr-time-2/#sec-time-origin), which means it\n * includes time spent on DNS lookup, connection negotiation, network latency,\n * and server processing time.\n */\nconst onTTFB = (onReport, opts = {}) => {\n  const metric = initMetric('TTFB');\n  const report = bindReporter(onReport, metric, TTFBThresholds, opts.reportAllChanges);\n\n  whenReady(() => {\n    const navigationEntry = getNavigationEntry();\n\n    if (navigationEntry) {\n      // The activationStart reference is used because TTFB should be\n      // relative to page activation rather than navigation start if the\n      // page was prerendered. But in cases where `activationStart` occurs\n      // after the first byte is received, this time should be clamped at 0.\n      metric.value = Math.max(navigationEntry.responseStart - getActivationStart(), 0);\n\n      metric.entries = [navigationEntry];\n      report(true);\n    }\n  });\n};\n\nexport { TTFBThresholds, onTTFB };\n//# sourceMappingURL=onTTFB.js.map\n","import { logger, getFunctionName } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { onCLS } from './web-vitals/getCLS.js';\nimport { onFID } from './web-vitals/getFID.js';\nimport { onINP } from './web-vitals/getINP.js';\nimport { onLCP } from './web-vitals/getLCP.js';\nimport { observe } from './web-vitals/lib/observe.js';\nimport { onTTFB } from './web-vitals/onTTFB.js';\n\nconst handlers = {};\nconst instrumented = {};\n\nlet _previousCls;\nlet _previousFid;\nlet _previousLcp;\nlet _previousTtfb;\nlet _previousInp;\n\n/**\n * Add a callback that will be triggered when a CLS metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for CLS when the cleanup callback is called.\n * This will lead to the CLS being finalized and frozen.\n */\nfunction addClsInstrumentationHandler(\n  callback,\n  stopOnCallback = false,\n) {\n  return addMetricObserver('cls', callback, instrumentCls, _previousCls, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a LCP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for LCP when the cleanup callback is called.\n * This will lead to the LCP being finalized and frozen.\n */\nfunction addLcpInstrumentationHandler(\n  callback,\n  stopOnCallback = false,\n) {\n  return addMetricObserver('lcp', callback, instrumentLcp, _previousLcp, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addFidInstrumentationHandler(callback) {\n  return addMetricObserver('fid', callback, instrumentFid, _previousFid);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n */\nfunction addTtfbInstrumentationHandler(callback) {\n  return addMetricObserver('ttfb', callback, instrumentTtfb, _previousTtfb);\n}\n\n/**\n * Add a callback that will be triggered when a INP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addInpInstrumentationHandler(\n  callback,\n) {\n  return addMetricObserver('inp', callback, instrumentInp, _previousInp);\n}\n\n/**\n * Add a callback that will be triggered when a performance observer is triggered,\n * and receives the entries of the observer.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addPerformanceInstrumentationHandler(\n  type,\n  callback,\n) {\n  addHandler(type, callback);\n\n  if (!instrumented[type]) {\n    instrumentPerformanceObserver(type);\n    instrumented[type] = true;\n  }\n\n  return getCleanupCallback(type, callback);\n}\n\n/** Trigger all handlers of a given type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = handlers[type];\n\n  if (!typeHandlers || !typeHandlers.length) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nfunction instrumentCls() {\n  return onCLS(\n    metric => {\n      triggerHandlers('cls', {\n        metric,\n      });\n      _previousCls = metric;\n    },\n    // We want the callback to be called whenever the CLS value updates.\n    // By default, the callback is only called when the tab goes to the background.\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentFid() {\n  return onFID(metric => {\n    triggerHandlers('fid', {\n      metric,\n    });\n    _previousFid = metric;\n  });\n}\n\nfunction instrumentLcp() {\n  return onLCP(\n    metric => {\n      triggerHandlers('lcp', {\n        metric,\n      });\n      _previousLcp = metric;\n    },\n    // We want the callback to be called whenever the LCP value updates.\n    // By default, the callback is only called when the tab goes to the background.\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentTtfb() {\n  return onTTFB(metric => {\n    triggerHandlers('ttfb', {\n      metric,\n    });\n    _previousTtfb = metric;\n  });\n}\n\nfunction instrumentInp() {\n  return onINP(metric => {\n    triggerHandlers('inp', {\n      metric,\n    });\n    _previousInp = metric;\n  });\n}\n\nfunction addMetricObserver(\n  type,\n  callback,\n  instrumentFn,\n  previousValue,\n  stopOnCallback = false,\n) {\n  addHandler(type, callback);\n\n  let stopListening;\n\n  if (!instrumented[type]) {\n    stopListening = instrumentFn();\n    instrumented[type] = true;\n  }\n\n  if (previousValue) {\n    callback({ metric: previousValue });\n  }\n\n  return getCleanupCallback(type, callback, stopOnCallback ? stopListening : undefined);\n}\n\nfunction instrumentPerformanceObserver(type) {\n  const options = {};\n\n  // Special per-type options we want to use\n  if (type === 'event') {\n    options.durationThreshold = 0;\n  }\n\n  observe(\n    type,\n    entries => {\n      triggerHandlers(type, { entries });\n    },\n    options,\n  );\n}\n\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n// Get a callback which can be called to remove the instrumentation handler\nfunction getCleanupCallback(\n  type,\n  callback,\n  stopListening,\n) {\n  return () => {\n    if (stopListening) {\n      stopListening();\n    }\n\n    const typeHandlers = handlers[type];\n\n    if (!typeHandlers) {\n      return;\n    }\n\n    const index = typeHandlers.indexOf(callback);\n    if (index !== -1) {\n      typeHandlers.splice(index, 1);\n    }\n  };\n}\n\n/**\n * Check if a PerformanceEntry is a PerformanceEventTiming by checking for the `duration` property.\n */\nfunction isPerformanceEventTiming(entry) {\n  return 'duration' in entry;\n}\n\nexport { addClsInstrumentationHandler, addFidInstrumentationHandler, addInpInstrumentationHandler, addLcpInstrumentationHandler, addPerformanceInstrumentationHandler, addTtfbInstrumentationHandler, isPerformanceEventTiming };\n//# sourceMappingURL=instrument.js.map\n","import { spanToJSON, withActiveSpan, startInactiveSpan, getClient, getCurrentScope } from '@sentry/core';\nimport { WINDOW } from '../types.js';\n\n/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nfunction startAndEndSpan(\n  parentSpan,\n  startTimeInSeconds,\n  endTime,\n  { ...ctx },\n) {\n  const parentStartTime = spanToJSON(parentSpan).start_timestamp;\n  if (parentStartTime && parentStartTime > startTimeInSeconds) {\n    // We can only do this for SentrySpans...\n    if (typeof (parentSpan ).updateStartTime === 'function') {\n      (parentSpan ).updateStartTime(startTimeInSeconds);\n    }\n  }\n\n  // The return value only exists for tests\n  return withActiveSpan(parentSpan, () => {\n    const span = startInactiveSpan({\n      startTime: startTimeInSeconds,\n      ...ctx,\n    });\n\n    if (span) {\n      span.end(endTime);\n    }\n\n    return span;\n  });\n}\n\n/**\n * Starts an inactive, standalone span used to send web vital values to Sentry.\n * DO NOT use this for arbitrary spans, as these spans require special handling\n * during ingestion to extract metrics.\n *\n * This function adds a bunch of attributes and data to the span that's shared\n * by all web vital standalone spans. However, you need to take care of adding\n * the actual web vital value as an event to the span. Also, you need to assign\n * a transaction name and some other values that are specific to the web vital.\n *\n * Ultimately, you also need to take care of ending the span to send it off.\n *\n * @param options\n *\n * @returns an inactive, standalone and NOT YET ended span\n */\nfunction startStandaloneWebVitalSpan(options) {\n  const client = getClient();\n  if (!client) {\n    return;\n  }\n\n  const { name, transaction, attributes: passedAttributes, startTime } = options;\n\n  const { release, environment } = client.getOptions();\n  // We need to get the replay, user, and activeTransaction from the current scope\n  // so that we can associate replay id, profile id, and a user display to the span\n  const replay = client.getIntegrationByName('Replay');\n  const replayId = replay && replay.getReplayId();\n\n  const scope = getCurrentScope();\n\n  const user = scope.getUser();\n  const userDisplay = user !== undefined ? user.email || user.id || user.ip_address : undefined;\n\n  let profileId;\n  try {\n    // @ts-expect-error skip optional chaining to save bundle size with try catch\n    profileId = scope.getScopeData().contexts.profile.profile_id;\n  } catch (e) {\n    // do nothing\n  }\n\n  const attributes = {\n    release,\n    environment,\n\n    user: userDisplay || undefined,\n    profile_id: profileId || undefined,\n    replay_id: replayId || undefined,\n\n    transaction,\n\n    // Web vital score calculation relies on the user agent to account for different\n    // browsers setting different thresholds for what is considered a good/meh/bad value.\n    // For example: Chrome vs. Chrome Mobile\n    'user_agent.original': WINDOW.navigator && WINDOW.navigator.userAgent,\n\n    ...passedAttributes,\n  };\n\n  return startInactiveSpan({\n    name,\n    attributes,\n    startTime,\n    experimental: {\n      standalone: true,\n    },\n  });\n}\n\n/** Get the browser performance API. */\nfunction getBrowserPerformanceAPI() {\n  // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n  return WINDOW && WINDOW.addEventListener && WINDOW.performance;\n}\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n  return time / 1000;\n}\n\nexport { getBrowserPerformanceAPI, isMeasurementValue, msToSec, startAndEndSpan, startStandaloneWebVitalSpan };\n//# sourceMappingURL=utils.js.map\n","import { getClient, getActiveSpan, getRootSpan, spanToJSON, logger, browserPerformanceTimeOrigin, getCurrentScope, htmlTreeAsString, dropUndefinedKeys, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { addClsInstrumentationHandler } from './instrument.js';\nimport { msToSec, startStandaloneWebVitalSpan } from './utils.js';\nimport { onHidden } from './web-vitals/lib/onHidden.js';\n\n/**\n * Starts tracking the Cumulative Layout Shift on the current page and collects the value once\n *\n * - the page visibility is hidden\n * - a navigation span is started (to stop CLS measurement for SPA soft navigations)\n *\n * Once either of these events triggers, the CLS value is sent as a standalone span and we stop\n * measuring CLS.\n */\nfunction trackClsAsStandaloneSpan() {\n  let standaloneCLsValue = 0;\n  let standaloneClsEntry;\n  let pageloadSpanId;\n\n  if (!supportsLayoutShift()) {\n    return;\n  }\n\n  let sentSpan = false;\n  function _collectClsOnce() {\n    if (sentSpan) {\n      return;\n    }\n    sentSpan = true;\n    if (pageloadSpanId) {\n      sendStandaloneClsSpan(standaloneCLsValue, standaloneClsEntry, pageloadSpanId);\n    }\n    cleanupClsHandler();\n  }\n\n  const cleanupClsHandler = addClsInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1] ;\n    if (!entry) {\n      return;\n    }\n    standaloneCLsValue = metric.value;\n    standaloneClsEntry = entry;\n  }, true);\n\n  // use pagehide event from web-vitals\n  onHidden(() => {\n    _collectClsOnce();\n  });\n\n  // Since the call chain of this function is synchronous and evaluates before the SDK client is created,\n  // we need to wait with subscribing to a client hook until the client is created. Therefore, we defer\n  // to the next tick after the SDK setup.\n  setTimeout(() => {\n    const client = getClient();\n\n    if (!client) {\n      return;\n    }\n\n    const unsubscribeStartNavigation = client.on('startNavigationSpan', () => {\n      _collectClsOnce();\n      unsubscribeStartNavigation && unsubscribeStartNavigation();\n    });\n\n    const activeSpan = getActiveSpan();\n    const rootSpan = activeSpan && getRootSpan(activeSpan);\n    const spanJSON = rootSpan && spanToJSON(rootSpan);\n    if (spanJSON && spanJSON.op === 'pageload') {\n      pageloadSpanId = rootSpan.spanContext().spanId;\n    }\n  }, 0);\n}\n\nfunction sendStandaloneClsSpan(clsValue, entry, pageloadSpanId) {\n  DEBUG_BUILD && logger.log(`Sending CLS span (${clsValue})`);\n\n  const startTime = msToSec((browserPerformanceTimeOrigin || 0) + ((entry && entry.startTime) || 0));\n  const routeName = getCurrentScope().getScopeData().transactionName;\n\n  const name = entry ? htmlTreeAsString(entry.sources[0] && entry.sources[0].node) : 'Layout shift';\n\n  const attributes = dropUndefinedKeys({\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser.cls',\n    [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'ui.webvital.cls',\n    [SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: (entry && entry.duration) || 0,\n    // attach the pageload span id to the CLS span so that we can link them in the UI\n    'sentry.pageload.span_id': pageloadSpanId,\n  });\n\n  const span = startStandaloneWebVitalSpan({\n    name,\n    transaction: routeName,\n    attributes,\n    startTime,\n  });\n\n  if (span) {\n    span.addEvent('cls', {\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: '',\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: clsValue,\n    });\n\n    // LayoutShift performance entries always have a duration of 0, so we don't need to add `entry.duration` here\n    // see: https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/duration\n    span.end(startTime);\n  }\n}\n\nfunction supportsLayoutShift() {\n  try {\n    return PerformanceObserver.supportedEntryTypes.includes('layout-shift');\n  } catch (e) {\n    return false;\n  }\n}\n\nexport { trackClsAsStandaloneSpan };\n//# sourceMappingURL=cls.js.map\n","import { browserPerformanceTimeOrigin, getActiveSpan, spanToJSON, setMeasurement, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, parseUrl, htmlTreeAsString, getComponentName } from '@sentry/core';\nimport { WINDOW } from '../types.js';\nimport { trackClsAsStandaloneSpan } from './cls.js';\nimport { addPerformanceInstrumentationHandler, addClsInstrumentationHandler, addLcpInstrumentationHandler, addFidInstrumentationHandler, addTtfbInstrumentationHandler } from './instrument.js';\nimport { getBrowserPerformanceAPI, msToSec, startAndEndSpan, isMeasurementValue } from './utils.js';\nimport { getActivationStart } from './web-vitals/lib/getActivationStart.js';\nimport { getNavigationEntry } from './web-vitals/lib/getNavigationEntry.js';\nimport { getVisibilityWatcher } from './web-vitals/lib/getVisibilityWatcher.js';\n\nconst MAX_INT_AS_BYTES = 2147483647;\n\nlet _performanceCursor = 0;\n\nlet _measurements = {};\nlet _lcpEntry;\nlet _clsEntry;\n\n/**\n * Start tracking web vitals.\n * The callback returned by this function can be used to stop tracking & ensure all measurements are final & captured.\n *\n * @returns A function that forces web vitals collection\n */\nfunction startTrackingWebVitals({ recordClsStandaloneSpans }) {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n    if (performance.mark) {\n      WINDOW.performance.mark('sentry-tracing-init');\n    }\n    const fidCleanupCallback = _trackFID();\n    const lcpCleanupCallback = _trackLCP();\n    const ttfbCleanupCallback = _trackTtfb();\n    const clsCleanupCallback = recordClsStandaloneSpans ? trackClsAsStandaloneSpan() : _trackCLS();\n\n    return () => {\n      fidCleanupCallback();\n      lcpCleanupCallback();\n      ttfbCleanupCallback();\n      clsCleanupCallback && clsCleanupCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\n/**\n * Start tracking long tasks.\n */\nfunction startTrackingLongTasks() {\n  addPerformanceInstrumentationHandler('longtask', ({ entries }) => {\n    const parent = getActiveSpan();\n    if (!parent) {\n      return;\n    }\n\n    const { op: parentOp, start_timestamp: parentStartTimestamp } = spanToJSON(parent);\n\n    for (const entry of entries) {\n      const startTime = msToSec((browserPerformanceTimeOrigin ) + entry.startTime);\n      const duration = msToSec(entry.duration);\n\n      if (parentOp === 'navigation' && parentStartTimestamp && startTime < parentStartTimestamp) {\n        // Skip adding a span if the long task started before the navigation started.\n        // `startAndEndSpan` will otherwise adjust the parent's start time to the span's start\n        // time, potentially skewing the duration of the actual navigation as reported via our\n        // routing instrumentations\n        continue;\n      }\n\n      startAndEndSpan(parent, startTime, startTime + duration, {\n        name: 'Main UI thread blocked',\n        op: 'ui.long-task',\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n        },\n      });\n    }\n  });\n}\n\n/**\n * Start tracking long animation frames.\n */\nfunction startTrackingLongAnimationFrames() {\n  // NOTE: the current web-vitals version (3.5.2) does not support long-animation-frame, so\n  // we directly observe `long-animation-frame` events instead of through the web-vitals\n  // `observe` helper function.\n  const observer = new PerformanceObserver(list => {\n    const parent = getActiveSpan();\n    if (!parent) {\n      return;\n    }\n    for (const entry of list.getEntries() ) {\n      if (!entry.scripts[0]) {\n        continue;\n      }\n\n      const startTime = msToSec((browserPerformanceTimeOrigin ) + entry.startTime);\n\n      const { start_timestamp: parentStartTimestamp, op: parentOp } = spanToJSON(parent);\n\n      if (parentOp === 'navigation' && parentStartTimestamp && startTime < parentStartTimestamp) {\n        // Skip adding the span if the long animation frame started before the navigation started.\n        // `startAndEndSpan` will otherwise adjust the parent's start time to the span's start\n        // time, potentially skewing the duration of the actual navigation as reported via our\n        // routing instrumentations\n        continue;\n      }\n\n      const duration = msToSec(entry.duration);\n\n      const attributes = {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n      };\n\n      const initialScript = entry.scripts[0];\n      const { invoker, invokerType, sourceURL, sourceFunctionName, sourceCharPosition } = initialScript;\n      attributes['browser.script.invoker'] = invoker;\n      attributes['browser.script.invoker_type'] = invokerType;\n      if (sourceURL) {\n        attributes['code.filepath'] = sourceURL;\n      }\n      if (sourceFunctionName) {\n        attributes['code.function'] = sourceFunctionName;\n      }\n      if (sourceCharPosition !== -1) {\n        attributes['browser.script.source_char_position'] = sourceCharPosition;\n      }\n\n      startAndEndSpan(parent, startTime, startTime + duration, {\n        name: 'Main UI thread blocked',\n        op: 'ui.long-animation-frame',\n        attributes,\n      });\n    }\n  });\n\n  observer.observe({ type: 'long-animation-frame', buffered: true });\n}\n\n/**\n * Start tracking interaction events.\n */\nfunction startTrackingInteractions() {\n  addPerformanceInstrumentationHandler('event', ({ entries }) => {\n    const parent = getActiveSpan();\n    if (!parent) {\n      return;\n    }\n    for (const entry of entries) {\n      if (entry.name === 'click') {\n        const startTime = msToSec((browserPerformanceTimeOrigin ) + entry.startTime);\n        const duration = msToSec(entry.duration);\n\n        const spanOptions = {\n          name: htmlTreeAsString(entry.target),\n          op: `ui.interaction.${entry.name}`,\n          startTime: startTime,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n          },\n        };\n\n        const componentName = getComponentName(entry.target);\n        if (componentName) {\n          spanOptions.attributes['ui.component_name'] = componentName;\n        }\n\n        startAndEndSpan(parent, startTime, startTime + duration, spanOptions);\n      }\n    }\n  });\n}\n\n/**\n * Starts tracking the Cumulative Layout Shift on the current page and collects the value and last entry\n * to the `_measurements` object which ultimately is applied to the pageload span's measurements.\n */\nfunction _trackCLS() {\n  return addClsInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1] ;\n    if (!entry) {\n      return;\n    }\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry;\n  }, true);\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP() {\n  return addLcpInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _lcpEntry = entry ;\n  }, true);\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID() {\n  return addFidInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    const timeOrigin = msToSec(browserPerformanceTimeOrigin );\n    const startTime = msToSec(entry.startTime);\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\nfunction _trackTtfb() {\n  return addTtfbInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    _measurements['ttfb'] = { value: metric.value, unit: 'millisecond' };\n  });\n}\n\n/** Add performance related spans to a transaction */\nfunction addPerformanceEntries(span, options) {\n  const performance = getBrowserPerformanceAPI();\n  if (!performance || !performance.getEntries || !browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  const timeOrigin = msToSec(browserPerformanceTimeOrigin);\n\n  const performanceEntries = performance.getEntries();\n\n  const { op, start_timestamp: transactionStartTime } = spanToJSON(span);\n\n  performanceEntries.slice(_performanceCursor).forEach(entry => {\n    const startTime = msToSec(entry.startTime);\n    const duration = msToSec(\n      // Inexplicably, Chrome sometimes emits a negative duration. We need to work around this.\n      // There is a SO post attempting to explain this, but it leaves one with open questions: https://stackoverflow.com/questions/23191918/peformance-getentries-and-negative-duration-display\n      // The way we clamp the value is probably not accurate, since we have observed this happen for things that may take a while to load, like for example the replay worker.\n      // TODO: Investigate why this happens and how to properly mitigate. For now, this is a workaround to prevent transactions being dropped due to negative duration spans.\n      Math.max(0, entry.duration),\n    );\n\n    if (op === 'navigation' && transactionStartTime && timeOrigin + startTime < transactionStartTime) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(span, entry , timeOrigin);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        _addMeasureSpans(span, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        const firstHidden = getVisibilityWatcher();\n        // Only report if the page wasn't hidden prior to the web vital.\n        const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        break;\n      }\n      case 'resource': {\n        _addResourceSpans(span, entry , entry.name, startTime, duration, timeOrigin);\n        break;\n      }\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(span);\n\n  // Measurements are only available for pageload transactions\n  if (op === 'pageload') {\n    _addTtfbRequestTimeToMeasurements(_measurements);\n\n    const fidMark = _measurements['mark.fid'];\n    if (fidMark && _measurements['fid']) {\n      // create span for FID\n      startAndEndSpan(span, fidMark.value, fidMark.value + msToSec(_measurements['fid'].value), {\n        name: 'first input delay',\n        op: 'ui.action',\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n        },\n      });\n\n      // Delete mark.fid as we don't want it to be part of final payload\n      delete _measurements['mark.fid'];\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    // TODO: Check if the first condition is still necessary: `onCLS` already only fires once `onFCP` was called.\n    if (!('fcp' in _measurements) || !options.recordClsOnPageloadSpan) {\n      delete _measurements.cls;\n    }\n\n    Object.entries(_measurements).forEach(([measurementName, measurement]) => {\n      setMeasurement(measurementName, measurement.value, measurement.unit);\n    });\n\n    // Set timeOrigin which denotes the timestamp which to base the LCP/FCP/FP/TTFB measurements on\n    span.setAttribute('performance.timeOrigin', timeOrigin);\n\n    // In prerendering scenarios, where a page might be prefetched and pre-rendered before the user clicks the link,\n    // the navigation starts earlier than when the user clicks it. Web Vitals should always be based on the\n    // user-perceived time, so they are not reported from the actual start of the navigation, but rather from the\n    // time where the user actively started the navigation, for example by clicking a link.\n    // This is user action is called \"activation\" and the time between navigation and activation is stored in\n    // the `activationStart` attribute of the \"navigation\" PerformanceEntry.\n    span.setAttribute('performance.activationStart', getActivationStart());\n\n    _setWebVitalAttributes(span);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/**\n * Create measure related spans.\n * Exported only for tests.\n */\nfunction _addMeasureSpans(\n  span,\n  entry,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  const navEntry = getNavigationEntry(false);\n  const requestTime = msToSec(navEntry ? navEntry.requestStart : 0);\n  // Because performance.measure accepts arbitrary timestamps it can produce\n  // spans that happen before the browser even makes a request for the page.\n  //\n  // An example of this is the automatically generated Next.js-before-hydration\n  // spans created by the Next.js framework.\n  //\n  // To prevent this we will pin the start timestamp to the request start time\n  // This does make duration inaccurate, so if this does happen, we will add\n  // an attribute to the span\n  const measureStartTimestamp = timeOrigin + Math.max(startTime, requestTime);\n  const startTimeStamp = timeOrigin + startTime;\n  const measureEndTimestamp = startTimeStamp + duration;\n\n  const attributes = {\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.resource.browser.metrics',\n  };\n\n  if (measureStartTimestamp !== startTimeStamp) {\n    attributes['sentry.browser.measure_happened_before_request'] = true;\n    attributes['sentry.browser.measure_start_time'] = measureStartTimestamp;\n  }\n\n  startAndEndSpan(span, measureStartTimestamp, measureEndTimestamp, {\n    name: entry.name ,\n    op: entry.entryType ,\n    attributes,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\nfunction _addNavigationSpans(span, entry, timeOrigin) {\n  (['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'] ).forEach(event => {\n    _addPerformanceNavigationTiming(span, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(span, entry, 'secureConnection', timeOrigin, 'TLS/SSL');\n  _addPerformanceNavigationTiming(span, entry, 'fetch', timeOrigin, 'cache');\n  _addPerformanceNavigationTiming(span, entry, 'domainLookup', timeOrigin, 'DNS');\n\n  _addRequest(span, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  span,\n  entry,\n  event,\n  timeOrigin,\n  name = event,\n) {\n  const eventEnd = _getEndPropertyNameForNavigationTiming(event) ;\n  const end = entry[eventEnd];\n  const start = entry[`${event}Start`];\n  if (!start || !end) {\n    return;\n  }\n  startAndEndSpan(span, timeOrigin + msToSec(start), timeOrigin + msToSec(end), {\n    op: `browser.${name}`,\n    name: entry.name,\n    attributes: {\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n    },\n  });\n}\n\nfunction _getEndPropertyNameForNavigationTiming(event) {\n  if (event === 'secureConnection') {\n    return 'connectEnd';\n  }\n  if (event === 'fetch') {\n    return 'domainLookupStart';\n  }\n  return `${event}End`;\n}\n\n/** Create request and response related spans */\nfunction _addRequest(span, entry, timeOrigin) {\n  const requestStartTimestamp = timeOrigin + msToSec(entry.requestStart );\n  const responseEndTimestamp = timeOrigin + msToSec(entry.responseEnd );\n  const responseStartTimestamp = timeOrigin + msToSec(entry.responseStart );\n  if (entry.responseEnd) {\n    // It is possible that we are collecting these metrics when the page hasn't finished loading yet, for example when the HTML slowly streams in.\n    // In this case, ie. when the document request hasn't finished yet, `entry.responseEnd` will be 0.\n    // In order not to produce faulty spans, where the end timestamp is before the start timestamp, we will only collect\n    // these spans when the responseEnd value is available. The backend (Relay) would drop the entire span if it contained faulty spans.\n    startAndEndSpan(span, requestStartTimestamp, responseEndTimestamp, {\n      op: 'browser.request',\n      name: entry.name,\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n      },\n    });\n\n    startAndEndSpan(span, responseStartTimestamp, responseEndTimestamp, {\n      op: 'browser.response',\n      name: entry.name,\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n      },\n    });\n  }\n}\n\n/**\n * Create resource-related spans.\n * Exported only for tests.\n */\nfunction _addResourceSpans(\n  span,\n  entry,\n  resourceUrl,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  const parsedUrl = parseUrl(resourceUrl);\n\n  const attributes = {\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.resource.browser.metrics',\n  };\n  setResourceEntrySizeData(attributes, entry, 'transferSize', 'http.response_transfer_size');\n  setResourceEntrySizeData(attributes, entry, 'encodedBodySize', 'http.response_content_length');\n  setResourceEntrySizeData(attributes, entry, 'decodedBodySize', 'http.decoded_response_content_length');\n\n  // `deliveryType` is experimental and does not exist everywhere\n  const deliveryType = (entry ).deliveryType;\n  if (deliveryType != null) {\n    attributes['http.response_delivery_type'] = deliveryType;\n  }\n\n  // Types do not reflect this property yet\n  const renderBlockingStatus = (entry )\n    .renderBlockingStatus;\n  if (renderBlockingStatus) {\n    attributes['resource.render_blocking_status'] = renderBlockingStatus;\n  }\n\n  if (parsedUrl.protocol) {\n    attributes['url.scheme'] = parsedUrl.protocol.split(':').pop(); // the protocol returned by parseUrl includes a :, but OTEL spec does not, so we remove it.\n  }\n\n  if (parsedUrl.host) {\n    attributes['server.address'] = parsedUrl.host;\n  }\n\n  attributes['url.same_origin'] = resourceUrl.includes(WINDOW.location.origin);\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  startAndEndSpan(span, startTimestamp, endTimestamp, {\n    name: resourceUrl.replace(WINDOW.location.origin, ''),\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource.other',\n    attributes,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(span) {\n  const navigator = WINDOW.navigator ;\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  const connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      span.setAttribute('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      span.setAttribute('connectionType', connection.type);\n    }\n\n    if (isMeasurementValue(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n  }\n\n  if (isMeasurementValue(navigator.deviceMemory)) {\n    span.setAttribute('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if (isMeasurementValue(navigator.hardwareConcurrency)) {\n    span.setAttribute('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to span to allow debugging */\nfunction _setWebVitalAttributes(span) {\n  if (_lcpEntry) {\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      span.setAttribute('lcp.element', htmlTreeAsString(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      span.setAttribute('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      span.setAttribute('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    if (_lcpEntry.loadTime != null) {\n      // loadTime is the time of LCP that's related to receiving the LCP element response..\n      span.setAttribute('lcp.loadTime', _lcpEntry.loadTime);\n    }\n\n    if (_lcpEntry.renderTime != null) {\n      // renderTime is loadTime + rendering time\n      // it's 0 if the LCP element is loaded from a 3rd party origin that doesn't send the\n      // `Timing-Allow-Origin` header.\n      span.setAttribute('lcp.renderTime', _lcpEntry.renderTime);\n    }\n\n    span.setAttribute('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    _clsEntry.sources.forEach((source, index) =>\n      span.setAttribute(`cls.source.${index + 1}`, htmlTreeAsString(source.node)),\n    );\n  }\n}\n\nfunction setResourceEntrySizeData(\n  attributes,\n  entry,\n  key,\n  dataKey,\n) {\n  const entryVal = entry[key];\n  if (entryVal != null && entryVal < MAX_INT_AS_BYTES) {\n    attributes[dataKey] = entryVal;\n  }\n}\n\n/**\n * Add ttfb request time information to measurements.\n *\n * ttfb information is added via vendored web vitals library.\n */\nfunction _addTtfbRequestTimeToMeasurements(_measurements) {\n  const navEntry = getNavigationEntry(false);\n  if (!navEntry) {\n    return;\n  }\n\n  const { responseStart, requestStart } = navEntry;\n\n  if (requestStart <= responseStart) {\n    _measurements['ttfb.requestTime'] = {\n      value: responseStart - requestStart,\n      unit: 'millisecond',\n    };\n  }\n}\n\nexport { _addMeasureSpans, _addResourceSpans, addPerformanceEntries, startTrackingInteractions, startTrackingLongAnimationFrames, startTrackingLongTasks, startTrackingWebVitals };\n//# sourceMappingURL=browserMetrics.js.map\n","import { addHandler, maybeInstrument, triggerHandlers, fill, addNonEnumerableProperty, uuid4 } from '@sentry/core';\nimport { WINDOW } from '../types.js';\n\nconst DEBOUNCE_DURATION = 1000;\n\nlet debounceTimerID;\nlet lastCapturedEventType;\nlet lastCapturedEventTargetId;\n\n/**\n * Add an instrumentation handler for when a click or a keypress happens.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addClickKeypressInstrumentationHandler(handler) {\n  const type = 'dom';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentDOM);\n}\n\n/** Exported for tests only. */\nfunction instrumentDOM() {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n    const globalObject = WINDOW ;\n    const targetObj = globalObject[target];\n    const proto = targetObj && targetObj.prototype;\n\n    // eslint-disable-next-line no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener) {\n      return function ( type, listener, options) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const handlers = (this.__sentry_instrumentation_handlers__ =\n              this.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListeners` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function ( type, listener, options) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const handlers = this.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete this.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListeners` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\n/**\n * Check whether the event is similar to the last captured one. For example, two click events on the same button.\n */\nfunction isSimilarToLastCapturedEvent(event) {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (event.type !== lastCapturedEventType) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (!event.target || (event.target )._sentryId !== lastCapturedEventTargetId) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(eventType, target) {\n  // We are only interested in filtering `keypress` events for now.\n  if (eventType !== 'keypress') {\n    return false;\n  }\n\n  if (!target || !target.tagName) {\n    return true;\n  }\n\n  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n  // e.g.tabbing through elements, hotkeys, etc.\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n */\nfunction makeDOMEventHandler(\n  handler,\n  globalListener = false,\n) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    const target = getEventTarget(event);\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event.type, target)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    addNonEnumerableProperty(event, '_sentryCaptured', true);\n\n    if (target && !target._sentryId) {\n      // Add UUID to event target so we can identify if\n      addNonEnumerableProperty(target, '_sentryId', uuid4());\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (!isSimilarToLastCapturedEvent(event)) {\n      const handlerData = { event, name, global: globalListener };\n      handler(handlerData);\n      lastCapturedEventType = event.type;\n      lastCapturedEventTargetId = target ? target._sentryId : undefined;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      lastCapturedEventTargetId = undefined;\n      lastCapturedEventType = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\nfunction getEventTarget(event) {\n  try {\n    return event.target ;\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n    return null;\n  }\n}\n\nexport { addClickKeypressInstrumentationHandler, instrumentDOM };\n//# sourceMappingURL=dom.js.map\n","import { addHandler, maybeInstrument, supportsHistory, triggerHandlers, fill } from '@sentry/core';\nimport { WINDOW } from '../types.js';\n\nlet lastHref;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addHistoryInstrumentationHandler(handler) {\n  const type = 'history';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentHistory);\n}\n\nfunction instrumentHistory() {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function ( ...args) {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    const handlerData = { from, to };\n    triggerHandlers('history', handlerData);\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        const handlerData = { from, to };\n        triggerHandlers('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nexport { addHistoryInstrumentationHandler };\n//# sourceMappingURL=history.js.map\n","import { isNativeFunction, logger } from '@sentry/core';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { WINDOW } from './types.js';\n\n/**\n * We generally want to use window.fetch / window.setTimeout.\n * However, in some cases this may be wrapped (e.g. by Zone.js for Angular),\n * so we try to get an unpatched version of this from a sandboxed iframe.\n */\n\nconst cachedImplementations = {};\n\n/**\n * Get the native implementation of a browser function.\n *\n * This can be used to ensure we get an unwrapped version of a function, in cases where a wrapped function can lead to problems.\n *\n * The following methods can be retrieved:\n * - `setTimeout`: This can be wrapped by e.g. Angular, causing change detection to be triggered.\n * - `fetch`: This can be wrapped by e.g. ad-blockers, causing an infinite loop when a request is blocked.\n */\nfunction getNativeImplementation(\n  name,\n) {\n  const cached = cachedImplementations[name];\n  if (cached) {\n    return cached;\n  }\n\n  let impl = WINDOW[name] ;\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFunction(impl)) {\n    return (cachedImplementations[name] = impl.bind(WINDOW) );\n  }\n\n  const document = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow[name]) {\n        impl = contentWindow[name] ;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      // Could not create sandbox iframe, just use window.xxx\n      DEBUG_BUILD && logger.warn(`Could not create sandbox iframe for ${name} check, bailing to window.${name}: `, e);\n    }\n  }\n\n  // Sanity check: This _should_ not happen, but if it does, we just skip caching...\n  // This can happen e.g. in tests where fetch may not be available in the env, or similar.\n  if (!impl) {\n    return impl;\n  }\n\n  return (cachedImplementations[name] = impl.bind(WINDOW) );\n}\n\n/** Clear a cached implementation. */\nfunction clearCachedImplementation(name) {\n  cachedImplementations[name] = undefined;\n}\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction fetch(...rest) {\n  return getNativeImplementation('fetch')(...rest);\n}\n\n/**\n * Get an unwrapped `setTimeout` method.\n * This ensures that even if e.g. Angular wraps `setTimeout`, we get the native implementation,\n * avoiding triggering change detection.\n */\nfunction setTimeout(...rest) {\n  return getNativeImplementation('setTimeout')(...rest);\n}\n\nexport { clearCachedImplementation, fetch, getNativeImplementation, setTimeout };\n//# sourceMappingURL=getNativeImplementation.js.map\n","import { addHandler, maybeInstrument, timestampInSeconds, isString, triggerHandlers } from '@sentry/core';\nimport { WINDOW } from '../types.js';\n\nconst SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addXhrInstrumentationHandler(handler) {\n  const type = 'xhr';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nfunction instrumentXHR() {\n  if (!(WINDOW ).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  xhrproto.open = new Proxy(xhrproto.open, {\n    apply(originalOpen, xhrOpenThisArg, xhrOpenArgArray) {\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n      //       it means the error, that was caused by your XHR call did not\n      //       have a stack trace. If you are using HttpClient integration,\n      //       this is the expected behavior, as we are using this virtual error to capture\n      //       the location of your XHR call, and group your HttpClient events accordingly.\n      const virtualError = new Error();\n\n      const startTimestamp = timestampInSeconds() * 1000;\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = isString(xhrOpenArgArray[0]) ? xhrOpenArgArray[0].toUpperCase() : undefined;\n      const url = parseUrl(xhrOpenArgArray[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(xhrOpenThisArg, xhrOpenArgArray);\n      }\n\n      xhrOpenThisArg[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        xhrOpenThisArg.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = xhrOpenThisArg[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (xhrOpenThisArg.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = xhrOpenThisArg.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          const handlerData = {\n            endTimestamp: timestampInSeconds() * 1000,\n            startTimestamp,\n            xhr: xhrOpenThisArg,\n            virtualError,\n          };\n          triggerHandlers('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in xhrOpenThisArg && typeof xhrOpenThisArg.onreadystatechange === 'function') {\n        xhrOpenThisArg.onreadystatechange = new Proxy(xhrOpenThisArg.onreadystatechange, {\n          apply(originalOnreadystatechange, onreadystatechangeThisArg, onreadystatechangeArgArray) {\n            onreadystatechangeHandler();\n            return originalOnreadystatechange.apply(onreadystatechangeThisArg, onreadystatechangeArgArray);\n          },\n        });\n      } else {\n        xhrOpenThisArg.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      xhrOpenThisArg.setRequestHeader = new Proxy(xhrOpenThisArg.setRequestHeader, {\n        apply(\n          originalSetRequestHeader,\n          setRequestHeaderThisArg,\n          setRequestHeaderArgArray,\n        ) {\n          const [header, value] = setRequestHeaderArgArray;\n\n          const xhrInfo = setRequestHeaderThisArg[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && isString(header) && isString(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return originalSetRequestHeader.apply(setRequestHeaderThisArg, setRequestHeaderArgArray);\n        },\n      });\n\n      return originalOpen.apply(xhrOpenThisArg, xhrOpenArgArray);\n    },\n  });\n\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  xhrproto.send = new Proxy(xhrproto.send, {\n    apply(originalSend, sendThisArg, sendArgArray) {\n      const sentryXhrData = sendThisArg[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(sendThisArg, sendArgArray);\n      }\n\n      if (sendArgArray[0] !== undefined) {\n        sentryXhrData.body = sendArgArray[0];\n      }\n\n      const handlerData = {\n        startTimestamp: timestampInSeconds() * 1000,\n        xhr: sendThisArg,\n      };\n      triggerHandlers('xhr', handlerData);\n\n      return originalSend.apply(sendThisArg, sendArgArray);\n    },\n  });\n}\n\nfunction parseUrl(url) {\n  if (isString(url)) {\n    return url;\n  }\n\n  try {\n    // url can be a string or URL\n    // but since URL is not available in IE11, we do not check for it,\n    // but simply assume it is an URL and return `toString()` from it (which returns the full URL)\n    // If that fails, we just return undefined\n    return (url ).toString();\n  } catch (e2) {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n\nexport { SENTRY_XHR_DATA_KEY, addXhrInstrumentationHandler, instrumentXHR };\n//# sourceMappingURL=xhr.js.map\n","import { browserPerformanceTimeOrigin, getActiveSpan, getRootSpan, spanToJSON, getCurrentScope, htmlTreeAsString, dropUndefinedKeys, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE } from '@sentry/core';\nimport { addInpInstrumentationHandler, addPerformanceInstrumentationHandler, isPerformanceEventTiming } from './instrument.js';\nimport { getBrowserPerformanceAPI, msToSec, startStandaloneWebVitalSpan } from './utils.js';\n\nconst LAST_INTERACTIONS = [];\nconst INTERACTIONS_SPAN_MAP = new Map();\n\n/**\n * Start tracking INP webvital events.\n */\nfunction startTrackingINP() {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    const inpCallback = _trackINP();\n\n    return () => {\n      inpCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\nconst INP_ENTRY_MAP = {\n  click: 'click',\n  pointerdown: 'click',\n  pointerup: 'click',\n  mousedown: 'click',\n  mouseup: 'click',\n  touchstart: 'click',\n  touchend: 'click',\n  mouseover: 'hover',\n  mouseout: 'hover',\n  mouseenter: 'hover',\n  mouseleave: 'hover',\n  pointerover: 'hover',\n  pointerout: 'hover',\n  pointerenter: 'hover',\n  pointerleave: 'hover',\n  dragstart: 'drag',\n  dragend: 'drag',\n  drag: 'drag',\n  dragenter: 'drag',\n  dragleave: 'drag',\n  dragover: 'drag',\n  drop: 'drag',\n  keydown: 'press',\n  keyup: 'press',\n  keypress: 'press',\n  input: 'press',\n};\n\n/** Starts tracking the Interaction to Next Paint on the current page. */\nfunction _trackINP() {\n  return addInpInstrumentationHandler(({ metric }) => {\n    if (metric.value == undefined) {\n      return;\n    }\n\n    const entry = metric.entries.find(entry => entry.duration === metric.value && INP_ENTRY_MAP[entry.name]);\n\n    if (!entry) {\n      return;\n    }\n\n    const { interactionId } = entry;\n    const interactionType = INP_ENTRY_MAP[entry.name];\n\n    /** Build the INP span, create an envelope from the span, and then send the envelope */\n    const startTime = msToSec((browserPerformanceTimeOrigin ) + entry.startTime);\n    const duration = msToSec(metric.value);\n    const activeSpan = getActiveSpan();\n    const rootSpan = activeSpan ? getRootSpan(activeSpan) : undefined;\n\n    // We first try to lookup the span from our INTERACTIONS_SPAN_MAP,\n    // where we cache the route per interactionId\n    const cachedSpan = interactionId != null ? INTERACTIONS_SPAN_MAP.get(interactionId) : undefined;\n\n    const spanToUse = cachedSpan || rootSpan;\n\n    // Else, we try to use the active span.\n    // Finally, we fall back to look at the transactionName on the scope\n    const routeName = spanToUse ? spanToJSON(spanToUse).description : getCurrentScope().getScopeData().transactionName;\n\n    const name = htmlTreeAsString(entry.target);\n    const attributes = dropUndefinedKeys({\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser.inp',\n      [SEMANTIC_ATTRIBUTE_SENTRY_OP]: `ui.interaction.${interactionType}`,\n      [SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: entry.duration,\n    });\n\n    const span = startStandaloneWebVitalSpan({\n      name,\n      transaction: routeName,\n      attributes,\n      startTime,\n    });\n\n    if (span) {\n      span.addEvent('inp', {\n        [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: 'millisecond',\n        [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: metric.value,\n      });\n\n      span.end(startTime + duration);\n    }\n  });\n}\n\n/**\n * Register a listener to cache route information for INP interactions.\n * TODO(v9): `latestRoute` no longer needs to be passed in and will be removed in v9.\n */\nfunction registerInpInteractionListener(_latestRoute) {\n  const handleEntries = ({ entries }) => {\n    const activeSpan = getActiveSpan();\n    const activeRootSpan = activeSpan && getRootSpan(activeSpan);\n\n    entries.forEach(entry => {\n      if (!isPerformanceEventTiming(entry) || !activeRootSpan) {\n        return;\n      }\n\n      const interactionId = entry.interactionId;\n      if (interactionId == null) {\n        return;\n      }\n\n      // If the interaction was already recorded before, nothing more to do\n      if (INTERACTIONS_SPAN_MAP.has(interactionId)) {\n        return;\n      }\n\n      // We keep max. 10 interactions in the list, then remove the oldest one & clean up\n      if (LAST_INTERACTIONS.length > 10) {\n        const last = LAST_INTERACTIONS.shift() ;\n        INTERACTIONS_SPAN_MAP.delete(last);\n      }\n\n      // We add the interaction to the list of recorded interactions\n      // and store the span for this interaction\n      LAST_INTERACTIONS.push(interactionId);\n      INTERACTIONS_SPAN_MAP.set(interactionId, activeRootSpan);\n    });\n  };\n\n  addPerformanceInstrumentationHandler('event', handleEntries);\n  addPerformanceInstrumentationHandler('first-input', handleEntries);\n}\n\nexport { registerInpInteractionListener, startTrackingINP };\n//# sourceMappingURL=inp.js.map\n","import { getNativeImplementation, clearCachedImplementation } from '@sentry-internal/browser-utils';\nimport { createTransport, rejectedSyncPromise } from '@sentry/core';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(\n  options,\n  nativeFetch = getNativeImplementation('fetch'),\n) {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request) {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. when finishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    if (!nativeFetch) {\n      clearCachedImplementation('fetch');\n      return rejectedSyncPromise('No fetch implementation available');\n    }\n\n    try {\n      // TODO: This may need a `suppressTracing` call in the future when we switch the browser SDK to OTEL\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedImplementation('fetch');\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeFetchTransport };\n//# sourceMappingURL=fetch.js.map\n","import { createStackParser, UNKNOWN_FUNCTION } from '@sentry/core';\n\n// This was originally forked from https://github.com/csnover/TraceKit, and was largely\n// re - written as part of raven - js.\n//\n// This code was later copied to the JavaScript mono - repo and further modified and\n// refactored over the years.\n\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename, func, lineno, colno) {\n  const frame = {\n    filename,\n    function: func === '<anonymous>' ? UNKNOWN_FUNCTION : func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// This regex matches frames that have no function name (ie. are at the top level of a module).\n// For example \"at http://localhost:5000//script.js:1:126\"\n// Frames _with_ function names usually look as follows: \"at commitLayoutEffects (react-dom.development.js:23426:1)\"\nconst chromeRegexNoFnName = /^\\s*at (\\S+?)(?::(\\d+))(?::(\\d+))\\s*$/i;\n\n// This regex matches all the frames that have a function name.\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\n// We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n// See: https://github.com/getsentry/sentry-javascript/issues/6880\nconst chromeStackParserFn = line => {\n  // If the stack line has no function name, we need to parse it differently\n  const noFnParts = chromeRegexNoFnName.exec(line) ;\n\n  if (noFnParts) {\n    const [, filename, line, col] = noFnParts;\n    return createFrame(filename, UNKNOWN_FUNCTION, +line, +col);\n  }\n\n  const parts = chromeRegex.exec(line) ;\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]) ;\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nconst chromeStackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko = line => {\n  const parts = geckoREgex.exec(line) ;\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]) ;\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nconst geckoStackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs = line => {\n  const parts = winjsRegex.exec(line) ;\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nconst winjsStackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10 = line => {\n  const parts = opera10Regex.exec(line) ;\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nconst opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11 = line => {\n  const parts = opera11Regex.exec(line) ;\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nconst opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n\nconst defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser];\n\nconst defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func, filename) => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? (func.split('@')[0] ) : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n\nexport { chromeStackLineParser, defaultStackLineParsers, defaultStackParser, geckoStackLineParser, opera10StackLineParser, opera11StackLineParser, winjsStackLineParser };\n//# sourceMappingURL=stack-parsers.js.map\n","import { addClickKeypressInstrumentationHandler, addXhrInstrumentationHandler, addHistoryInstrumentationHandler, SENTRY_XHR_DATA_KEY } from '@sentry-internal/browser-utils';\nimport { defineIntegration, addConsoleInstrumentationHandler, addFetchInstrumentationHandler, getClient, addBreadcrumb, getEventDescription, logger, htmlTreeAsString, getComponentName, severityLevelFromString, safeJoin, getBreadcrumbLogLevelFromHttpStatusCode, parseUrl } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\n\n/* eslint-disable max-lines */\n\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) ;\n\nconst breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client) {\n  return function addSentryBreadcrumb(event) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creates a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client,\n  dom,\n) {\n  return function _innerDomBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event ;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client) {\n  return function _consoleBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client) {\n  return function _xhrBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    const level = getBreadcrumbLogLevelFromHttpStatusCode(status_code);\n\n    addBreadcrumb(\n      {\n        category: 'xhr',\n        data,\n        type: 'http',\n        level,\n      },\n      hint,\n    );\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client) {\n  return function _fetchBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      const data = handlerData.fetchData;\n      const hint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          level: 'error',\n          type: 'http',\n        },\n        hint,\n      );\n    } else {\n      const response = handlerData.response ;\n      const data = {\n        ...handlerData.fetchData,\n        status_code: response && response.status,\n      };\n      const hint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n      const level = getBreadcrumbLogLevelFromHttpStatusCode(data.status_code);\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          type: 'http',\n          level,\n        },\n        hint,\n      );\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client) {\n  return function _historyBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from = handlerData.from;\n    let to = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom || !parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event) {\n  return !!event && !!(event ).target;\n}\n\nexport { breadcrumbsIntegration };\n//# sourceMappingURL=breadcrumbs.js.map\n","import { defineIntegration, fill, getFunctionName, getOriginalFunction } from '@sentry/core';\nimport { WINDOW, wrap } from '../helpers.js';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'BrowserApiErrors';\n\nconst _browserApiErrorsIntegration = ((options = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(_wrapEventTarget);\n      }\n    },\n  };\n}) ;\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n */\nconst browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\nfunction _wrapTimeFunction(original) {\n  return function ( ...args) {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\nfunction _wrapRAF(original) {\n  return function ( callback) {\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend) {\n  return function ( ...args) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        fill(xhr, prop, function (original) {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before BrowserApiErrors, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target) {\n  const globalObject = WINDOW ;\n  const targetObj = globalObject[target];\n  const proto = targetObj && targetObj.prototype;\n\n  // eslint-disable-next-line no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original)\n\n {\n    return function ( eventName, fn, options) {\n      try {\n        if (isEventListenerObject(fn)) {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (e2) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        wrap(fn, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(proto, 'removeEventListener', function (originalRemoveEventListener)\n\n {\n    return function ( eventName, fn, options) {\n      /**\n       * There are 2 possible scenarios here:\n       *\n       * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n       * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n       * as a pass-through, and call original `removeEventListener` with it.\n       *\n       * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n       * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n       * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n       * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n       * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n       *\n       * When someone adds a handler prior to initialization, and then do it again, but after,\n       * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n       * to get rid of the initial handler and it'd stick there forever.\n       */\n      try {\n        const originalEventHandler = (fn ).__sentry_wrapped__;\n        if (originalEventHandler) {\n          originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n        }\n      } catch (e) {\n        // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n      }\n      return originalRemoveEventListener.call(this, eventName, fn, options);\n    };\n  });\n}\n\nfunction isEventListenerObject(obj) {\n  return typeof (obj ).handleEvent === 'function';\n}\n\nexport { browserApiErrorsIntegration };\n//# sourceMappingURL=browserapierrors.js.map\n","import { addHistoryInstrumentationHandler } from '@sentry-internal/browser-utils';\nimport { defineIntegration, logger, startSession, captureSession } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\n\n/**\n * When added, automatically creates sessions which allow you to track adoption and crashes (crash free rate) in your Releases in Sentry.\n * More information: https://docs.sentry.io/product/releases/health/\n *\n * Note: In order for session tracking to work, you need to set up Releases: https://docs.sentry.io/product/releases/\n */\nconst browserSessionIntegration = defineIntegration(() => {\n  return {\n    name: 'BrowserSession',\n    setupOnce() {\n      if (typeof WINDOW.document === 'undefined') {\n        DEBUG_BUILD &&\n          logger.warn('Using the `browserSessionIntegration` in non-browser environments is not supported.');\n        return;\n      }\n\n      // The session duration for browser sessions does not track a meaningful\n      // concept that can be used as a metric.\n      // Automatically captured sessions are akin to page views, and thus we\n      // discard their duration.\n      startSession({ ignoreDuration: true });\n      captureSession();\n\n      // We want to create a session for every navigation as well\n      addHistoryInstrumentationHandler(({ from, to }) => {\n        // Don't create an additional session for the initial route or if the location did not change\n        if (from !== undefined && from !== to) {\n          startSession({ ignoreDuration: true });\n          captureSession();\n        }\n      });\n    },\n  };\n});\n\nexport { browserSessionIntegration };\n//# sourceMappingURL=browsersession.js.map\n","import { defineIntegration, addGlobalErrorInstrumentationHandler, getClient, captureEvent, addGlobalUnhandledRejectionInstrumentationHandler, isPrimitive, isString, getLocationHref, UNKNOWN_FUNCTION, logger } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { eventFromUnknownInput } from '../eventbuilder.js';\nimport { shouldIgnoreOnError } from '../helpers.js';\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) ;\n\nconst globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\nfunction _installGlobalOnErrorHandler(client) {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event = _enhanceEventWithInitialFrame(\n      eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n      url,\n      line,\n      column,\n    );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client) {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e );\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error) {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // dig the object of the rejection out of known event types\n  try {\n\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in (error )) {\n      return (error ).reason;\n    }\n\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    if ('detail' in (error ) && 'reason' in (error ).detail) {\n      return (error ).detail.reason;\n    }\n  } catch (e2) {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\nfunction _enhanceEventWithInitialFrame(\n  event,\n  url,\n  line,\n  column,\n) {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = column;\n  const lineno = line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: UNKNOWN_FUNCTION,\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type) {\n  DEBUG_BUILD && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions() {\n  const client = getClient();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n\nexport { globalHandlersIntegration };\n//# sourceMappingURL=globalhandlers.js.map\n","import { defineIntegration } from '@sentry/core';\nimport { WINDOW } from '../helpers.js';\n\n/**\n * Collects information about HTTP request headers and\n * attaches them to the event.\n */\nconst httpContextIntegration = defineIntegration(() => {\n  return {\n    name: 'HttpContext',\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      // grab as much info as exists and add it to the event\n      const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n      const { referrer } = WINDOW.document || {};\n      const { userAgent } = WINDOW.navigator || {};\n\n      const headers = {\n        ...(event.request && event.request.headers),\n        ...(referrer && { Referer: referrer }),\n        ...(userAgent && { 'User-Agent': userAgent }),\n      };\n      const request = { ...event.request, ...(url && { url }), headers };\n\n      event.request = request;\n    },\n  };\n});\n\nexport { httpContextIntegration };\n//# sourceMappingURL=httpcontext.js.map\n","import { defineIntegration, applyAggregateErrorsToEvent } from '@sentry/core';\nimport { exceptionFromError } from '../eventbuilder.js';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) ;\n\n/**\n * Aggregrate linked errors in an event.\n */\nconst linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\nexport { linkedErrorsIntegration };\n//# sourceMappingURL=linkederrors.js.map\n","import { inboundFiltersIntegration, functionToStringIntegration, dedupeIntegration, consoleSandbox, supportsFetch, logger, stackParserFromStackParserOptions, getIntegrationsToSetup, initAndBind, getCurrentScope, lastEventId, getReportDialogEndpoint, getClient } from '@sentry/core';\nimport { BrowserClient } from './client.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { WINDOW } from './helpers.js';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs.js';\nimport { browserApiErrorsIntegration } from './integrations/browserapierrors.js';\nimport { browserSessionIntegration } from './integrations/browsersession.js';\nimport { globalHandlersIntegration } from './integrations/globalhandlers.js';\nimport { httpContextIntegration } from './integrations/httpcontext.js';\nimport { linkedErrorsIntegration } from './integrations/linkederrors.js';\nimport { defaultStackParser } from './stack-parsers.js';\nimport { makeFetchTransport } from './transports/fetch.js';\n\n/** Get the default integrations for the browser SDK. */\nfunction getDefaultIntegrations(options) {\n  /**\n   * Note: Please make sure this stays in sync with Angular SDK, which re-exports\n   * `getDefaultIntegrations` but with an adjusted set of integrations.\n   */\n  const integrations = [\n    inboundFiltersIntegration(),\n    functionToStringIntegration(),\n    browserApiErrorsIntegration(),\n    breadcrumbsIntegration(),\n    globalHandlersIntegration(),\n    linkedErrorsIntegration(),\n    dedupeIntegration(),\n    httpContextIntegration(),\n  ];\n\n  // eslint-disable-next-line deprecation/deprecation\n  if (options.autoSessionTracking !== false) {\n    integrations.push(browserSessionIntegration());\n  }\n\n  return integrations;\n}\n\nfunction applyDefaultOptions(optionsArg = {}) {\n  const defaultOptions = {\n    defaultIntegrations: getDefaultIntegrations(optionsArg),\n    release:\n      typeof __SENTRY_RELEASE__ === 'string' // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n        ? __SENTRY_RELEASE__\n        : WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id // This supports the variable that sentry-webpack-plugin injects\n          ? WINDOW.SENTRY_RELEASE.id\n          : undefined,\n    autoSessionTracking: true,\n    sendClientReports: true,\n  };\n\n  // TODO: Instead of dropping just `defaultIntegrations`, we should simply\n  // call `dropUndefinedKeys` on the entire `optionsArg`.\n  // However, for this to work we need to adjust the `hasTracingEnabled()` logic\n  // first as it differentiates between `undefined` and the key not being in the object.\n  if (optionsArg.defaultIntegrations == null) {\n    delete optionsArg.defaultIntegrations;\n  }\n\n  return { ...defaultOptions, ...optionsArg };\n}\n\nfunction shouldShowBrowserExtensionError() {\n  const windowWithMaybeExtension =\n    typeof WINDOW.window !== 'undefined' && (WINDOW );\n  if (!windowWithMaybeExtension) {\n    // No need to show the error if we're not in a browser window environment (e.g. service workers)\n    return false;\n  }\n\n  const extensionKey = windowWithMaybeExtension.chrome ? 'chrome' : 'browser';\n  const extensionObject = windowWithMaybeExtension[extensionKey];\n\n  const runtimeId = extensionObject && extensionObject.runtime && extensionObject.runtime.id;\n  const href = (WINDOW.location && WINDOW.location.href) || '';\n\n  const extensionProtocols = ['chrome-extension:', 'moz-extension:', 'ms-browser-extension:', 'safari-web-extension:'];\n\n  // Running the SDK in a dedicated extension page and calling Sentry.init is fine; no risk of data leakage\n  const isDedicatedExtensionPage =\n    !!runtimeId && WINDOW === WINDOW.top && extensionProtocols.some(protocol => href.startsWith(`${protocol}//`));\n\n  // Running the SDK in NW.js, which appears like a browser extension but isn't, is also fine\n  // see: https://github.com/getsentry/sentry-javascript/issues/12668\n  const isNWjs = typeof windowWithMaybeExtension.nw !== 'undefined';\n\n  return !!runtimeId && !isDedicatedExtensionPage && !isNWjs;\n}\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(browserOptions = {}) {\n  const options = applyDefaultOptions(browserOptions);\n\n  if (!options.skipBrowserExtensionCheck && shouldShowBrowserExtensionError()) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(\n        '[Sentry] You cannot run Sentry this way in a browser extension, check: https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/',\n      );\n    });\n    return;\n  }\n\n  if (DEBUG_BUILD) {\n    if (!supportsFetch()) {\n      logger.warn(\n        'No Fetch API detected. The Sentry SDK requires a Fetch API compatible environment to send events. Please add a Fetch API polyfill.',\n      );\n    }\n  }\n  const clientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || makeFetchTransport,\n  };\n\n  return initAndBind(BrowserClient, clientOptions);\n}\n\n/**\n * All properties the report dialog supports\n */\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nfunction showReportDialog(options = {}) {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    DEBUG_BUILD && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const scope = getCurrentScope();\n  const client = scope.getClient();\n  const dsn = client && client.getDsn();\n\n  if (!dsn) {\n    DEBUG_BUILD && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    const eventId = lastEventId();\n    if (eventId) {\n      options.eventId = eventId;\n    }\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const { onClose } = options;\n  if (onClose) {\n    const reportDialogClosedMessageHandler = (event) => {\n      if (event.data === '__sentry_reportdialog_closed__') {\n        try {\n          onClose();\n        } finally {\n          WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);\n        }\n      }\n    };\n    WINDOW.addEventListener('message', reportDialogClosedMessageHandler);\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    DEBUG_BUILD && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n  callback();\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n *\n * @deprecated Use `captureFeedback` instead.\n */\nfunction captureUserFeedback(feedback) {\n  const client = getClient();\n  if (client) {\n    // eslint-disable-next-line deprecation/deprecation\n    client.captureUserFeedback(feedback);\n  }\n}\n\nexport { captureUserFeedback, forceLoad, getDefaultIntegrations, init, onLoad, showReportDialog };\n//# sourceMappingURL=sdk.js.map\n","import { addXhrInstrumentationHandler, SENTRY_XHR_DATA_KEY } from '@sentry-internal/browser-utils';\nimport { defineIntegration, supportsNativeFetch, addFetchInstrumentationHandler, getClient, GLOBAL_OBJ, logger, captureEvent, isSentryRequestUrl, addExceptionMechanism } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\n\nconst INTEGRATION_NAME = 'HttpClient';\n\nconst _httpClientIntegration = ((options = {}) => {\n  const _options = {\n    failedRequestStatusCodes: [[500, 599]],\n    failedRequestTargets: [/.*/],\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      _wrapFetch(client, _options);\n      _wrapXHR(client, _options);\n    },\n  };\n}) ;\n\n/**\n * Create events for failed client side HTTP requests.\n */\nconst httpClientIntegration = defineIntegration(_httpClientIntegration);\n\n/**\n * Interceptor function for fetch requests\n *\n * @param requestInfo The Fetch API request info\n * @param response The Fetch API response\n * @param requestInit The request init object\n */\nfunction _fetchResponseHandler(\n  options,\n  requestInfo,\n  response,\n  requestInit,\n  error,\n) {\n  if (_shouldCaptureResponse(options, response.status, response.url)) {\n    const request = _getRequest(requestInfo, requestInit);\n\n    let requestHeaders, responseHeaders, requestCookies, responseCookies;\n\n    if (_shouldSendDefaultPii()) {\n      [requestHeaders, requestCookies] = _parseCookieHeaders('Cookie', request);\n      [responseHeaders, responseCookies] = _parseCookieHeaders('Set-Cookie', response);\n    }\n\n    const event = _createEvent({\n      url: request.url,\n      method: request.method,\n      status: response.status,\n      requestHeaders,\n      responseHeaders,\n      requestCookies,\n      responseCookies,\n      error,\n    });\n\n    captureEvent(event);\n  }\n}\n\nfunction _parseCookieHeaders(\n  cookieHeader,\n  obj,\n) {\n  const headers = _extractFetchHeaders(obj.headers);\n  let cookies;\n\n  try {\n    const cookieString = headers[cookieHeader] || headers[cookieHeader.toLowerCase()] || undefined;\n\n    if (cookieString) {\n      cookies = _parseCookieString(cookieString);\n    }\n  } catch (e2) {\n    // ignore it if parsing fails\n  }\n\n  return [headers, cookies];\n}\n\n/**\n * Interceptor function for XHR requests\n *\n * @param xhr The XHR request\n * @param method The HTTP method\n * @param headers The HTTP headers\n */\nfunction _xhrResponseHandler(\n  options,\n  xhr,\n  method,\n  headers,\n  error,\n) {\n  if (_shouldCaptureResponse(options, xhr.status, xhr.responseURL)) {\n    let requestHeaders, responseCookies, responseHeaders;\n\n    if (_shouldSendDefaultPii()) {\n      try {\n        const cookieString = xhr.getResponseHeader('Set-Cookie') || xhr.getResponseHeader('set-cookie') || undefined;\n\n        if (cookieString) {\n          responseCookies = _parseCookieString(cookieString);\n        }\n      } catch (e3) {\n        // ignore it if parsing fails\n      }\n\n      try {\n        responseHeaders = _getXHRResponseHeaders(xhr);\n      } catch (e4) {\n        // ignore it if parsing fails\n      }\n\n      requestHeaders = headers;\n    }\n\n    const event = _createEvent({\n      url: xhr.responseURL,\n      method,\n      status: xhr.status,\n      requestHeaders,\n      // Can't access request cookies from XHR\n      responseHeaders,\n      responseCookies,\n      error,\n    });\n\n    captureEvent(event);\n  }\n}\n\n/**\n * Extracts response size from `Content-Length` header when possible\n *\n * @param headers\n * @returns The response size in bytes or undefined\n */\nfunction _getResponseSizeFromHeaders(headers) {\n  if (headers) {\n    const contentLength = headers['Content-Length'] || headers['content-length'];\n\n    if (contentLength) {\n      return parseInt(contentLength, 10);\n    }\n  }\n\n  return undefined;\n}\n\n/**\n * Creates an object containing cookies from the given cookie string\n *\n * @param cookieString The cookie string to parse\n * @returns The parsed cookies\n */\nfunction _parseCookieString(cookieString) {\n  return cookieString.split('; ').reduce((acc, cookie) => {\n    const [key, value] = cookie.split('=');\n    if (key && value) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * Extracts the headers as an object from the given Fetch API request or response object\n *\n * @param headers The headers to extract\n * @returns The extracted headers as an object\n */\nfunction _extractFetchHeaders(headers) {\n  const result = {};\n\n  headers.forEach((value, key) => {\n    result[key] = value;\n  });\n\n  return result;\n}\n\n/**\n * Extracts the response headers as an object from the given XHR object\n *\n * @param xhr The XHR object to extract the response headers from\n * @returns The response headers as an object\n */\nfunction _getXHRResponseHeaders(xhr) {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc, line) => {\n    const [key, value] = line.split(': ');\n    if (key && value) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * Checks if the given target url is in the given list of targets\n *\n * @param target The target url to check\n * @returns true if the target url is in the given list of targets, false otherwise\n */\nfunction _isInGivenRequestTargets(\n  failedRequestTargets,\n  target,\n) {\n  return failedRequestTargets.some((givenRequestTarget) => {\n    if (typeof givenRequestTarget === 'string') {\n      return target.includes(givenRequestTarget);\n    }\n\n    return givenRequestTarget.test(target);\n  });\n}\n\n/**\n * Checks if the given status code is in the given range\n *\n * @param status The status code to check\n * @returns true if the status code is in the given range, false otherwise\n */\nfunction _isInGivenStatusRanges(\n  failedRequestStatusCodes,\n  status,\n) {\n  return failedRequestStatusCodes.some((range) => {\n    if (typeof range === 'number') {\n      return range === status;\n    }\n\n    return status >= range[0] && status <= range[1];\n  });\n}\n\n/**\n * Wraps `fetch` function to capture request and response data\n */\nfunction _wrapFetch(client, options) {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  addFetchInstrumentationHandler(handlerData => {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { response, args, error, virtualError } = handlerData;\n    const [requestInfo, requestInit] = args ;\n\n    if (!response) {\n      return;\n    }\n\n    _fetchResponseHandler(options, requestInfo, response , requestInit, error || virtualError);\n  }, false);\n}\n\n/**\n * Wraps XMLHttpRequest to capture request and response data\n */\nfunction _wrapXHR(client, options) {\n  if (!('XMLHttpRequest' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  addXhrInstrumentationHandler(handlerData => {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { error, virtualError } = handlerData;\n\n    const xhr = handlerData.xhr ;\n\n    const sentryXhrData = xhr[SENTRY_XHR_DATA_KEY];\n\n    if (!sentryXhrData) {\n      return;\n    }\n\n    const { method, request_headers: headers } = sentryXhrData;\n\n    try {\n      _xhrResponseHandler(options, xhr, method, headers, error || virtualError);\n    } catch (e) {\n      DEBUG_BUILD && logger.warn('Error while extracting response event form XHR response', e);\n    }\n  });\n}\n\n/**\n * Checks whether to capture given response as an event\n *\n * @param status response status code\n * @param url response url\n */\nfunction _shouldCaptureResponse(options, status, url) {\n  return (\n    _isInGivenStatusRanges(options.failedRequestStatusCodes, status) &&\n    _isInGivenRequestTargets(options.failedRequestTargets, url) &&\n    !isSentryRequestUrl(url, getClient())\n  );\n}\n\n/**\n * Creates a synthetic Sentry event from given response data\n *\n * @param data response data\n * @returns event\n */\nfunction _createEvent(data\n\n) {\n  const client = getClient();\n  const virtualStackTrace = client && data.error && data.error instanceof Error ? data.error.stack : undefined;\n  // Remove the first frame from the stack as it's the HttpClient call\n  const stack = virtualStackTrace && client ? client.getOptions().stackParser(virtualStackTrace, 0, 1) : undefined;\n  const message = `HTTP Client Error with status code: ${data.status}`;\n\n  const event = {\n    message,\n    exception: {\n      values: [\n        {\n          type: 'Error',\n          value: message,\n          stacktrace: stack ? { frames: stack } : undefined,\n        },\n      ],\n    },\n    request: {\n      url: data.url,\n      method: data.method,\n      headers: data.requestHeaders,\n      cookies: data.requestCookies,\n    },\n    contexts: {\n      response: {\n        status_code: data.status,\n        headers: data.responseHeaders,\n        cookies: data.responseCookies,\n        body_size: _getResponseSizeFromHeaders(data.responseHeaders),\n      },\n    },\n  };\n\n  addExceptionMechanism(event, {\n    type: 'http.client',\n    handled: false,\n  });\n\n  return event;\n}\n\nfunction _getRequest(requestInfo, requestInit) {\n  if (!requestInit && requestInfo instanceof Request) {\n    return requestInfo;\n  }\n\n  // If both are set, we try to construct a new Request with the given arguments\n  // However, if e.g. the original request has a `body`, this will throw an error because it was already accessed\n  // In this case, as a fallback, we just use the original request - using both is rather an edge case\n  if (requestInfo instanceof Request && requestInfo.bodyUsed) {\n    return requestInfo;\n  }\n\n  return new Request(requestInfo, requestInit);\n}\n\nfunction _shouldSendDefaultPii() {\n  const client = getClient();\n  return client ? Boolean(client.getOptions().sendDefaultPii) : false;\n}\n\nexport { httpClientIntegration };\n//# sourceMappingURL=httpclient.js.map\n","import { addXhrInstrumentationHandler, addPerformanceInstrumentationHandler, SENTRY_XHR_DATA_KEY } from '@sentry-internal/browser-utils';\nimport { addFetchEndInstrumentationHandler, addFetchInstrumentationHandler, instrumentFetchRequest, parseUrl, spanToJSON, browserPerformanceTimeOrigin, hasTracingEnabled, setHttpStatus, getActiveSpan, startInactiveSpan, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_OP, SentryNonRecordingSpan, getTraceData, stringMatchesSomePattern } from '@sentry/core';\nimport { WINDOW } from '../helpers.js';\n\n/** Options for Request Instrumentation */\n\nconst responseToSpanId = new WeakMap();\nconst spanIdToEndTimestamp = new Map();\n\nconst defaultRequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  enableHTTPTimings: true,\n  trackFetchStreamPerformance: false,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nfunction instrumentOutgoingRequests(client, _options) {\n  const {\n    traceFetch,\n    traceXHR,\n    trackFetchStreamPerformance,\n    shouldCreateSpanForRequest,\n    enableHTTPTimings,\n    tracePropagationTargets,\n  } = {\n    traceFetch: defaultRequestInstrumentationOptions.traceFetch,\n    traceXHR: defaultRequestInstrumentationOptions.traceXHR,\n    trackFetchStreamPerformance: defaultRequestInstrumentationOptions.trackFetchStreamPerformance,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_) => true;\n\n  const shouldAttachHeadersWithTargets = (url) => shouldAttachHeaders(url, tracePropagationTargets);\n\n  const spans = {};\n\n  if (traceFetch) {\n    // Keeping track of http requests, whose body payloads resolved later than the initial resolved request\n    // e.g. streaming using server sent events (SSE)\n    client.addEventProcessor(event => {\n      if (event.type === 'transaction' && event.spans) {\n        event.spans.forEach(span => {\n          if (span.op === 'http.client') {\n            const updatedTimestamp = spanIdToEndTimestamp.get(span.span_id);\n            if (updatedTimestamp) {\n              span.timestamp = updatedTimestamp / 1000;\n              spanIdToEndTimestamp.delete(span.span_id);\n            }\n          }\n        });\n      }\n      return event;\n    });\n\n    if (trackFetchStreamPerformance) {\n      addFetchEndInstrumentationHandler(handlerData => {\n        if (handlerData.response) {\n          const span = responseToSpanId.get(handlerData.response);\n          if (span && handlerData.endTimestamp) {\n            spanIdToEndTimestamp.set(span, handlerData.endTimestamp);\n          }\n        }\n      });\n    }\n\n    addFetchInstrumentationHandler(handlerData => {\n      const createdSpan = instrumentFetchRequest(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n\n      if (handlerData.response && handlerData.fetchData.__span) {\n        responseToSpanId.set(handlerData.response, handlerData.fetchData.__span);\n      }\n\n      // We cannot use `window.location` in the generic fetch instrumentation,\n      // but we need it for reliable `server.address` attribute.\n      // so we extend this in here\n      if (createdSpan) {\n        const fullUrl = getFullURL(handlerData.fetchData.url);\n        const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n        createdSpan.setAttributes({\n          'http.url': fullUrl,\n          'server.address': host,\n        });\n      }\n\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n\n  if (traceXHR) {\n    addXhrInstrumentationHandler(handlerData => {\n      const createdSpan = xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n}\n\nfunction isPerformanceResourceTiming(entry) {\n  return (\n    entry.entryType === 'resource' &&\n    'initiatorType' in entry &&\n    typeof (entry ).nextHopProtocol === 'string' &&\n    (entry.initiatorType === 'fetch' || entry.initiatorType === 'xmlhttprequest')\n  );\n}\n\n/**\n * Creates a temporary observer to listen to the next fetch/xhr resourcing timings,\n * so that when timings hit their per-browser limit they don't need to be removed.\n *\n * @param span A span that has yet to be finished, must contain `url` on data.\n */\nfunction addHTTPTimings(span) {\n  const { url } = spanToJSON(span).data || {};\n\n  if (!url || typeof url !== 'string') {\n    return;\n  }\n\n  const cleanup = addPerformanceInstrumentationHandler('resource', ({ entries }) => {\n    entries.forEach(entry => {\n      if (isPerformanceResourceTiming(entry) && entry.name.endsWith(url)) {\n        const spanData = resourceTimingEntryToSpanData(entry);\n        spanData.forEach(data => span.setAttribute(...data));\n        // In the next tick, clean this handler up\n        // We have to wait here because otherwise this cleans itself up before it is fully done\n        setTimeout(cleanup);\n      }\n    });\n  });\n}\n\n/**\n * Converts ALPN protocol ids to name and version.\n *\n * (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids)\n * @param nextHopProtocol PerformanceResourceTiming.nextHopProtocol\n */\nfunction extractNetworkProtocol(nextHopProtocol) {\n  let name = 'unknown';\n  let version = 'unknown';\n  let _name = '';\n  for (const char of nextHopProtocol) {\n    // http/1.1 etc.\n    if (char === '/') {\n      [name, version] = nextHopProtocol.split('/') ;\n      break;\n    }\n    // h2, h3 etc.\n    if (!isNaN(Number(char))) {\n      name = _name === 'h' ? 'http' : _name;\n      version = nextHopProtocol.split(_name)[1] ;\n      break;\n    }\n    _name += char;\n  }\n  if (_name === nextHopProtocol) {\n    // webrtc, ftp, etc.\n    name = _name;\n  }\n  return { name, version };\n}\n\nfunction getAbsoluteTime(time = 0) {\n  return ((browserPerformanceTimeOrigin || performance.timeOrigin) + time) / 1000;\n}\n\nfunction resourceTimingEntryToSpanData(resourceTiming) {\n  const { name, version } = extractNetworkProtocol(resourceTiming.nextHopProtocol);\n\n  const timingSpanData = [];\n\n  timingSpanData.push(['network.protocol.version', version], ['network.protocol.name', name]);\n\n  if (!browserPerformanceTimeOrigin) {\n    return timingSpanData;\n  }\n  return [\n    ...timingSpanData,\n    ['http.request.redirect_start', getAbsoluteTime(resourceTiming.redirectStart)],\n    ['http.request.fetch_start', getAbsoluteTime(resourceTiming.fetchStart)],\n    ['http.request.domain_lookup_start', getAbsoluteTime(resourceTiming.domainLookupStart)],\n    ['http.request.domain_lookup_end', getAbsoluteTime(resourceTiming.domainLookupEnd)],\n    ['http.request.connect_start', getAbsoluteTime(resourceTiming.connectStart)],\n    ['http.request.secure_connection_start', getAbsoluteTime(resourceTiming.secureConnectionStart)],\n    ['http.request.connection_end', getAbsoluteTime(resourceTiming.connectEnd)],\n    ['http.request.request_start', getAbsoluteTime(resourceTiming.requestStart)],\n    ['http.request.response_start', getAbsoluteTime(resourceTiming.responseStart)],\n    ['http.request.response_end', getAbsoluteTime(resourceTiming.responseEnd)],\n  ];\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * We only export this function for testing purposes.\n */\nfunction shouldAttachHeaders(\n  targetUrl,\n  tracePropagationTargets,\n) {\n  // window.location.href not being defined is an edge case in the browser but we need to handle it.\n  // Potentially dangerous situations where it may not be defined: Browser Extensions, Web Workers, patching of the location obj\n  const href = WINDOW.location && WINDOW.location.href;\n\n  if (!href) {\n    // If there is no window.location.origin, we default to only attaching tracing headers to relative requests, i.e. ones that start with `/`\n    // BIG DISCLAIMER: Users can call URLs with a double slash (fetch(\"//example.com/api\")), this is a shorthand for \"send to the same protocol\",\n    // so we need a to exclude those requests, because they might be cross origin.\n    const isRelativeSameOriginRequest = !!targetUrl.match(/^\\/(?!\\/)/);\n    if (!tracePropagationTargets) {\n      return isRelativeSameOriginRequest;\n    } else {\n      return stringMatchesSomePattern(targetUrl, tracePropagationTargets);\n    }\n  } else {\n    let resolvedUrl;\n    let currentOrigin;\n\n    // URL parsing may fail, we default to not attaching trace headers in that case.\n    try {\n      resolvedUrl = new URL(targetUrl, href);\n      currentOrigin = new URL(href).origin;\n    } catch (e) {\n      return false;\n    }\n\n    const isSameOriginRequest = resolvedUrl.origin === currentOrigin;\n    if (!tracePropagationTargets) {\n      return isSameOriginRequest;\n    } else {\n      return (\n        stringMatchesSomePattern(resolvedUrl.toString(), tracePropagationTargets) ||\n        (isSameOriginRequest && stringMatchesSomePattern(resolvedUrl.pathname, tracePropagationTargets))\n      );\n    }\n  }\n}\n\n/**\n * Create and track xhr request spans\n *\n * @returns Span if a span was created, otherwise void.\n */\nfunction xhrCallback(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n) {\n  const xhr = handlerData.xhr;\n  const sentryXhrData = xhr && xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!xhr || xhr.__sentry_own_request__ || !sentryXhrData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = hasTracingEnabled() && shouldCreateSpan(sentryXhrData.url);\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span && sentryXhrData.status_code !== undefined) {\n      setHttpStatus(span, sentryXhrData.status_code);\n      span.end();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const fullUrl = getFullURL(sentryXhrData.url);\n  const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n\n  const hasParent = !!getActiveSpan();\n\n  const span =\n    shouldCreateSpanResult && hasParent\n      ? startInactiveSpan({\n          name: `${sentryXhrData.method} ${sentryXhrData.url}`,\n          attributes: {\n            type: 'xhr',\n            'http.method': sentryXhrData.method,\n            'http.url': fullUrl,\n            url: sentryXhrData.url,\n            'server.address': host,\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser',\n            [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'http.client',\n          },\n        })\n      : new SentryNonRecordingSpan();\n\n  xhr.__sentry_xhr_span_id__ = span.spanContext().spanId;\n  spans[xhr.__sentry_xhr_span_id__] = span;\n\n  if (shouldAttachHeaders(sentryXhrData.url)) {\n    addTracingHeadersToXhrRequest(\n      xhr,\n      // If performance is disabled (TWP) or there's no active root span (pageload/navigation/interaction),\n      // we do not want to use the span as base for the trace headers,\n      // which means that the headers will be generated from the scope and the sampling decision is deferred\n      hasTracingEnabled() && hasParent ? span : undefined,\n    );\n  }\n\n  return span;\n}\n\nfunction addTracingHeadersToXhrRequest(xhr, span) {\n  const { 'sentry-trace': sentryTrace, baggage } = getTraceData({ span });\n\n  if (sentryTrace) {\n    setHeaderOnXhr(xhr, sentryTrace, baggage);\n  }\n}\n\nfunction setHeaderOnXhr(\n  xhr,\n  sentryTraceHeader,\n  sentryBaggageHeader,\n) {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    xhr.setRequestHeader('sentry-trace', sentryTraceHeader);\n    if (sentryBaggageHeader) {\n      // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n      // We can therefore simply set a baggage header without checking what was there before\n      // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      xhr.setRequestHeader('baggage', sentryBaggageHeader);\n    }\n  } catch (_) {\n    // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n  }\n}\n\nfunction getFullURL(url) {\n  try {\n    // By adding a base URL to new URL(), this will also work for relative urls\n    // If `url` is a full URL, the base URL is ignored anyhow\n    const parsed = new URL(url, WINDOW.location.origin);\n    return parsed.href;\n  } catch (e2) {\n    return undefined;\n  }\n}\n\nexport { defaultRequestInstrumentationOptions, extractNetworkProtocol, instrumentOutgoingRequests, shouldAttachHeaders, xhrCallback };\n//# sourceMappingURL=request.js.map\n","import { getActiveSpan, getRootSpan, spanToJSON, logger, SPAN_STATUS_ERROR } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nfunction registerBackgroundTabDetection() {\n  if (WINDOW && WINDOW.document) {\n    WINDOW.document.addEventListener('visibilitychange', () => {\n      const activeSpan = getActiveSpan();\n      if (!activeSpan) {\n        return;\n      }\n\n      const rootSpan = getRootSpan(activeSpan);\n\n      if (WINDOW.document.hidden && rootSpan) {\n        const cancelledStatus = 'cancelled';\n\n        const { op, status } = spanToJSON(rootSpan);\n\n        if (DEBUG_BUILD) {\n          logger.log(`[Tracing] Transaction: ${cancelledStatus} -> since tab moved to the background, op: ${op}`);\n        }\n\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!status) {\n          rootSpan.setStatus({ code: SPAN_STATUS_ERROR, message: cancelledStatus });\n        }\n\n        rootSpan.setAttribute('sentry.cancellation_reason', 'document.hidden');\n        rootSpan.end();\n      }\n    });\n  } else {\n    DEBUG_BUILD && logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n\nexport { registerBackgroundTabDetection };\n//# sourceMappingURL=backgroundtab.js.map\n","import { startTrackingWebVitals, startTrackingINP, startTrackingLongAnimationFrames, startTrackingLongTasks, startTrackingInteractions, addHistoryInstrumentationHandler, registerInpInteractionListener, addPerformanceEntries } from '@sentry-internal/browser-utils';\nimport { TRACING_DEFAULTS, registerSpanErrorInstrumentation, GLOBAL_OBJ, getClient, propagationContextFromHeaders, getCurrentScope, spanToJSON, getRootSpan, spanIsSampled, getDynamicSamplingContextFromSpan, browserPerformanceTimeOrigin, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, getActiveSpan, getIsolationScope, generateTraceId, getDomElement, startIdleSpan, logger, SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\nimport { registerBackgroundTabDetection } from './backgroundtab.js';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request.js';\n\n/* eslint-disable max-lines */\n\nconst BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS = {\n  ...TRACING_DEFAULTS,\n  instrumentNavigation: true,\n  instrumentPageLoad: true,\n  markBackgroundSpan: true,\n  enableLongTask: true,\n  enableLongAnimationFrame: true,\n  enableInp: true,\n  _experiments: {},\n  ...defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library.\n *\n * We explicitly export the proper type here, as this has to be extended in some cases.\n */\nconst browserTracingIntegration = ((_options = {}) => {\n  registerSpanErrorInstrumentation();\n\n  const {\n    enableInp,\n    enableLongTask,\n    enableLongAnimationFrame,\n    _experiments: { enableInteractions, enableStandaloneClsSpans },\n    beforeStartSpan,\n    idleTimeout,\n    finalTimeout,\n    childSpanTimeout,\n    markBackgroundSpan,\n    traceFetch,\n    traceXHR,\n    trackFetchStreamPerformance,\n    shouldCreateSpanForRequest,\n    enableHTTPTimings,\n    instrumentPageLoad,\n    instrumentNavigation,\n  } = {\n    ...DEFAULT_BROWSER_TRACING_OPTIONS,\n    ..._options,\n  };\n\n  const _collectWebVitals = startTrackingWebVitals({ recordClsStandaloneSpans: enableStandaloneClsSpans || false });\n\n  if (enableInp) {\n    startTrackingINP();\n  }\n\n  if (\n    enableLongAnimationFrame &&\n    GLOBAL_OBJ.PerformanceObserver &&\n    PerformanceObserver.supportedEntryTypes &&\n    PerformanceObserver.supportedEntryTypes.includes('long-animation-frame')\n  ) {\n    startTrackingLongAnimationFrames();\n  } else if (enableLongTask) {\n    startTrackingLongTasks();\n  }\n\n  if (enableInteractions) {\n    startTrackingInteractions();\n  }\n\n  const latestRoute = {\n    name: undefined,\n    source: undefined,\n  };\n\n  /** Create routing idle transaction. */\n  function _createRouteSpan(client, startSpanOptions) {\n    const isPageloadTransaction = startSpanOptions.op === 'pageload';\n\n    const finalStartSpanOptions = beforeStartSpan\n      ? beforeStartSpan(startSpanOptions)\n      : startSpanOptions;\n\n    const attributes = finalStartSpanOptions.attributes || {};\n\n    // If `finalStartSpanOptions.name` is different than `startSpanOptions.name`\n    // it is because `beforeStartSpan` set a custom name. Therefore we set the source to 'custom'.\n    if (startSpanOptions.name !== finalStartSpanOptions.name) {\n      attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] = 'custom';\n      finalStartSpanOptions.attributes = attributes;\n    }\n\n    latestRoute.name = finalStartSpanOptions.name;\n    latestRoute.source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n\n    const idleSpan = startIdleSpan(finalStartSpanOptions, {\n      idleTimeout,\n      finalTimeout,\n      childSpanTimeout,\n      // should wait for finish signal if it's a pageload transaction\n      disableAutoFinish: isPageloadTransaction,\n      beforeSpanEnd: span => {\n        _collectWebVitals();\n        addPerformanceEntries(span, { recordClsOnPageloadSpan: !enableStandaloneClsSpans });\n      },\n    });\n\n    function emitFinish() {\n      if (['interactive', 'complete'].includes(WINDOW.document.readyState)) {\n        client.emit('idleSpanEnableAutoFinish', idleSpan);\n      }\n    }\n\n    if (isPageloadTransaction && WINDOW.document) {\n      WINDOW.document.addEventListener('readystatechange', () => {\n        emitFinish();\n      });\n\n      emitFinish();\n    }\n\n    return idleSpan;\n  }\n\n  return {\n    name: BROWSER_TRACING_INTEGRATION_ID,\n    afterAllSetup(client) {\n      let activeSpan;\n      let startingUrl = WINDOW.location && WINDOW.location.href;\n\n      function maybeEndActiveSpan() {\n        if (activeSpan && !spanToJSON(activeSpan).timestamp) {\n          DEBUG_BUILD && logger.log(`[Tracing] Finishing current active span with op: ${spanToJSON(activeSpan).op}`);\n          // If there's an open active span, we need to finish it before creating an new one.\n          activeSpan.end();\n        }\n      }\n\n      client.on('startNavigationSpan', startSpanOptions => {\n        if (getClient() !== client) {\n          return;\n        }\n\n        maybeEndActiveSpan();\n\n        activeSpan = _createRouteSpan(client, {\n          op: 'navigation',\n          ...startSpanOptions,\n        });\n      });\n\n      client.on('startPageLoadSpan', (startSpanOptions, traceOptions = {}) => {\n        if (getClient() !== client) {\n          return;\n        }\n        maybeEndActiveSpan();\n\n        const sentryTrace = traceOptions.sentryTrace || getMetaContent('sentry-trace');\n        const baggage = traceOptions.baggage || getMetaContent('baggage');\n\n        const propagationContext = propagationContextFromHeaders(sentryTrace, baggage);\n        getCurrentScope().setPropagationContext(propagationContext);\n\n        activeSpan = _createRouteSpan(client, {\n          op: 'pageload',\n          ...startSpanOptions,\n        });\n      });\n\n      // A trace should to stay the consistent over the entire time span of one route.\n      // Therefore, when the initial pageload or navigation root span ends, we update the\n      // scope's propagation context to keep span-specific attributes like the `sampled` decision and\n      // the dynamic sampling context valid, even after the root span has ended.\n      // This ensures that the trace data is consistent for the entire duration of the route.\n      client.on('spanEnd', span => {\n        const op = spanToJSON(span).op;\n        if (span !== getRootSpan(span) || (op !== 'navigation' && op !== 'pageload')) {\n          return;\n        }\n\n        const scope = getCurrentScope();\n        const oldPropagationContext = scope.getPropagationContext();\n\n        scope.setPropagationContext({\n          ...oldPropagationContext,\n          sampled: oldPropagationContext.sampled !== undefined ? oldPropagationContext.sampled : spanIsSampled(span),\n          dsc: oldPropagationContext.dsc || getDynamicSamplingContextFromSpan(span),\n        });\n      });\n\n      if (WINDOW.location) {\n        if (instrumentPageLoad) {\n          startBrowserTracingPageLoadSpan(client, {\n            name: WINDOW.location.pathname,\n            // pageload should always start at timeOrigin (and needs to be in s, not ms)\n            startTime: browserPerformanceTimeOrigin ? browserPerformanceTimeOrigin / 1000 : undefined,\n            attributes: {\n              [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n              [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.browser',\n            },\n          });\n        }\n\n        if (instrumentNavigation) {\n          addHistoryInstrumentationHandler(({ to, from }) => {\n            /**\n             * This early return is there to account for some cases where a navigation transaction starts right after\n             * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n             * create an uneccessary navigation transaction.\n             *\n             * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n             * only be caused in certain development environments where the usage of a hot module reloader is causing\n             * errors.\n             */\n            if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n              startingUrl = undefined;\n              return;\n            }\n\n            if (from !== to) {\n              startingUrl = undefined;\n              startBrowserTracingNavigationSpan(client, {\n                name: WINDOW.location.pathname,\n                attributes: {\n                  [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n                  [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.browser',\n                },\n              });\n            }\n          });\n        }\n      }\n\n      if (markBackgroundSpan) {\n        registerBackgroundTabDetection();\n      }\n\n      if (enableInteractions) {\n        registerInteractionListener(idleTimeout, finalTimeout, childSpanTimeout, latestRoute);\n      }\n\n      if (enableInp) {\n        registerInpInteractionListener();\n      }\n\n      instrumentOutgoingRequests(client, {\n        traceFetch,\n        traceXHR,\n        trackFetchStreamPerformance,\n        tracePropagationTargets: client.getOptions().tracePropagationTargets,\n        shouldCreateSpanForRequest,\n        enableHTTPTimings,\n      });\n    },\n  };\n}) ;\n\n/**\n * Manually start a page load span.\n * This will only do something if a browser tracing integration integration has been setup.\n *\n * If you provide a custom `traceOptions` object, it will be used to continue the trace\n * instead of the default behavior, which is to look it up on the <meta> tags.\n */\nfunction startBrowserTracingPageLoadSpan(\n  client,\n  spanOptions,\n  traceOptions,\n) {\n  client.emit('startPageLoadSpan', spanOptions, traceOptions);\n\n  getCurrentScope().setTransactionName(spanOptions.name);\n\n  const span = getActiveSpan();\n  const op = span && spanToJSON(span).op;\n  return op === 'pageload' ? span : undefined;\n}\n\n/**\n * Manually start a navigation span.\n * This will only do something if a browser tracing integration has been setup.\n */\nfunction startBrowserTracingNavigationSpan(client, spanOptions) {\n  getIsolationScope().setPropagationContext({ traceId: generateTraceId() });\n  getCurrentScope().setPropagationContext({ traceId: generateTraceId() });\n\n  client.emit('startNavigationSpan', spanOptions);\n\n  getCurrentScope().setTransactionName(spanOptions.name);\n\n  const span = getActiveSpan();\n  const op = span && spanToJSON(span).op;\n  return op === 'navigation' ? span : undefined;\n}\n\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = getDomElement(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : undefined;\n}\n\n/** Start listener for interaction transactions */\nfunction registerInteractionListener(\n  idleTimeout,\n  finalTimeout,\n  childSpanTimeout,\n  latestRoute,\n) {\n  let inflightInteractionSpan;\n  const registerInteractionTransaction = () => {\n    const op = 'ui.action.click';\n\n    const activeSpan = getActiveSpan();\n    const rootSpan = activeSpan && getRootSpan(activeSpan);\n    if (rootSpan) {\n      const currentRootSpanOp = spanToJSON(rootSpan).op;\n      if (['navigation', 'pageload'].includes(currentRootSpanOp )) {\n        DEBUG_BUILD &&\n          logger.warn(`[Tracing] Did not create ${op} span because a pageload or navigation span is in progress.`);\n        return undefined;\n      }\n    }\n\n    if (inflightInteractionSpan) {\n      inflightInteractionSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON, 'interactionInterrupted');\n      inflightInteractionSpan.end();\n      inflightInteractionSpan = undefined;\n    }\n\n    if (!latestRoute.name) {\n      DEBUG_BUILD && logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n      return undefined;\n    }\n\n    inflightInteractionSpan = startIdleSpan(\n      {\n        name: latestRoute.name,\n        op,\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: latestRoute.source || 'url',\n        },\n      },\n      {\n        idleTimeout,\n        finalTimeout,\n        childSpanTimeout,\n      },\n    );\n  };\n\n  if (WINDOW.document) {\n    addEventListener('click', registerInteractionTransaction, { once: false, capture: true });\n  }\n}\n\nexport { BROWSER_TRACING_INTEGRATION_ID, browserTracingIntegration, getMetaContent, startBrowserTracingNavigationSpan, startBrowserTracingPageLoadSpan };\n//# sourceMappingURL=browserTracingIntegration.js.map\n","import { setContext, init as init$1 } from '@sentry/browser';\nimport { applySdkMetadata } from '@sentry/core';\nimport { version } from 'react';\n\n/**\n * Inits the React SDK\n */\nfunction init(options) {\n  const opts = {\n    ...options,\n  };\n\n  applySdkMetadata(opts, 'react');\n  setContext('react', { version });\n  return init$1(opts);\n}\n\nexport { init };\n//# sourceMappingURL=sdk.js.map\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","import { browserTracingIntegration, WINDOW, startBrowserTracingPageLoadSpan, startBrowserTracingNavigationSpan } from '@sentry/browser';\nimport { logger, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, getClient, getNumberOfUrlSegments, getCurrentScope, getActiveSpan, getRootSpan, spanToJSON } from '@sentry/core';\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { DEBUG_BUILD } from './debug-build.js';\n\n/* eslint-disable max-lines */\n// Inspired from Donnie McNeal's solution:\n// https://gist.github.com/wontondon/e8c4bdf2888875e4c755712e99279536\n\n\nlet _useEffect;\nlet _useLocation;\nlet _useNavigationType;\nlet _createRoutesFromChildren;\nlet _matchRoutes;\nlet _stripBasename = false;\n\nconst CLIENTS_WITH_INSTRUMENT_NAVIGATION = new WeakSet();\n\n/**\n * Creates a wrapCreateBrowserRouter function that can be used with all React Router v6 compatible versions.\n */\nfunction createV6CompatibleWrapCreateBrowserRouter\n\n(\n  createRouterFunction,\n  version,\n) {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_matchRoutes) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `reactRouterV${version}Instrumentation was unable to wrap the \\`createRouter\\` function because of one or more missing parameters.`,\n      );\n\n    return createRouterFunction;\n  }\n\n  // `opts` for createBrowserHistory and createMemoryHistory are different, but also not relevant for us at the moment.\n  // `basename` is the only option that is relevant for us, and it is the same for all.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (routes, opts) {\n    const router = createRouterFunction(routes, opts);\n    const basename = opts && opts.basename;\n\n    const activeRootSpan = getActiveRootSpan();\n\n    // The initial load ends when `createBrowserRouter` is called.\n    // This is the earliest convenient time to update the transaction name.\n    // Callbacks to `router.subscribe` are not called for the initial load.\n    if (router.state.historyAction === 'POP' && activeRootSpan) {\n      updatePageloadTransaction(activeRootSpan, router.state.location, routes, undefined, basename);\n    }\n\n    router.subscribe((state) => {\n      const location = state.location;\n      if (state.historyAction === 'PUSH' || state.historyAction === 'POP') {\n        handleNavigation({\n          location,\n          routes,\n          navigationType: state.historyAction,\n          version,\n          basename,\n        });\n      }\n    });\n\n    return router;\n  };\n}\n\n/**\n * Creates a browser tracing integration that can be used with all React Router v6 compatible versions.\n */\nfunction createReactRouterV6CompatibleTracingIntegration(\n  options,\n  version,\n) {\n  const integration = browserTracingIntegration({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  const {\n    useEffect,\n    useLocation,\n    useNavigationType,\n    createRoutesFromChildren,\n    matchRoutes,\n    stripBasename,\n    instrumentPageLoad = true,\n    instrumentNavigation = true,\n  } = options;\n\n  return {\n    ...integration,\n    setup() {\n      _useEffect = useEffect;\n      _useLocation = useLocation;\n      _useNavigationType = useNavigationType;\n      _matchRoutes = matchRoutes;\n      _createRoutesFromChildren = createRoutesFromChildren;\n      _stripBasename = stripBasename || false;\n    },\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      const initPathName = WINDOW && WINDOW.location && WINDOW.location.pathname;\n      if (instrumentPageLoad && initPathName) {\n        startBrowserTracingPageLoadSpan(client, {\n          name: initPathName,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n            [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: `auto.pageload.react.reactrouter_v${version}`,\n          },\n        });\n      }\n\n      if (instrumentNavigation) {\n        CLIENTS_WITH_INSTRUMENT_NAVIGATION.add(client);\n      }\n    },\n  };\n}\n\nfunction createV6CompatibleWrapUseRoutes(origUseRoutes, version) {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_matchRoutes) {\n    DEBUG_BUILD &&\n      logger.warn(\n        'reactRouterV6Instrumentation was unable to wrap `useRoutes` because of one or more missing parameters.',\n      );\n\n    return origUseRoutes;\n  }\n\n  const allRoutes = [];\n\n  const SentryRoutes\n\n = (props) => {\n    const isMountRenderPass = React.useRef(true);\n    const { routes, locationArg } = props;\n\n    const Routes = origUseRoutes(routes, locationArg);\n\n    const location = _useLocation();\n    const navigationType = _useNavigationType();\n\n    // A value with stable identity to either pick `locationArg` if available or `location` if not\n    const stableLocationParam =\n      typeof locationArg === 'string' || (locationArg && locationArg.pathname)\n        ? (locationArg )\n        : location;\n\n    _useEffect(() => {\n      const normalizedLocation =\n        typeof stableLocationParam === 'string' ? { pathname: stableLocationParam } : stableLocationParam;\n\n      if (isMountRenderPass.current) {\n        routes.forEach(route => {\n          allRoutes.push(...getChildRoutesRecursively(route));\n        });\n\n        updatePageloadTransaction(getActiveRootSpan(), normalizedLocation, routes, undefined, undefined, allRoutes);\n        isMountRenderPass.current = false;\n      } else {\n        handleNavigation({\n          location: normalizedLocation,\n          routes,\n          navigationType,\n          version,\n          allRoutes,\n        });\n      }\n    }, [navigationType, stableLocationParam]);\n\n    return Routes;\n  };\n\n  // eslint-disable-next-line react/display-name\n  return (routes, locationArg) => {\n    return React.createElement(SentryRoutes, { routes: routes, locationArg: locationArg,} );\n  };\n}\n\nfunction handleNavigation(opts\n\n) {\n  const { location, routes, navigationType, version, matches, basename, allRoutes } = opts;\n\n  const branches = Array.isArray(matches) ? matches : _matchRoutes(routes, location, basename);\n\n  const client = getClient();\n  if (!client || !CLIENTS_WITH_INSTRUMENT_NAVIGATION.has(client)) {\n    return;\n  }\n\n  if ((navigationType === 'PUSH' || navigationType === 'POP') && branches) {\n    let name,\n      source = 'url';\n    const isInDescendantRoute = locationIsInsideDescendantRoute(location, allRoutes || routes);\n\n    if (isInDescendantRoute) {\n      name = prefixWithSlash(rebuildRoutePathFromAllRoutes(allRoutes || routes, location));\n      source = 'route';\n    }\n\n    if (!isInDescendantRoute || !name) {\n      [name, source] = getNormalizedName(routes, location, branches, basename);\n    }\n\n    startBrowserTracingNavigationSpan(client, {\n      name,\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n        [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: `auto.navigation.react.reactrouter_v${version}`,\n      },\n    });\n  }\n}\n\n/**\n * Strip the basename from a pathname if exists.\n *\n * Vendored and modified from `react-router`\n * https://github.com/remix-run/react-router/blob/462bb712156a3f739d6139a0f14810b76b002df6/packages/router/utils.ts#L1038\n */\nfunction stripBasenameFromPathname(pathname, basename) {\n  if (!basename || basename === '/') {\n    return pathname;\n  }\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return pathname;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  const startIndex = basename.endsWith('/') ? basename.length - 1 : basename.length;\n  const nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== '/') {\n    // pathname does not start with basename/\n    return pathname;\n  }\n\n  return pathname.slice(startIndex) || '/';\n}\n\nfunction sendIndexPath(pathBuilder, pathname, basename) {\n  const reconstructedPath = pathBuilder || _stripBasename ? stripBasenameFromPathname(pathname, basename) : pathname;\n\n  const formattedPath =\n    // If the path ends with a slash, remove it\n    reconstructedPath[reconstructedPath.length - 1] === '/'\n      ? reconstructedPath.slice(0, -1)\n      : // If the path ends with a wildcard, remove it\n        reconstructedPath.slice(-2) === '/*'\n        ? reconstructedPath.slice(0, -1)\n        : reconstructedPath;\n\n  return [formattedPath, 'route'];\n}\n\nfunction pathEndsWithWildcard(path) {\n  return path.endsWith('*');\n}\n\nfunction pathIsWildcardAndHasChildren(path, branch) {\n  return (pathEndsWithWildcard(path) && branch.route.children && branch.route.children.length > 0) || false;\n}\n\nfunction routeIsDescendant(route) {\n  return !!(!route.children && route.element && route.path && route.path.endsWith('/*'));\n}\n\nfunction locationIsInsideDescendantRoute(location, routes) {\n  const matchedRoutes = _matchRoutes(routes, location) ;\n\n  if (matchedRoutes) {\n    for (const match of matchedRoutes) {\n      if (routeIsDescendant(match.route) && pickSplat(match)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction getChildRoutesRecursively(route, allRoutes = []) {\n  if (route.children && !route.index) {\n    route.children.forEach(child => {\n      allRoutes.push(...getChildRoutesRecursively(child, allRoutes));\n    });\n  }\n\n  allRoutes.push(route);\n\n  return allRoutes;\n}\n\nfunction pickPath(match) {\n  return trimWildcard(match.route.path || '');\n}\n\nfunction pickSplat(match) {\n  return match.params['*'] || '';\n}\n\nfunction trimWildcard(path) {\n  return path[path.length - 1] === '*' ? path.slice(0, -1) : path;\n}\n\nfunction trimSlash(path) {\n  return path[path.length - 1] === '/' ? path.slice(0, -1) : path;\n}\n\nfunction prefixWithSlash(path) {\n  return path[0] === '/' ? path : `/${path}`;\n}\n\nfunction rebuildRoutePathFromAllRoutes(allRoutes, location) {\n  const matchedRoutes = _matchRoutes(allRoutes, location) ;\n\n  if (!matchedRoutes || matchedRoutes.length === 0) {\n    return '';\n  }\n\n  for (const match of matchedRoutes) {\n    if (match.route.path && match.route.path !== '*') {\n      const path = pickPath(match);\n      const strippedPath = stripBasenameFromPathname(location.pathname, prefixWithSlash(match.pathnameBase));\n\n      return trimSlash(\n        trimSlash(path || '') +\n          prefixWithSlash(\n            rebuildRoutePathFromAllRoutes(\n              allRoutes.filter(route => route !== match.route),\n              {\n                pathname: strippedPath,\n              },\n            ),\n          ),\n      );\n    }\n  }\n\n  return '';\n}\n\nfunction getNormalizedName(\n  routes,\n  location,\n  branches,\n  basename = '',\n) {\n  if (!routes || routes.length === 0) {\n    return [_stripBasename ? stripBasenameFromPathname(location.pathname, basename) : location.pathname, 'url'];\n  }\n\n  let pathBuilder = '';\n  if (branches) {\n    for (const branch of branches) {\n      const route = branch.route;\n      if (route) {\n        // Early return if index route\n        if (route.index) {\n          return sendIndexPath(pathBuilder, branch.pathname, basename);\n        }\n        const path = route.path;\n\n        // If path is not a wildcard and has no child routes, append the path\n        if (path && !pathIsWildcardAndHasChildren(path, branch)) {\n          const newPath = path[0] === '/' || pathBuilder[pathBuilder.length - 1] === '/' ? path : `/${path}`;\n          pathBuilder += newPath;\n\n          // If the path matches the current location, return the path\n          if (location.pathname.endsWith(basename + branch.pathname)) {\n            if (\n              // If the route defined on the element is something like\n              // <Route path=\"/stores/:storeId/products/:productId\" element={<div>Product</div>} />\n              // We should check against the branch.pathname for the number of / separators\n              // TODO(v9): Put the implementation of `getNumberOfUrlSegments` in this file\n              // eslint-disable-next-line deprecation/deprecation\n              getNumberOfUrlSegments(pathBuilder) !== getNumberOfUrlSegments(branch.pathname) &&\n              // We should not count wildcard operators in the url segments calculation\n              !pathEndsWithWildcard(pathBuilder)\n            ) {\n              return [(_stripBasename ? '' : basename) + newPath, 'route'];\n            }\n\n            // if the last character of the pathbuilder is a wildcard and there are children, remove the wildcard\n            if (pathIsWildcardAndHasChildren(pathBuilder, branch)) {\n              pathBuilder = pathBuilder.slice(0, -1);\n            }\n\n            return [(_stripBasename ? '' : basename) + pathBuilder, 'route'];\n          }\n        }\n      }\n    }\n  }\n\n  const fallbackTransactionName = _stripBasename\n    ? stripBasenameFromPathname(location.pathname, basename)\n    : location.pathname || '/';\n\n  return [fallbackTransactionName, 'url'];\n}\n\nfunction updatePageloadTransaction(\n  activeRootSpan,\n  location,\n  routes,\n  matches,\n  basename,\n  allRoutes,\n) {\n  const branches = Array.isArray(matches)\n    ? matches\n    : (_matchRoutes(routes, location, basename) );\n\n  if (branches) {\n    let name,\n      source = 'url';\n    const isInDescendantRoute = locationIsInsideDescendantRoute(location, allRoutes || routes);\n\n    if (isInDescendantRoute) {\n      name = prefixWithSlash(rebuildRoutePathFromAllRoutes(allRoutes || routes, location));\n      source = 'route';\n    }\n\n    if (!isInDescendantRoute || !name) {\n      [name, source] = getNormalizedName(routes, location, branches, basename);\n    }\n\n    getCurrentScope().setTransactionName(name);\n\n    if (activeRootSpan) {\n      activeRootSpan.updateName(name);\n      activeRootSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, source);\n    }\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction createV6CompatibleWithSentryReactRouterRouting(\n  Routes,\n  version,\n) {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_createRoutesFromChildren || !_matchRoutes) {\n    DEBUG_BUILD &&\n      logger.warn(`reactRouterV6Instrumentation was unable to wrap Routes because of one or more missing parameters.\n      useEffect: ${_useEffect}. useLocation: ${_useLocation}. useNavigationType: ${_useNavigationType}.\n      createRoutesFromChildren: ${_createRoutesFromChildren}. matchRoutes: ${_matchRoutes}.`);\n\n    return Routes;\n  }\n\n  const allRoutes = [];\n\n  const SentryRoutes = (props) => {\n    const isMountRenderPass = React.useRef(true);\n\n    const location = _useLocation();\n    const navigationType = _useNavigationType();\n\n    _useEffect(\n      () => {\n        const routes = _createRoutesFromChildren(props.children) ;\n\n        if (isMountRenderPass.current) {\n          routes.forEach(route => {\n            allRoutes.push(...getChildRoutesRecursively(route));\n          });\n\n          updatePageloadTransaction(getActiveRootSpan(), location, routes, undefined, undefined, allRoutes);\n          isMountRenderPass.current = false;\n        } else {\n          handleNavigation({\n            location,\n            routes,\n            navigationType,\n            version,\n            allRoutes,\n          });\n        }\n      },\n      // `props.children` is purposely not included in the dependency array, because we do not want to re-run this effect\n      // when the children change. We only want to start transactions when the location or navigation type change.\n      [location, navigationType],\n    );\n\n    // @ts-expect-error Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params\n    return React.createElement(Routes, { ...props,} );\n  };\n\n  hoistNonReactStatics(SentryRoutes, Routes);\n\n  // @ts-expect-error Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params\n  return SentryRoutes;\n}\n\nfunction getActiveRootSpan() {\n  const span = getActiveSpan();\n  const rootSpan = span ? getRootSpan(span) : undefined;\n\n  if (!rootSpan) {\n    return undefined;\n  }\n\n  const op = spanToJSON(rootSpan).op;\n\n  // Only use this root span if it is a pageload or navigation span\n  return op === 'navigation' || op === 'pageload' ? rootSpan : undefined;\n}\n\nexport { createReactRouterV6CompatibleTracingIntegration, createV6CompatibleWithSentryReactRouterRouting, createV6CompatibleWrapCreateBrowserRouter, createV6CompatibleWrapUseRoutes, handleNavigation };\n//# sourceMappingURL=reactrouterv6-compat-utils.js.map\n","import { createReactRouterV6CompatibleTracingIntegration, createV6CompatibleWrapUseRoutes, createV6CompatibleWrapCreateBrowserRouter, createV6CompatibleWithSentryReactRouterRouting } from './reactrouterv6-compat-utils.js';\n\n/**\n * A browser tracing integration that uses React Router v6 to instrument navigations.\n * Expects `useEffect`, `useLocation`, `useNavigationType`, `createRoutesFromChildren` and `matchRoutes` to be passed as options.\n */\nfunction reactRouterV6BrowserTracingIntegration(\n  options,\n) {\n  return createReactRouterV6CompatibleTracingIntegration(options, '6');\n}\n\n/**\n * A wrapper function that adds Sentry routing instrumentation to a React Router v6 useRoutes hook.\n * This is used to automatically capture route changes as transactions when using the useRoutes hook.\n */\nfunction wrapUseRoutesV6(origUseRoutes) {\n  return createV6CompatibleWrapUseRoutes(origUseRoutes, '6');\n}\n\n/**\n * Alias for backwards compatibility\n * @deprecated Use `wrapUseRoutesV6` or `wrapUseRoutesV7` instead.\n */\nconst wrapUseRoutes = wrapUseRoutesV6;\n\n/**\n * A wrapper function that adds Sentry routing instrumentation to a React Router v6 createBrowserRouter function.\n * This is used to automatically capture route changes as transactions when using the createBrowserRouter API.\n */\nfunction wrapCreateBrowserRouterV6\n\n(createRouterFunction) {\n  return createV6CompatibleWrapCreateBrowserRouter(createRouterFunction, '6');\n}\n\n/**\n * Alias for backwards compatibility\n * @deprecated Use `wrapCreateBrowserRouterV6` or `wrapCreateBrowserRouterV7` instead.\n */\nconst wrapCreateBrowserRouter = wrapCreateBrowserRouterV6;\n\n/**\n * A higher-order component that adds Sentry routing instrumentation to a React Router v6 Route component.\n * This is used to automatically capture route changes as transactions.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withSentryReactRouterV6Routing(routes) {\n  return createV6CompatibleWithSentryReactRouterRouting(routes, '6');\n}\n\nexport { reactRouterV6BrowserTracingIntegration, withSentryReactRouterV6Routing, wrapCreateBrowserRouter, wrapCreateBrowserRouterV6, wrapUseRoutes, wrapUseRoutesV6 };\n//# sourceMappingURL=reactrouterv6.js.map\n","import * as Sentry from '@sentry/react';\nimport React from 'react';\nimport {\n    createBrowserRouter,\n    createRoutesFromChildren,\n    matchRoutes,\n    useLocation,\n    useNavigationType\n} from 'react-router-dom';\nimport { captureConsoleIntegration } from '@sentry/react';\n\nenum Env {\n    Local = 'local',\n    Dev = 'dev',\n    Prod = 'prod'\n}\n\nconst getEnv = (): Env => {\n    // TODO: Dette vil ikke virke som internflate\n    const { hostname } = window.location;\n    if (hostname.includes('dev.nav.no')) return Env.Dev;\n    if (hostname.includes('nav.no')) return Env.Prod;\n    return Env.Local;\n};\n\nSentry.init({\n    allowUrls: [/https:\\/\\/cdn\\.nav\\.no/],\n    denyUrls: [/https:\\/\\/cdn\\.nav\\.no\\/personbruker/, /https:\\/\\/nav\\.no\\/dekoratoren/],\n    dsn: 'https://e1ba5c07ce204508b9fcbe5c64211ed5@sentry.gc.nav.no/173',\n    integrations: [\n        Sentry.reactRouterV6BrowserTracingIntegration({\n            useEffect: React.useEffect,\n            useLocation,\n            useNavigationType,\n            createRoutesFromChildren,\n            matchRoutes\n        }),\n        Sentry.httpClientIntegration({\n            failedRequestTargets: [\n                /https:\\/\\/pto\\.ekstern\\.dev\\.nav\\.no\\/arbeid\\/dialog\\/(veilarbdialog|veilarboppfolging|veilarbaktivitet|veilarblest)\\/*/,\n                /https:\\/\\/nav\\.no\\/arbeid\\/dialog\\/(veilarbdialog|veilarboppfolging|veilarbaktivitet|veilarblest)\\/*/\n            ]\n        }),\n        captureConsoleIntegration({\n            // array of methods that should be captured\n            // defaults to ['log', 'info', 'warn', 'error', 'debug', 'assert']\n            levels: ['warn', 'error']\n        })\n    ],\n    tracePropagationTargets: [\n        'localhost',\n        /https:\\/\\/nav\\.no\\/arbeid\\/dialog\\/(veilarbdialog|veilarboppfolging|veilarbaktivitet|veilarblest)/,\n        /https:\\/\\/pto\\.ekstern\\.dev\\.nav\\.no\\/arbeid\\/dialog\\/(veilarbdialog|veilarboppfolging|veilarbaktivitet|veilarblest)/\n    ],\n    environment: getEnv(),\n    enabled: getEnv() !== Env.Local,\n    ignoreErrors: [\n        /Amplitude/,\n        // /^Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.$/,\n        /**\n         * React internal error thrown when something outside react modifies the DOM\n         * This is usually because of a browser extension or Chrome's built-in translate\n         */\n        /Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node\\./,\n        /Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node./\n    ],\n    // Set tracesSampleRate to 1.0 to capture 100%\n    // of transactions for performance monitoring.\n    // We recommend adjusting this value in production\n    tracesSampleRate: 0.2,\n    // beforeSend: fjernPersonopplysninger,\n    release: import.meta.env.VITE_SENTRY_RELEASE\n});\n\ndeclare const window: {\n    location: { hostname: string };\n    captureException: typeof Sentry.captureException;\n    captureMessage: typeof Sentry.captureMessage;\n};\nwindow.captureException = Sentry.captureException;\nwindow.captureMessage = Sentry.captureMessage;\n\nexport const sentryCreateBrowserRouter = Sentry.wrapCreateBrowserRouter(createBrowserRouter);\n","import './global.css';\n\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\nimport './sentry2';\nimport { sentryCreateBrowserRouter } from './sentry2';\n\nexport const renderAsReactRoot = () => {\n    const rootElement = document.getElementById('root');\n    createRoot(rootElement!).render(<App createRouter={sentryCreateBrowserRouter} />);\n};\n"],"names":["handlers","instrumented","addHandler","type","handler","maybeInstrument","instrumentFn","e","DEBUG_BUILD","logger","triggerHandlers","data","typeHandlers","getFunctionName","_oldOnErrorHandler","addGlobalErrorInstrumentationHandler","instrumentError","GLOBAL_OBJ","msg","url","line","column","error","_oldOnUnhandledRejectionHandler","addGlobalUnhandledRejectionInstrumentationHandler","instrumentUnhandledRejection","errorsInstrumented","registerSpanErrorInstrumentation","errorCallback","activeSpan","getActiveSpan","rootSpan","getRootSpan","message","SPAN_STATUS_ERROR","SCOPE_ON_START_SPAN_FIELD","ISOLATION_SCOPE_ON_START_SPAN_FIELD","setCapturedScopesOnSpan","span","scope","isolationScope","addNonEnumerableProperty","getCapturedScopesOnSpan","SentryNonRecordingSpan","spanContext","generateTraceId","generateSpanId","TRACE_FLAG_NONE","_timestamp","_key","_value","_values","_status","_name","_attributesOrStartTime","_startTime","_link","_links","_exception","_time","logSpanStart","description","op","parentSpanId","spanToJSON","spanId","sampled","spanIsSampled","isRootSpan","header","infoParts","logSpanEnd","parseSampleRate","sampleRate","rate","sampleSpan","options","samplingContext","hasTracingEnabled","parsedSampleRate","DSN_REGEX","isValidProtocol","protocol","dsnToString","dsn","withPassword","host","path","pass","port","projectId","publicKey","dsnFromString","str","match","consoleSandbox","lastPath","split","projectMatch","dsnFromComponents","components","validateDsn","component","makeDsn","from","createEnvelope","headers","items","addItemToEnvelope","envelope","newItem","forEachEnvelopeItem","callback","envelopeItems","envelopeItem","envelopeItemType","encodeUTF8","input","serializeEnvelope","envHeaders","parts","append","next","item","itemHeaders","payload","stringifiedPayload","normalize","concatBuffers","buffers","totalLength","acc","buf","merged","offset","buffer","createSpanEnvelopeItem","spanJson","createAttachmentEnvelopeItem","attachment","dropUndefinedKeys","ITEM_TYPE_TO_DATA_CATEGORY_MAP","envelopeItemTypeToDataCategory","getSdkMetadataForEnvelopeHeader","metadataOrEvent","name","version","createEventEnvelopeHeaders","event","sdkInfo","tunnel","dynamicSamplingContext","enhanceEventWithSdkInfo","createSessionEnvelope","session","metadata","envelopeHeaders","createEventEnvelope","eventType","createSpanEnvelope","spans","client","dscHasRequiredProps","dsc","getDynamicSamplingContextFromSpan","beforeSendSpan","convertToSpanJSON","showSpanDropWarning","setMeasurement","value","unit","SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE","SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT","timedEventsToMeasurements","events","measurements","attributes","MAX_SPAN_COUNT","SentrySpan","timestampInSeconds","SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN","SEMANTIC_ATTRIBUTE_SENTRY_OP","traceId","TRACE_FLAG_SAMPLED","key","timeInput","spanTimeInputToSeconds","SEMANTIC_ATTRIBUTE_SENTRY_SOURCE","endTimestamp","getStatusMessage","getMetricSummaryJsonForSpan","SEMANTIC_ATTRIBUTE_PROFILE_ID","SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME","attributesOrStartTime","startTime","time","isSpanTimeInput","getClient","sendSpanEnvelope","transactionEvent","getCurrentScope","isFullFinishedSpan","capturedSpanScope","capturedSpanIsolationScope","getSpanDescendants","isStandaloneSpan","source","SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME","transaction","spanToTransactionTraceContext","a","b","spanItems","SUPPRESS_TRACING_KEY","startInactiveSpan","acs","getAcs","spanArguments","parseSentrySpanArguments","forceTransaction","customParentSpan","withScope","withActiveSpan","parentSpan","getParentSpan","createChildOrRootSpan","_setSpanForScope","getIsolationScope","_startChildSpan","addChildSpanToSpan","parentSampled","_startRootSpan","freezeDscOnSpan","initialCtx","ctx","carrier","getMainCarrier","getAsyncContextStrategy","SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE","childSpan","_getSpanForScope","TRACING_DEFAULTS","FINISH_REASON_HEARTBEAT_FAILED","FINISH_REASON_IDLE_TIMEOUT","FINISH_REASON_FINAL_TIMEOUT","FINISH_REASON_EXTERNAL_FINISH","startIdleSpan","startSpanOptions","activities","_finished","_idleTimeoutID","_finishReason","_autoFinishAllowed","_cleanupHooks","idleTimeout","finalTimeout","childSpanTimeout","beforeSpanEnd","previousActiveSpan","_startIdleSpan","target","thisArg","args","definedEndTimestamp","rest","timestamp","spanEndTimestamp","child","onIdleSpanEnded","childEndTimestamps","latestSpanEndTimestamp","spanStartTimestamp","_cancelIdleTimeout","_restartIdleTimeout","_restartChildSpanTimeout","_pushActivity","_popActivity","cleanup","spanJSON","startTimestamp","SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON","childSpans","discardedSpans","childSpanJSON","childEndTimestamp","childStartTimestamp","spanStartedBeforeIdleSpanEnd","timeoutWithMarginOfError","spanEndedBeforeFinalTimeout","stringifiedSpan","removeChildSpanFromSpan","startedSpan","endedSpan","spanToAllowAutoFinish","SENTRY_API_VERSION","getBaseApiEndpoint","_getIngestEndpoint","_encodedAuth","params","getEnvelopeEndpointWithUrlEncodedAuth","installedIntegrations","filterDuplicates","integrations","integrationsByName","currentInstance","existingInstance","getIntegrationsToSetup","defaultIntegrations","userIntegrations","integration","resolvedUserIntegrations","finalIntegrations","debugIndex","debugInstance","setupIntegrations","integrationIndex","setupIntegration","afterSetupIntegrations","hint","processor","createClientReportEnvelope","discarded_events","clientReportItem","dateTimestampInSeconds","SentryError","logLevel","ALREADY_SEEN_ERROR","BaseClient","undefinedOption","option","exception","eventId","uuid4","checkOrSetAlreadyCaught","hintWithEventId","level","currentScope","eventMessage","isParameterizedString","promisedEvent","isPrimitive","updateSession","timeout","transport","clientFinished","transportFlushed","resolvedSyncPromise","result","eventProcessor","integrationName","isAlreadyInstalled","env","promise","sendResponse","reason","category","eventOrCount","count","hook","hooks","cbIndex","callbacks","crashed","errored","exceptions","ex","mechanism","sessionNonTerminal","SyncPromise","resolve","ticked","tick","interval","prepareEvent","evt","getTraceContextFromScope","getDynamicSamplingContextFromScope","finalEvent","sentryError","isTransaction","isTransactionEvent","isError","isErrorEvent","beforeSendLabel","rejectedSyncPromise","dataCategory","prepared","processBeforeSend","_validateBeforeSendResult","processedEvent","spanCount","spanCountBefore","spanCountAfter","droppedSpanCount","transactionInfo","outcomes","quantity","beforeSendResult","invalidValueError","isThenable","isPlainObject","beforeSend","beforeSendTransaction","processedSpans","processedSpan","initAndBind","clientClass","setCurrentClient","makePromiseBuffer","limit","isReady","remove","task","add","taskProducer","drain","reject","counter","capturedSetTimeout","DEFAULT_RETRY_AFTER","parseRetryAfterHeader","now","headerDelay","headerDate","disabledUntil","limits","isRateLimited","updateRateLimits","statusCode","updatedRateLimits","rateLimitHeader","retryAfterHeader","retryAfter","categories","namespaces","delay","DEFAULT_TRANSPORT_BUFFER_SIZE","createTransport","makeRequest","rateLimits","flush","send","filteredEnvelopeItems","getEventForEnvelopeItem","filteredEnvelope","recordEnvelopeLoss","requestTask","response","isSentryRequestUrl","checkDsn","checkTunnel","removeTrailingSlash","applySdkMetadata","names","SDK_VERSION","getTraceData","isEnabled","sentryTrace","spanToTraceHeader","scopeToTraceHeader","baggage","dynamicSamplingContextToSentryBaggageHeader","TRACEPARENT_REGEXP","generateSentryTraceHeader","DEFAULT_BREADCRUMBS","addBreadcrumb","breadcrumb","beforeBreadcrumb","maxBreadcrumbs","mergedBreadcrumb","finalBreadcrumb","originalFunctionToString","INTEGRATION_NAME","SETUP_CLIENTS","_functionToStringIntegration","originalFunction","getOriginalFunction","context","functionToStringIntegration","DEFAULT_IGNORE_ERRORS","_inboundFiltersIntegration","_hint","clientOptions","mergedOptions","_mergeOptions","_shouldDropEvent","inboundFiltersIntegration","internalOptions","_isSentryError","getEventDescription","_isIgnoredError","_isUselessError","_isIgnoredTransaction","_isDeniedUrl","_getEventFilterUrl","_isAllowedUrl","ignoreErrors","_getPossibleEventMessages","stringMatchesSomePattern","ignoreTransactions","denyUrls","allowUrls","possibleMessages","lastException","_getLastValidUrl","frames","i","frame","applyAggregateErrorsToEvent","exceptionFromErrorImplementation","parser","maxValueLimit","isInstanceOf","originalException","truncateAggregateExceptions","aggregateExceptionsFromError","prevExceptions","exceptionId","newExceptions","applyExceptionGroupFieldsForParentException","newException","newExceptionId","applyExceptionGroupFieldsForChildException","childError","parentId","maxValueLength","truncate","parseUrl","query","fragment","getNumberOfUrlSegments","s","addConsoleInstrumentationHandler","instrumentConsole","CONSOLE_LEVELS","fill","originalConsoleMethod","originalConsoleMethods","log","severityLevelFromString","_captureConsoleIntegration","levels","handled","consoleHandler","captureConsoleIntegration","captureContext","addExceptionMechanism","safeJoin","captureMessage","arg","captureException","_dedupeIntegration","previousEvent","currentEvent","dedupeIntegration","_isSameMessageEvent","_isSameExceptionEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","previousException","_getExceptionFromEvent","currentException","currentFrames","getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","previousFingerprint","instrumentFetchRequest","handlerData","shouldCreateSpan","shouldAttachHeaders","spanOrigin","shouldCreateSpanResult","endSpan","method","fullUrl","getFullURL","hasParent","request","_addTracingHeadersToFetchRequest","fetchOptionsObj","traceHeaders","isRequest","isHeaders","newHeaders","prevBaggageHeader","prevHeaderStrippedFromSentryBaggage","stripBaggageHeaderOfSentryBaggageValues","headerName","headerValue","existingBaggageHeader","newBaggageHeaders","headerItem","setHttpStatus","contentLength","contentLengthNum","baggageHeader","baggageEntry","SENTRY_BAGGAGE_KEY_PREFIX","getBreadcrumbLogLevelFromHttpStatusCode","WINDOW","supportsFetch","isNativeFunction","func","supportsNativeFetch","doc","sandbox","err","addFetchInstrumentationHandler","skipNativeFetchCheck","instrumentFetch","addFetchEndInstrumentationHandler","streamHandler","onFetchResolved","originalFetch","virtualError","parseFetchArgs","resolveResponse","res","onFinishedResolving","body","responseReader","maxFetchDurationTimeout","readingActive","chunkTimeout","done","clonedResponseForResolving","hasProp","obj","prop","getUrlFromResource","resource","fetchArgs","getSDKSource","supportsHistory","chromeVar","isChromePackagedApp","hasHistoryApi","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","fn","isFunction","wrapper","sentryWrapped","wrappedArguments","addExceptionTypeValue","property","markFunctionWrapped","exceptionFromError","stackParser","parseStackFrames","extractType","extractMessage","eventFromPlainObject","syntheticException","isUnhandledRejection","normalizeDepth","errorFromProp","getErrorPropertyFromObject","extra","normalizeToSize","isEvent","getNonErrorObjectExceptionValue","eventFromError","stacktrace","skipLines","getSkipFirstStackStringLines","framesToPop","getPopFirstTopFrames","reactMinifiedRegexp","isWebAssemblyException","eventFromException","attachStacktrace","eventFromUnknownInput","eventFromMessage","eventFromString","isDOMError","isDOMException","domException","__sentry_template_string__","__sentry_template_values__","keys","extractExceptionKeysForMessage","captureType","getObjectClassName","prototype","createUserFeedbackEnvelope","feedback","createUserFeedbackEnvelopeItem","BrowserClient","opts","sdkSource","getRating","thresholds","bindReporter","metric","reportAllChanges","prevValue","delta","forceReport","generateUniqueID","getNavigationEntry","checkResponseStart","navigationEntry","getActivationStart","navEntry","initMetric","navigationType","observe","po","list","onHidden","cb","onHiddenOrPageHide","runOnce","called","firstHiddenTime","initHiddenTime","onVisibilityUpdate","removeChangeListeners","addChangeListeners","getVisibilityWatcher","whenActivated","FCPThresholds","onFCP","onReport","visibilityWatcher","report","entries","entry","CLSThresholds","onCLS","sessionValue","sessionEntries","handleEntries","firstSessionEntry","lastSessionEntry","FIDThresholds","onFID","handleEntry","interactionCountEstimate","minKnownInteractionId","maxKnownInteractionId","updateEstimate","getInteractionCount","initInteractionCountPolyfill","longestInteractionList","longestInteractionMap","DEFAULT_DURATION_THRESHOLD","prevInteractionCount","getInteractionCountForNavigation","estimateP98LongestInteraction","candidateInteractionIndex","MAX_INTERACTIONS_TO_CONSIDER","entryPreProcessingCallbacks","processInteractionEntry","minLongestInteraction","existingInteraction","interaction","whenIdle","rIC","handle","INPThresholds","onINP","inp","LCPThresholds","reportedMetricIDs","onLCP","stopListening","TTFBThresholds","whenReady","onTTFB","_previousCls","_previousFid","_previousLcp","_previousTtfb","_previousInp","addClsInstrumentationHandler","stopOnCallback","addMetricObserver","instrumentCls","addLcpInstrumentationHandler","instrumentLcp","addFidInstrumentationHandler","instrumentFid","addTtfbInstrumentationHandler","instrumentTtfb","addInpInstrumentationHandler","instrumentInp","addPerformanceInstrumentationHandler","instrumentPerformanceObserver","getCleanupCallback","previousValue","index","isPerformanceEventTiming","isMeasurementValue","startAndEndSpan","startTimeInSeconds","endTime","parentStartTime","startStandaloneWebVitalSpan","passedAttributes","release","environment","replay","replayId","user","userDisplay","profileId","getBrowserPerformanceAPI","msToSec","trackClsAsStandaloneSpan","standaloneCLsValue","standaloneClsEntry","pageloadSpanId","supportsLayoutShift","sentSpan","_collectClsOnce","sendStandaloneClsSpan","cleanupClsHandler","unsubscribeStartNavigation","clsValue","browserPerformanceTimeOrigin","routeName","htmlTreeAsString","MAX_INT_AS_BYTES","_performanceCursor","_measurements","_lcpEntry","_clsEntry","startTrackingWebVitals","recordClsStandaloneSpans","performance","fidCleanupCallback","_trackFID","lcpCleanupCallback","_trackLCP","ttfbCleanupCallback","_trackTtfb","clsCleanupCallback","_trackCLS","startTrackingLongTasks","parent","parentOp","parentStartTimestamp","duration","startTrackingLongAnimationFrames","initialScript","invoker","invokerType","sourceURL","sourceFunctionName","sourceCharPosition","startTrackingInteractions","spanOptions","componentName","getComponentName","timeOrigin","addPerformanceEntries","performanceEntries","transactionStartTime","_addNavigationSpans","_addMeasureSpans","firstHidden","shouldRecord","_addResourceSpans","_trackNavigator","_addTtfbRequestTimeToMeasurements","fidMark","measurementName","measurement","_setWebVitalAttributes","requestTime","measureStartTimestamp","startTimeStamp","measureEndTimestamp","_addPerformanceNavigationTiming","_addRequest","eventEnd","_getEndPropertyNameForNavigationTiming","end","start","requestStartTimestamp","responseEndTimestamp","responseStartTimestamp","resourceUrl","parsedUrl","setResourceEntrySizeData","deliveryType","renderBlockingStatus","navigator","connection","dataKey","entryVal","responseStart","requestStart","DEBOUNCE_DURATION","debounceTimerID","lastCapturedEventType","lastCapturedEventTargetId","addClickKeypressInstrumentationHandler","instrumentDOM","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","targetObj","proto","originalAddEventListener","listener","handlerForType","originalRemoveEventListener","isSimilarToLastCapturedEvent","shouldSkipDOMEvent","globalListener","getEventTarget","lastHref","addHistoryInstrumentationHandler","instrumentHistory","oldOnPopState","to","historyReplacementFunction","originalHistoryFunction","cachedImplementations","getNativeImplementation","cached","impl","document","contentWindow","clearCachedImplementation","SENTRY_XHR_DATA_KEY","addXhrInstrumentationHandler","instrumentXHR","xhrproto","originalOpen","xhrOpenThisArg","xhrOpenArgArray","isString","onreadystatechangeHandler","xhrInfo","originalOnreadystatechange","onreadystatechangeThisArg","onreadystatechangeArgArray","originalSetRequestHeader","setRequestHeaderThisArg","setRequestHeaderArgArray","originalSend","sendThisArg","sendArgArray","sentryXhrData","LAST_INTERACTIONS","INTERACTIONS_SPAN_MAP","startTrackingINP","inpCallback","_trackINP","INP_ENTRY_MAP","interactionId","interactionType","spanToUse","registerInpInteractionListener","_latestRoute","activeRootSpan","last","makeFetchTransport","nativeFetch","pendingBodySize","pendingCount","requestSize","requestOptions","CHROME_PRIORITY","GECKO_PRIORITY","createFrame","filename","lineno","colno","UNKNOWN_FUNCTION","chromeRegexNoFnName","chromeRegex","chromeEvalRegex","chromeStackParserFn","noFnParts","col","subMatch","extractSafariExtensionDetails","chromeStackLineParser","geckoREgex","geckoEvalRegex","gecko","geckoStackLineParser","defaultStackLineParsers","defaultStackParser","createStackParser","isSafariExtension","isSafariWebExtension","MAX_ALLOWED_STRING_LENGTH","_breadcrumbsIntegration","_options","_getConsoleBreadcrumbHandler","_getDomBreadcrumbHandler","_getXhrBreadcrumbHandler","_getFetchBreadcrumbHandler","_getHistoryBreadcrumbHandler","_getSentryBreadcrumbHandler","breadcrumbsIntegration","dom","keyAttrs","maxStringLength","element","_isEvent","status_code","parsedLoc","parsedFrom","parsedTo","DEFAULT_EVENT_TARGET","_browserApiErrorsIntegration","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","browserApiErrorsIntegration","original","originalCallback","xhr","wrapOptions","eventName","isEventListenerObject","originalEventHandler","browserSessionIntegration","startSession","captureSession","_globalHandlersIntegration","_installGlobalOnErrorHandler","globalHandlerLog","_installGlobalOnUnhandledRejectionHandler","globalHandlersIntegration","getOptions","_enhanceEventWithInitialFrame","captureEvent","_getUnhandledRejectionError","_eventFromRejectionWithPrimitive","ev","ev0","ev0s","ev0sf","getLocationHref","httpContextIntegration","referrer","userAgent","DEFAULT_KEY","DEFAULT_LIMIT","_linkedErrorsIntegration","linkedErrorsIntegration","getDefaultIntegrations","applyDefaultOptions","optionsArg","defaultOptions","shouldShowBrowserExtensionError","windowWithMaybeExtension","extensionKey","extensionObject","runtimeId","href","extensionProtocols","isDedicatedExtensionPage","isNWjs","init","browserOptions","stackParserFromStackParserOptions","_httpClientIntegration","_wrapFetch","httpClientIntegration","_fetchResponseHandler","requestInfo","requestInit","_shouldCaptureResponse","_getRequest","requestHeaders","responseHeaders","requestCookies","responseCookies","_shouldSendDefaultPii","_parseCookieHeaders","_createEvent","cookieHeader","_extractFetchHeaders","cookies","cookieString","_parseCookieString","_xhrResponseHandler","_getXHRResponseHeaders","_getResponseSizeFromHeaders","cookie","_isInGivenRequestTargets","failedRequestTargets","givenRequestTarget","_isInGivenStatusRanges","failedRequestStatusCodes","status","range","virtualStackTrace","stack","responseToSpanId","spanIdToEndTimestamp","defaultRequestInstrumentationOptions","instrumentOutgoingRequests","traceFetch","traceXHR","trackFetchStreamPerformance","shouldCreateSpanForRequest","enableHTTPTimings","tracePropagationTargets","_","shouldAttachHeadersWithTargets","updatedTimestamp","createdSpan","addHTTPTimings","xhrCallback","isPerformanceResourceTiming","resourceTimingEntryToSpanData","extractNetworkProtocol","nextHopProtocol","char","getAbsoluteTime","resourceTiming","timingSpanData","targetUrl","resolvedUrl","currentOrigin","isSameOriginRequest","isRelativeSameOriginRequest","addTracingHeadersToXhrRequest","setHeaderOnXhr","sentryTraceHeader","sentryBaggageHeader","registerBackgroundTabDetection","cancelledStatus","BROWSER_TRACING_INTEGRATION_ID","DEFAULT_BROWSER_TRACING_OPTIONS","browserTracingIntegration","enableInp","enableLongTask","enableLongAnimationFrame","enableInteractions","enableStandaloneClsSpans","beforeStartSpan","markBackgroundSpan","instrumentPageLoad","instrumentNavigation","_collectWebVitals","latestRoute","_createRouteSpan","isPageloadTransaction","finalStartSpanOptions","idleSpan","emitFinish","startingUrl","maybeEndActiveSpan","traceOptions","getMetaContent","propagationContext","propagationContextFromHeaders","oldPropagationContext","startBrowserTracingPageLoadSpan","startBrowserTracingNavigationSpan","registerInteractionListener","metaName","metaTag","getDomElement","inflightInteractionSpan","registerInteractionTransaction","currentRootSpanOp","setContext","init$1","c","d","f","g","h","k","l","m","n","p","q","r","t","v","w","x","y","z","u","A","reactIs_production_min","reactIsModule","require$$0","reactIs","REACT_STATICS","KNOWN_STATICS","FORWARD_REF_STATICS","MEMO_STATICS","TYPE_STATICS","getStatics","defineProperty","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","descriptor","hoistNonReactStatics_cjs","_useEffect","_useLocation","_useNavigationType","_matchRoutes","_stripBasename","CLIENTS_WITH_INSTRUMENT_NAVIGATION","createV6CompatibleWrapCreateBrowserRouter","createRouterFunction","routes","router","basename","getActiveRootSpan","updatePageloadTransaction","state","location","handleNavigation","createReactRouterV6CompatibleTracingIntegration","useEffect","useLocation","useNavigationType","createRoutesFromChildren","matchRoutes","stripBasename","initPathName","matches","allRoutes","branches","isInDescendantRoute","locationIsInsideDescendantRoute","prefixWithSlash","rebuildRoutePathFromAllRoutes","getNormalizedName","stripBasenameFromPathname","pathname","startIndex","nextChar","sendIndexPath","pathBuilder","reconstructedPath","pathEndsWithWildcard","pathIsWildcardAndHasChildren","branch","routeIsDescendant","route","matchedRoutes","pickSplat","pickPath","trimWildcard","trimSlash","strippedPath","newPath","reactRouterV6BrowserTracingIntegration","wrapCreateBrowserRouterV6","wrapCreateBrowserRouter","getEnv","hostname","window","includes","Env","Sentry","React","enabled","tracesSampleRate","import","sentryCreateBrowserRouter","createBrowserRouter","renderAsReactRoot","rootElement","getElementById","createRoot","render","App"],"mappings":"mjCAKA,MAAMA,GAAW,CAAE,EACbC,GAAe,CAAE,EAGvB,SAASC,GAAWC,EAAMC,EAAS,CACjCJ,GAASG,CAAI,EAAIH,GAASG,CAAI,GAAK,CAAE,EACpCH,GAASG,CAAI,EAAI,KAAKC,CAAO,CAChC,CAaA,SAASC,GAAgBF,EAAMG,EAAc,CAC3C,GAAI,CAACL,GAAaE,CAAI,EAAG,CACvBF,GAAaE,CAAI,EAAI,GACrB,GAAI,CACFG,EAAc,CACf,OAAQC,EAAG,CACVC,IAAeC,EAAO,MAAM,6BAA6BN,CAAI,GAAII,CAAC,CACxE,CACA,CACA,CAGA,SAASG,EAAgBP,EAAMQ,EAAM,CACnC,MAAMC,EAAeT,GAAQH,GAASG,CAAI,EAC1C,GAAKS,EAIL,UAAWR,KAAWQ,EACpB,GAAI,CACFR,EAAQO,CAAI,CACb,OAAQJ,EAAG,CACVC,IACEC,EAAO,MACL;AAAA,QAA0DN,CAAI;AAAA,QAAWU,GAAgBT,CAAO,CAAC;AAAA,QACjGG,CACD,CACT,CAEA,CCnDA,IAAIO,GAAqB,KAQzB,SAASC,GAAqCX,EAAS,CACrD,MAAMD,EAAO,QACbD,GAAWC,EAAMC,CAAO,EACxBC,GAAgBF,EAAMa,EAAe,CACvC,CAEA,SAASA,IAAkB,CACzBF,GAAqBG,EAAW,QAIhCA,EAAW,QAAU,SACnBC,EACAC,EACAC,EACAC,EACAC,EACA,CAUA,OAFAZ,EAAgB,QAPI,CAClB,OAAAW,EACA,MAAAC,EACA,KAAAF,EACA,IAAAF,EACA,IAAAC,CACD,CACmC,EAEhCL,GAEKA,GAAmB,MAAM,KAAM,SAAS,EAG1C,EACR,EAEDG,EAAW,QAAQ,wBAA0B,EAC/C,CC5CA,IAAIM,GAAkC,KAQtC,SAASC,GACPpB,EACA,CACA,MAAMD,EAAO,qBACbD,GAAWC,EAAMC,CAAO,EACxBC,GAAgBF,EAAMsB,EAA4B,CACpD,CAEA,SAASA,IAA+B,CACtCF,GAAkCN,EAAW,qBAI7CA,EAAW,qBAAuB,SAAU,EAAG,CAI7C,OAFAP,EAAgB,qBADI,CAC6B,EAE7Ca,GAEKA,GAAgC,MAAM,KAAM,SAAS,EAGvD,EACR,EAEDN,EAAW,qBAAqB,wBAA0B,EAC5D,CC9BA,IAAIS,GAAqB,GAKzB,SAASC,IAAmC,CACtCD,KAIJA,GAAqB,GACrBX,GAAqCa,EAAa,EAClDJ,GAAkDI,EAAa,EACjE,CAKA,SAASA,IAAgB,CACvB,MAAMC,EAAaC,EAAe,EAC5BC,EAAWF,GAAcG,EAAYH,CAAU,EACrD,GAAIE,EAAU,CACZ,MAAME,EAAU,iBAChBzB,GAAeC,EAAO,IAAI,wBAAwBwB,CAAO,2BAA2B,EACpFF,EAAS,UAAU,CAAE,KAAMG,GAAmB,QAAAD,CAAO,CAAE,CAC3D,CACA,CAIAL,GAAc,IAAM,8BCnCpB,MAAMO,GAA4B,eAC5BC,GAAsC,wBAG5C,SAASC,GAAwBC,EAAMC,EAAOC,EAAgB,CACxDF,IACFG,GAAyBH,EAAMF,GAAqCI,CAAc,EAClFC,GAAyBH,EAAMH,GAA2BI,CAAK,EAEnE,CAKA,SAASG,GAAwBJ,EAAM,CACrC,MAAO,CACL,MAAQA,EAAOH,EAAyB,EACxC,eAAiBG,EAAOF,EAAmC,CAC5D,CACH,CCfA,MAAMO,EAAwB,CAE3B,YAAYC,EAAc,GAAI,CAC7B,KAAK,SAAWA,EAAY,SAAWC,GAAiB,EACxD,KAAK,QAAUD,EAAY,QAAUE,GAAgB,CACzD,CAGG,aAAc,CACb,MAAO,CACL,OAAQ,KAAK,QACb,QAAS,KAAK,SACd,WAAYC,EACb,CACL,CAIG,IAAIC,EAAY,CAAA,CAGhB,aAAaC,EAAMC,EAAQ,CAC1B,OAAO,IACX,CAGG,cAAcC,EAAS,CACtB,OAAO,IACX,CAGG,UAAUC,EAAS,CAClB,OAAO,IACX,CAGG,WAAWC,EAAO,CACjB,OAAO,IACX,CAGG,aAAc,CACb,MAAO,EACX,CAGG,SACCA,EACAC,EACAC,EACA,CACA,OAAO,IACX,CASG,QAAQC,EAAO,CACd,OAAO,IACX,CASG,SAASC,EAAQ,CAChB,OAAO,IACX,CASG,gBAAgBC,EAAYC,EAAO,CAEtC,CACA,CCrFA,SAASC,GAAatB,EAAM,CAC1B,GAAI,CAAC9B,EAAa,OAElB,KAAM,CAAE,YAAAqD,EAAc,mBAAoB,GAAAC,EAAK,iBAAkB,eAAgBC,CAAY,EAAKC,EAAW1B,CAAI,EAC3G,CAAE,OAAA2B,CAAM,EAAK3B,EAAK,YAAa,EAE/B4B,EAAUC,GAAc7B,CAAI,EAC5BP,EAAWC,EAAYM,CAAI,EAC3B8B,EAAarC,IAAaO,EAE1B+B,EAAS,sBAAsBH,EAAU,UAAY,WAAW,IAAIE,EAAa,QAAU,EAAE,OAE7FE,EAAY,CAAC,OAAOR,CAAE,GAAI,SAASD,CAAW,GAAI,OAAOI,CAAM,EAAE,EAMvE,GAJIF,GACFO,EAAU,KAAK,cAAcP,CAAY,EAAE,EAGzC,CAACK,EAAY,CACf,KAAM,CAAE,GAAAN,EAAI,YAAAD,GAAgBG,EAAWjC,CAAQ,EAC/CuC,EAAU,KAAK,YAAYvC,EAAS,YAAa,EAAC,MAAM,EAAE,EACtD+B,GACFQ,EAAU,KAAK,YAAYR,CAAE,EAAE,EAE7BD,GACFS,EAAU,KAAK,qBAAqBT,CAAW,EAAE,CAEvD,CAEEpD,EAAO,IAAI,GAAG4D,CAAM;AAAA,IAClBC,EAAU,KAAK;AAAA,GAAM,CAAC,EAAE,CAC5B,CAKA,SAASC,GAAWjC,EAAM,CACxB,GAAI,CAAC9B,EAAa,OAElB,KAAM,CAAE,YAAAqD,EAAc,mBAAoB,GAAAC,EAAK,gBAAkB,EAAGE,EAAW1B,CAAI,EAC7E,CAAE,OAAA2B,CAAM,EAAK3B,EAAK,YAAa,EAE/B8B,EADWpC,EAAYM,CAAI,IACDA,EAE1BpB,EAAM,wBAAwB4C,CAAE,KAAKM,EAAa,QAAU,EAAE,SAASP,CAAW,aAAaI,CAAM,GAC3GxD,EAAO,IAAIS,CAAG,CAChB,CC3CA,SAASsD,GAAgBC,EAAY,CACnC,GAAI,OAAOA,GAAe,UACxB,OAAO,OAAOA,CAAU,EAG1B,MAAMC,EAAO,OAAOD,GAAe,SAAW,WAAWA,CAAU,EAAIA,EACvE,GAAI,OAAOC,GAAS,UAAY,MAAMA,CAAI,GAAKA,EAAO,GAAKA,EAAO,EAAG,CACnElE,GACEC,EAAO,KACL,0GAA0G,KAAK,UAC7GgE,CACV,CAAS,YAAY,KAAK,UAAU,OAAOA,CAAU,CAAC,GAC/C,EACH,MACJ,CAEE,OAAOC,CACT,CChBA,SAASC,GACPC,EACAC,EACA,CAEA,GAAI,CAACC,GAAkBF,CAAO,EAC5B,MAAO,CAAC,EAAK,EAKf,IAAIH,EACA,OAAOG,EAAQ,eAAkB,WACnCH,EAAaG,EAAQ,cAAcC,CAAe,EACzCA,EAAgB,gBAAkB,OAC3CJ,EAAaI,EAAgB,cACpB,OAAOD,EAAQ,iBAAqB,IAC7CH,EAAaG,EAAQ,iBAGrBH,EAAa,EAKf,MAAMM,EAAmBP,GAAgBC,CAAU,EAEnD,OAAIM,IAAqB,QACvBvE,GAAeC,EAAO,KAAK,kEAAkE,EACtF,CAAC,EAAK,GAIVsE,EAcgB,KAAK,OAAM,EAAKA,EAa9B,CAAC,GAAMA,CAAgB,GAT5BvE,GACEC,EAAO,IACL,oGAAoG,OAClGgE,CACD,CAAA,GACF,EACI,CAAC,GAAOM,CAAgB,IAvB/BvE,GACEC,EAAO,IACL,4CACE,OAAOmE,EAAQ,eAAkB,WAC7B,oCACA,4EACd,EACO,EACI,CAAC,GAAOG,CAAgB,EAmBnC,CCpEA,MAAMC,GAAY,kEAElB,SAASC,GAAgBC,EAAU,CACjC,OAAOA,IAAa,QAAUA,IAAa,OAC7C,CAWA,SAASC,GAAYC,EAAKC,EAAe,GAAO,CAC9C,KAAM,CAAE,KAAAC,EAAM,KAAAC,EAAM,KAAAC,EAAM,KAAAC,EAAM,UAAAC,EAAW,SAAAR,EAAU,UAAAS,CAAS,EAAKP,EACnE,MACE,GAAGF,CAAQ,MAAMS,CAAS,GAAGN,GAAgBG,EAAO,IAAIA,CAAI,GAAK,EAAE,IAC/DF,CAAI,GAAGG,EAAO,IAAIA,CAAI,GAAK,EAAE,IAAIF,GAAO,GAAGA,CAAI,GAAU,GAAGG,CAAS,EAE7E,CAQA,SAASE,GAAcC,EAAK,CAC1B,MAAMC,EAAQd,GAAU,KAAKa,CAAG,EAEhC,GAAI,CAACC,EAAO,CAEVC,GAAe,IAAM,CAEnB,QAAQ,MAAM,uBAAuBF,CAAG,EAAE,CAChD,CAAK,EACD,MACJ,CAEE,KAAM,CAACX,EAAUS,EAAWH,EAAO,GAAIF,EAAO,GAAIG,EAAO,GAAIO,EAAW,EAAE,EAAIF,EAAM,MAAM,CAAC,EAC3F,IAAIP,EAAO,GACPG,EAAYM,EAEhB,MAAMC,EAAQP,EAAU,MAAM,GAAG,EAMjC,GALIO,EAAM,OAAS,IACjBV,EAAOU,EAAM,MAAM,EAAG,EAAE,EAAE,KAAK,GAAG,EAClCP,EAAYO,EAAM,IAAK,GAGrBP,EAAW,CACb,MAAMQ,EAAeR,EAAU,MAAM,MAAM,EACvCQ,IACFR,EAAYQ,EAAa,CAAC,EAEhC,CAEE,OAAOC,GAAkB,CAAE,KAAAb,EAAM,KAAAE,EAAM,KAAAD,EAAM,UAAAG,EAAW,KAAAD,EAAM,SAAUP,EAAW,UAAAS,EAAW,CAChG,CAEA,SAASQ,GAAkBC,EAAY,CACrC,MAAO,CACL,SAAUA,EAAW,SACrB,UAAWA,EAAW,WAAa,GACnC,KAAMA,EAAW,MAAQ,GACzB,KAAMA,EAAW,KACjB,KAAMA,EAAW,MAAQ,GACzB,KAAMA,EAAW,MAAQ,GACzB,UAAWA,EAAW,SACvB,CACH,CAEA,SAASC,GAAYjB,EAAK,CACxB,GAAI,CAAC5E,GACH,MAAO,GAGT,KAAM,CAAE,KAAAiF,EAAM,UAAAC,EAAW,SAAAR,CAAU,EAAGE,EAWtC,MAT2B,CAAC,WAAY,YAAa,OAAQ,WAAW,EACjB,KAAKkB,GACrDlB,EAAIkB,CAAS,EAIX,IAHL7F,EAAO,MAAM,uBAAuB6F,CAAS,UAAU,EAChD,GAGV,EAGQ,GAGJZ,EAAU,MAAM,OAAO,EAKvBT,GAAgBC,CAAQ,EAKzBO,GAAQ,MAAM,SAASA,EAAM,EAAE,CAAC,GAClChF,EAAO,MAAM,oCAAoCgF,CAAI,EAAE,EAChD,IAGF,IATLhF,EAAO,MAAM,wCAAwCyE,CAAQ,EAAE,EACxD,KANPzE,EAAO,MAAM,yCAAyCiF,CAAS,EAAE,EAC1D,GAcX,CAMA,SAASa,GAAQC,EAAM,CACrB,MAAMJ,EAAa,OAAOI,GAAS,SAAWZ,GAAcY,CAAI,EAAIL,GAAkBK,CAAI,EAC1F,GAAI,GAACJ,GAAc,CAACC,GAAYD,CAAU,GAG1C,OAAOA,CACT,CCnHA,SAASK,GAAeC,EAASC,EAAQ,GAAI,CAC3C,MAAO,CAACD,EAASC,CAAK,CACxB,CAOA,SAASC,GAAkBC,EAAUC,EAAS,CAC5C,KAAM,CAACJ,EAASC,CAAK,EAAIE,EACzB,MAAO,CAACH,EAAS,CAAC,GAAGC,EAAOG,CAAO,CAAC,CACtC,CAQA,SAASC,GACPF,EACAG,EACA,CACA,MAAMC,EAAgBJ,EAAS,CAAC,EAEhC,UAAWK,KAAgBD,EAAe,CACxC,MAAME,EAAmBD,EAAa,CAAC,EAAE,KAGzC,GAFeF,EAASE,EAAcC,CAAgB,EAGpD,MAAO,EAEb,CAEE,MAAO,EACT,CAYA,SAASC,GAAWC,EAAO,CACzB,OAAOpG,EAAW,YAAcA,EAAW,WAAW,eAClDA,EAAW,WAAW,eAAeoG,CAAK,EAC1C,IAAI,YAAW,EAAG,OAAOA,CAAK,CACpC,CAcA,SAASC,GAAkBT,EAAU,CACnC,KAAM,CAACU,EAAYZ,CAAK,EAAIE,EAG5B,IAAIW,EAAQ,KAAK,UAAUD,CAAU,EAErC,SAASE,EAAOC,EAAM,CAChB,OAAOF,GAAU,SACnBA,EAAQ,OAAOE,GAAS,SAAWF,EAAQE,EAAO,CAACN,GAAWI,CAAK,EAAGE,CAAI,EAE1EF,EAAM,KAAK,OAAOE,GAAS,SAAWN,GAAWM,CAAI,EAAIA,CAAI,CAEnE,CAEE,UAAWC,KAAQhB,EAAO,CACxB,KAAM,CAACiB,EAAaC,CAAO,EAAIF,EAI/B,GAFAF,EAAO;AAAA,EAAK,KAAK,UAAUG,CAAW,CAAC;AAAA,CAAI,EAEvC,OAAOC,GAAY,UAAYA,aAAmB,WACpDJ,EAAOI,CAAO,MACT,CACL,IAAIC,EACJ,GAAI,CACFA,EAAqB,KAAK,UAAUD,CAAO,CAC5C,MAAW,CAIVC,EAAqB,KAAK,UAAUC,GAAUF,CAAO,CAAC,CAC9D,CACMJ,EAAOK,CAAkB,CAC/B,CACA,CAEE,OAAO,OAAON,GAAU,SAAWA,EAAQQ,GAAcR,CAAK,CAChE,CAEA,SAASQ,GAAcC,EAAS,CAC9B,MAAMC,EAAcD,EAAQ,OAAO,CAACE,EAAKC,IAAQD,EAAMC,EAAI,OAAQ,CAAC,EAE9DC,EAAS,IAAI,WAAWH,CAAW,EACzC,IAAII,EAAS,EACb,UAAWC,KAAUN,EACnBI,EAAO,IAAIE,EAAQD,CAAM,EACzBA,GAAUC,EAAO,OAGnB,OAAOF,CACT,CA0CA,SAASG,GAAuBC,EAAU,CAKxC,MAAO,CAJa,CAClB,KAAM,MACP,EAEoBA,CAAQ,CAC/B,CAKA,SAASC,GAA6BC,EAAY,CAChD,MAAMJ,EAAS,OAAOI,EAAW,MAAS,SAAWvB,GAAWuB,EAAW,IAAI,EAAIA,EAAW,KAE9F,MAAO,CACLC,GAAkB,CAChB,KAAM,aACN,OAAQL,EAAO,OACf,SAAUI,EAAW,SACrB,aAAcA,EAAW,YACzB,gBAAiBA,EAAW,cAClC,CAAK,EACDJ,CACD,CACH,CAEA,MAAMM,GAAiC,CACrC,QAAS,UACT,SAAU,UACV,WAAY,aACZ,YAAa,cACb,MAAO,QACP,cAAe,WACf,YAAa,UACb,QAAS,UACT,cAAe,UACf,aAAc,SACd,iBAAkB,SAClB,SAAU,UACV,SAAU,WACV,KAAM,OACN,OAAQ,gBACR,aAAc,UAChB,EAKA,SAASC,GAA+B3I,EAAM,CAC5C,OAAO0I,GAA+B1I,CAAI,CAC5C,CAGA,SAAS4I,GAAgCC,EAAiB,CACxD,GAAI,CAACA,GAAmB,CAACA,EAAgB,IACvC,OAEF,KAAM,CAAE,KAAAC,EAAM,QAAAC,CAAS,EAAGF,EAAgB,IAC1C,MAAO,CAAE,KAAAC,EAAM,QAAAC,CAAS,CAC1B,CAMA,SAASC,GACPC,EACAC,EACAC,EACAlE,EACA,CACA,MAAMmE,EAAyBH,EAAM,uBAAyBA,EAAM,sBAAsB,uBAC1F,MAAO,CACL,SAAUA,EAAM,SAChB,QAAS,IAAI,KAAM,EAAC,YAAa,EACjC,GAAIC,GAAW,CAAE,IAAKA,GACtB,GAAI,CAAC,CAACC,GAAUlE,GAAO,CAAE,IAAKD,GAAYC,CAAG,GAC7C,GAAImE,GAA0B,CAC5B,MAAOX,GAAkB,CAAE,GAAGW,EAAwB,CAC5D,CACG,CACH,CC5OA,SAASC,GAAwBJ,EAAOC,EAAS,CAC/C,OAAKA,IAGLD,EAAM,IAAMA,EAAM,KAAO,CAAE,EAC3BA,EAAM,IAAI,KAAOA,EAAM,IAAI,MAAQC,EAAQ,KAC3CD,EAAM,IAAI,QAAUA,EAAM,IAAI,SAAWC,EAAQ,QACjDD,EAAM,IAAI,aAAe,CAAC,GAAIA,EAAM,IAAI,cAAgB,CAAA,EAAK,GAAIC,EAAQ,cAAgB,CAAE,CAAC,EAC5FD,EAAM,IAAI,SAAW,CAAC,GAAIA,EAAM,IAAI,UAAY,CAAA,EAAK,GAAIC,EAAQ,UAAY,CAAE,CAAC,GACzED,CACT,CAGA,SAASK,GACPC,EACAtE,EACAuE,EACAL,EACA,CACA,MAAMD,EAAUN,GAAgCY,CAAQ,EAClDC,EAAkB,CACtB,QAAS,IAAI,KAAM,EAAC,YAAa,EACjC,GAAIP,GAAW,CAAE,IAAKA,GACtB,GAAI,CAAC,CAACC,GAAUlE,GAAO,CAAE,IAAKD,GAAYC,CAAG,EAC9C,EAEK8B,EACJ,eAAgBwC,EAAU,CAAC,CAAE,KAAM,UAAU,EAAIA,CAAO,EAAI,CAAC,CAAE,KAAM,SAAW,EAAEA,EAAQ,OAAM,CAAE,EAEpG,OAAOjD,GAAemD,EAAiB,CAAC1C,CAAY,CAAC,CACvD,CAKA,SAAS2C,GACPT,EACAhE,EACAuE,EACAL,EACA,CACA,MAAMD,EAAUN,GAAgCY,CAAQ,EASlDG,EAAYV,EAAM,MAAQA,EAAM,OAAS,eAAiBA,EAAM,KAAO,QAE7EI,GAAwBJ,EAAOO,GAAYA,EAAS,GAAG,EAEvD,MAAMC,EAAkBT,GAA2BC,EAAOC,EAASC,EAAQlE,CAAG,EAM9E,cAAOgE,EAAM,sBAGN3C,GAAemD,EAAiB,CADrB,CAAC,CAAE,KAAME,CAAS,EAAIV,CAAK,CACI,CAAC,CACpD,CAOA,SAASW,GAAmBC,EAAOC,EAAQ,CACzC,SAASC,EAAoBC,EAAK,CAChC,MAAO,CAAC,CAACA,EAAI,UAAY,CAAC,CAACA,EAAI,UACnC,CAKE,MAAMA,EAAMC,GAAkCJ,EAAM,CAAC,CAAC,EAEhD5E,EAAM6E,GAAUA,EAAO,OAAQ,EAC/BX,EAASW,GAAUA,EAAO,WAAY,EAAC,OAEvCvD,EAAU,CACd,QAAS,IAAI,KAAM,EAAC,YAAa,EACjC,GAAIwD,EAAoBC,CAAG,GAAK,CAAE,MAAOA,CAAG,EAC5C,GAAI,CAAC,CAACb,GAAUlE,GAAO,CAAE,IAAKD,GAAYC,CAAG,EAC9C,EAEKiF,EAAiBJ,GAAUA,EAAO,WAAY,EAAC,eAC/CK,EAAoBD,EACrB/H,GAAS,CACR,MAAMmG,EAAW4B,EAAerG,EAAW1B,CAAI,CAAG,EAClD,OAAKmG,GACH8B,GAAqB,EAEhB9B,CACf,EACOnG,GAAS0B,EAAW1B,CAAI,EAEvBqE,EAAQ,CAAE,EAChB,UAAWrE,KAAQ0H,EAAO,CACxB,MAAMvB,EAAW6B,EAAkBhI,CAAI,EACnCmG,GACF9B,EAAM,KAAK6B,GAAuBC,CAAQ,CAAC,CAEjD,CAEE,OAAOhC,GAAeC,EAASC,CAAK,CACtC,CCjHA,SAAS6D,GAAevB,EAAMwB,EAAOC,EAAM7I,EAAaC,EAAa,EAAI,CACvE,MAAMC,EAAWF,GAAcG,EAAYH,CAAU,EAEjDE,IACFvB,GAAeC,EAAO,IAAI,mDAAmDwI,CAAI,MAAMwB,CAAK,IAAIC,CAAI,EAAE,EACtG3I,EAAS,SAASkH,EAAM,CACtB,CAAC0B,EAA2C,EAAGF,EAC/C,CAACG,EAA0C,EAAGF,CACpD,CAAK,EAEL,CAKA,SAASG,GAA0BC,EAAQ,CACzC,GAAI,CAACA,GAAUA,EAAO,SAAW,EAC/B,OAGF,MAAMC,EAAe,CAAE,EACvB,OAAAD,EAAO,QAAQ1B,GAAS,CACtB,MAAM4B,EAAa5B,EAAM,YAAc,CAAE,EACnCsB,EAAOM,EAAWJ,EAA0C,EAC5DH,EAAQO,EAAWL,EAA2C,EAEhE,OAAOD,GAAS,UAAY,OAAOD,GAAU,WAC/CM,EAAa3B,EAAM,IAAI,EAAI,CAAE,MAAAqB,EAAO,KAAAC,CAAM,EAEhD,CAAG,EAEMK,CACT,CC1BA,MAAME,GAAiB,IAKvB,MAAMC,EAAY,CAmBf,YAAYtI,EAAc,GAAI,CAC7B,KAAK,SAAWA,EAAY,SAAWC,GAAiB,EACxD,KAAK,QAAUD,EAAY,QAAUE,GAAgB,EACrD,KAAK,WAAaF,EAAY,gBAAkBuI,EAAoB,EAEpE,KAAK,YAAc,CAAE,EACrB,KAAK,cAAc,CACjB,CAACC,CAAgC,EAAG,SACpC,CAACC,EAA4B,EAAGzI,EAAY,GAC5C,GAAGA,EAAY,UACrB,CAAK,EAED,KAAK,MAAQA,EAAY,KAErBA,EAAY,eACd,KAAK,cAAgBA,EAAY,cAG/B,YAAaA,IACf,KAAK,SAAWA,EAAY,SAE1BA,EAAY,eACd,KAAK,SAAWA,EAAY,cAG9B,KAAK,QAAU,CAAE,EAEjB,KAAK,kBAAoBA,EAAY,aAGjC,KAAK,UACP,KAAK,aAAc,CAEzB,CASG,QAAQY,EAAO,CACd,OAAO,IACX,CASG,SAASC,EAAQ,CAChB,OAAO,IACX,CASG,gBAAgBC,EAAYC,EAAO,CAEtC,CAGG,aAAc,CACb,KAAM,CAAE,QAASM,EAAQ,SAAUqH,EAAS,SAAUpH,CAAO,EAAK,KAClE,MAAO,CACL,OAAAD,EACA,QAAAqH,EACA,WAAYpH,EAAUqH,GAAqBxI,EAC5C,CACL,CAGG,aAAayI,EAAKf,EAAO,CACxB,OAAIA,IAAU,OAEZ,OAAO,KAAK,YAAYe,CAAG,EAE3B,KAAK,YAAYA,CAAG,EAAIf,EAGnB,IACX,CAGG,cAAcO,EAAY,CACzB,cAAO,KAAKA,CAAU,EAAE,QAAQQ,GAAO,KAAK,aAAaA,EAAKR,EAAWQ,CAAG,CAAC,CAAC,EACvE,IACX,CAUG,gBAAgBC,EAAW,CAC1B,KAAK,WAAaC,GAAuBD,CAAS,CACtD,CAKG,UAAUhB,EAAO,CAChB,YAAK,QAAUA,EACR,IACX,CAKG,WAAWxB,EAAM,CAChB,YAAK,MAAQA,EACb,KAAK,aAAa0C,EAAkC,QAAQ,EACrD,IACX,CAGG,IAAIC,EAAc,CAEb,KAAK,WAIT,KAAK,SAAWF,GAAuBE,CAAY,EACnDrH,GAAW,IAAI,EAEf,KAAK,aAAc,EACvB,CAUG,aAAc,CACb,OAAOqE,GAAkB,CACvB,KAAM,KAAK,YACX,YAAa,KAAK,MAClB,GAAI,KAAK,YAAYyC,EAA4B,EACjD,eAAgB,KAAK,cACrB,QAAS,KAAK,QACd,gBAAiB,KAAK,WACtB,OAAQQ,GAAiB,KAAK,OAAO,EACrC,UAAW,KAAK,SAChB,SAAU,KAAK,SACf,OAAQ,KAAK,YAAYT,CAAgC,EACzD,iBAAkBU,GAA4B,IAAI,EAClD,WAAY,KAAK,YAAYC,EAA6B,EAC1D,eAAgB,KAAK,YAAYC,EAAiC,EAClE,aAAcnB,GAA0B,KAAK,OAAO,EACpD,WAAa,KAAK,mBAAqB7I,EAAY,IAAI,IAAM,MAAS,OACtE,WAAY,KAAK,kBAAoBA,EAAY,IAAI,EAAE,YAAW,EAAG,OAAS,MACpF,CAAK,CACL,CAGG,aAAc,CACb,MAAO,CAAC,KAAK,UAAY,CAAC,CAAC,KAAK,QACpC,CAKG,SACCiH,EACAgD,EACAC,EACA,CACA1L,GAAeC,EAAO,IAAI,qCAAsCwI,CAAI,EAEpE,MAAMkD,EAAOC,GAAgBH,CAAqB,EAAIA,EAAwBC,GAAaf,EAAoB,EACzGH,EAAaoB,GAAgBH,CAAqB,EAAI,CAAE,EAAGA,GAAyB,CAAE,EAEtF7C,EAAQ,CACZ,KAAAH,EACA,KAAMyC,GAAuBS,CAAI,EACjC,WAAAnB,CACD,EAED,YAAK,QAAQ,KAAK5B,CAAK,EAEhB,IACX,CAUG,kBAAmB,CAClB,MAAO,CAAC,CAAC,KAAK,iBAClB,CAGG,cAAe,CACd,MAAMa,EAASoC,EAAW,EAU1B,GATIpC,GACFA,EAAO,KAAK,UAAW,IAAI,EAQzB,EAFkB,KAAK,mBAAqB,OAASjI,EAAY,IAAI,GAGvE,OAIF,GAAI,KAAK,kBAAmB,CACtB,KAAK,SACPsK,GAAiBvC,GAAmB,CAAC,IAAI,EAAGE,CAAM,CAAC,GAEnDzJ,GACEC,EAAO,IAAI,sFAAsF,EAC/FwJ,GACFA,EAAO,mBAAmB,cAAe,MAAM,GAGnD,MACN,CAEI,MAAMsC,EAAmB,KAAK,0BAA2B,EACrDA,IACY7J,GAAwB,IAAI,EAAE,OAAS8J,EAAiB,GAChE,aAAaD,CAAgB,CAEzC,CAKG,2BAA4B,CAE3B,GAAI,CAACE,GAAmBzI,EAAW,IAAI,CAAC,EACtC,OAGG,KAAK,QACRxD,GAAeC,EAAO,KAAK,qEAAqE,EAChG,KAAK,MAAQ,2BAGf,KAAM,CAAE,MAAOiM,EAAmB,eAAgBC,CAA4B,EAAGjK,GAAwB,IAAI,EAEvGuH,GADQyC,GAAqBF,EAAiB,GAC/B,UAAS,GAAMH,EAAW,EAE/C,GAAI,KAAK,WAAa,GAAM,CAE1B7L,GAAeC,EAAO,IAAI,kFAAkF,EAExGwJ,GACFA,EAAO,mBAAmB,cAAe,aAAa,EAGxD,MACN,CAKI,MAAMD,EAFgB4C,GAAmB,IAAI,EAAE,OAAOtK,GAAQA,IAAS,MAAQ,CAACuK,GAAiBvK,CAAI,CAAC,EAE1E,IAAIA,GAAQ0B,EAAW1B,CAAI,CAAC,EAAE,OAAOmK,EAAkB,EAE7EK,EAAS,KAAK,YAAYnB,CAAgC,EAIhE,OAAO,KAAK,YAAYoB,EAA0C,EAClE/C,EAAM,QAAQ1H,GAAQ,CACpBA,EAAK,MAAQ,OAAOA,EAAK,KAAKyK,EAA0C,CAC9E,CAAK,EAGD,MAAMC,EAAc,CAClB,SAAU,CACR,MAAOC,GAA8B,IAAI,CAC1C,EACD,MAGEjD,EAAM,OAASiB,GACXjB,EAAM,KAAK,CAACkD,EAAGC,IAAMD,EAAE,gBAAkBC,EAAE,eAAe,EAAE,MAAM,EAAGlC,EAAc,EACnFjB,EACN,gBAAiB,KAAK,WACtB,UAAW,KAAK,SAChB,YAAa,KAAK,MAClB,KAAM,cACN,sBAAuB,CACrB,kBAAA0C,EACA,2BAAAC,EACA,GAAG/D,GAAkB,CACnB,uBAAwBwB,GAAkC,IAAI,CACxE,CAAS,CACF,EACD,iBAAkB0B,GAA4B,IAAI,EAClD,GAAIgB,GAAU,CACZ,iBAAkB,CAChB,OAAAA,CACD,CACT,CACK,EAEK/B,EAAeF,GAA0B,KAAK,OAAO,EAG3D,OAFwBE,GAAgB,OAAO,KAAKA,CAAY,EAAE,SAGhEvK,GACEC,EAAO,IACL,0DACA,KAAK,UAAUsK,EAAc,OAAW,CAAC,CAC1C,EACHiC,EAAY,aAAejC,GAGtBiC,CACX,CACA,CAEA,SAASZ,GAAgB3B,EAAO,CAC9B,OAAQA,GAAS,OAAOA,GAAU,UAAaA,aAAiB,MAAQ,MAAM,QAAQA,CAAK,CAC7F,CAGA,SAASgC,GAAmBpF,EAAO,CACjC,MAAO,CAAC,CAACA,EAAM,iBAAmB,CAAC,CAACA,EAAM,WAAa,CAAC,CAACA,EAAM,SAAW,CAAC,CAACA,EAAM,QACpF,CAGA,SAASwF,GAAiBvK,EAAM,CAC9B,OAAOA,aAAgB4I,IAAc5I,EAAK,iBAAkB,CAC9D,CAQA,SAASgK,GAAiBzF,EAAU,CAClC,MAAMoD,EAASoC,EAAW,EAC1B,GAAI,CAACpC,EACH,OAGF,MAAMmD,EAAYvG,EAAS,CAAC,EAC5B,GAAI,CAACuG,GAAaA,EAAU,SAAW,EAAG,CACxCnD,EAAO,mBAAmB,cAAe,MAAM,EAC/C,MACJ,CAIEA,EAAO,aAAapD,CAAQ,CAC9B,CCpYA,MAAMwG,GAAuB,8BA0H7B,SAASC,GAAkB1I,EAAS,CAClC,MAAM2I,EAAMC,GAAQ,EACpB,GAAID,EAAI,kBACN,OAAOA,EAAI,kBAAkB3I,CAAO,EAGtC,MAAM6I,EAAgBC,GAAyB9I,CAAO,EAChD,CAAE,iBAAA+I,EAAkB,WAAYC,CAAkB,EAAGhJ,EAU3D,OANgBA,EAAQ,MACnBoC,GAAa6G,GAAUjJ,EAAQ,MAAOoC,CAAQ,EAC/C4G,IAAqB,OAClB5G,GAAa8G,GAAeF,EAAkB5G,CAAQ,EACtDA,GAAaA,EAAU,GAEf,IAAM,CACnB,MAAMzE,EAAQiK,EAAiB,EACzBuB,EAAaC,GAAczL,CAAK,EAItC,OAFuBqC,EAAQ,cAAgB,CAACmJ,EAGvC,IAAIpL,GAGNsL,GAAsB,CAC3B,WAAAF,EACA,cAAAN,EACA,iBAAAE,EACA,MAAApL,CACN,CAAK,CACL,CAAG,CACH,CAmCA,SAASuL,GAAexL,EAAM0E,EAAU,CACtC,MAAMuG,EAAMC,GAAQ,EACpB,OAAID,EAAI,eACCA,EAAI,eAAejL,EAAM0E,CAAQ,EAGnC6G,GAAUtL,IACf2L,GAAiB3L,EAAOD,GAAQ,MAAS,EAClC0E,EAASzE,CAAK,EACtB,CACH,CAwCA,SAAS0L,GAAsB,CAC7B,WAAAF,EACA,cAAAN,EACA,iBAAAE,EACA,MAAApL,CACF,EAEE,CACA,GAAI,CAACuC,GAAiB,EACpB,OAAO,IAAInC,GAGb,MAAMH,EAAiB2L,GAAmB,EAE1C,IAAI7L,EACJ,GAAIyL,GAAc,CAACJ,EACjBrL,EAAO8L,GAAgBL,EAAYxL,EAAOkL,CAAa,EACvDY,GAAmBN,EAAYzL,CAAI,UAC1ByL,EAAY,CAErB,MAAM5D,EAAMC,GAAkC2D,CAAU,EAClD,CAAE,QAAAzC,EAAS,OAAQvH,CAAY,EAAKgK,EAAW,YAAa,EAC5DO,EAAgBnK,GAAc4J,CAAU,EAE9CzL,EAAOiM,GACL,CACE,QAAAjD,EACA,aAAAvH,EACA,GAAG0J,CACJ,EACDlL,EACA+L,CACD,EAEDE,GAAgBlM,EAAM6H,CAAG,CAC7B,KAAS,CACL,KAAM,CACJ,QAAAmB,EACA,IAAAnB,EACA,aAAApG,EACA,QAASuK,CACf,EAAQ,CACF,GAAG9L,EAAe,sBAAuB,EACzC,GAAGD,EAAM,sBAAuB,CACjC,EAEDD,EAAOiM,GACL,CACE,QAAAjD,EACA,aAAAvH,EACA,GAAG0J,CACJ,EACDlL,EACA+L,CACD,EAEGnE,GACFqE,GAAgBlM,EAAM6H,CAAG,CAE/B,CAEE,OAAAvG,GAAatB,CAAI,EAEjBD,GAAwBC,EAAMC,EAAOC,CAAc,EAE5CF,CACT,CAOA,SAASoL,GAAyB9I,EAAS,CAEzC,MAAM6J,EAAa,CACjB,cAFU7J,EAAQ,cAAgB,CAAE,GAElB,WAClB,GAAGA,CACJ,EAED,GAAIA,EAAQ,UAAW,CACrB,MAAM8J,EAAM,CAAE,GAAGD,CAAY,EAC7B,OAAAC,EAAI,eAAiBhD,GAAuB9G,EAAQ,SAAS,EAC7D,OAAO8J,EAAI,UACJA,CACX,CAEE,OAAOD,CACT,CAEA,SAASjB,IAAS,CAChB,MAAMmB,EAAUC,GAAgB,EAChC,OAAOC,GAAwBF,CAAO,CACxC,CAEA,SAASJ,GAAed,EAAelL,EAAO+L,EAAe,CAC3D,MAAMrE,EAASoC,EAAW,EACpBzH,EAAWqF,GAAUA,EAAO,WAAY,GAAK,CAAE,EAE/C,CAAE,KAAAhB,EAAO,GAAI,WAAA+B,CAAY,EAAGyC,EAC5B,CAACvJ,EAASO,CAAU,EAAIlC,EAAM,aAAY,EAAG,sBAAsB8K,EAAoB,EACzF,CAAC,EAAK,EACN1I,GAAWC,EAAS,CAClB,KAAAqE,EACA,cAAAqF,EACA,WAAAtD,EACA,mBAAoB,CAClB,KAAA/B,EACA,cAAAqF,CACD,CACT,CAAO,EAECvM,EAAW,IAAImJ,GAAW,CAC9B,GAAGuC,EACH,WAAY,CACV,CAAC9B,CAAgC,EAAG,SACpC,GAAG8B,EAAc,UAClB,EACD,QAAAvJ,CACJ,CAAG,EACD,OAAIO,IAAe,QACjB1C,EAAS,aAAa+M,GAAuCrK,CAAU,EAGrEwF,GACFA,EAAO,KAAK,YAAalI,CAAQ,EAG5BA,CACT,CAMA,SAASqM,GAAgBL,EAAYxL,EAAOkL,EAAe,CACzD,KAAM,CAAE,OAAAxJ,EAAQ,QAAAqH,GAAYyC,EAAW,YAAa,EAC9C7J,EAAU3B,EAAM,eAAe,sBAAsB8K,EAAoB,EAAI,GAAQlJ,GAAc4J,CAAU,EAE7GgB,EAAY7K,EACd,IAAIgH,GAAW,CACb,GAAGuC,EACH,aAAcxJ,EACd,QAAAqH,EACA,QAAApH,CACD,CAAA,EACD,IAAIvB,GAAuB,CAAE,QAAA2I,EAAS,EAE1C+C,GAAmBN,EAAYgB,CAAS,EAExC,MAAM9E,EAASoC,EAAW,EAC1B,OAAIpC,IACFA,EAAO,KAAK,YAAa8E,CAAS,EAE9BtB,EAAc,cAChBxD,EAAO,KAAK,UAAW8E,CAAS,GAI7BA,CACT,CAEA,SAASf,GAAczL,EAAO,CAC5B,MAAMD,EAAO0M,GAAiBzM,CAAK,EAEnC,GAAI,CAACD,EACH,OAGF,MAAM2H,EAASoC,EAAW,EAE1B,OADgBpC,EAASA,EAAO,WAAY,EAAG,CAAE,GACrC,2BACHjI,EAAYM,CAAI,EAGlBA,CACT,CCzaA,MAAM2M,GAAmB,CACvB,YAAa,IACb,aAAc,IACd,iBAAkB,IACpB,EAEMC,GAAiC,kBACjCC,GAA6B,cAC7BC,GAA8B,eAC9BC,GAAgC,iBAMtC,SAASC,GAAcC,EAAkB3K,EAAU,GAAI,CAErD,MAAM4K,EAAa,IAAI,IAGvB,IAAIC,EAAY,GAGZC,EAGAC,EAAgBN,GAEhBO,EAAqB,CAAChL,EAAQ,kBAElC,MAAMiL,EAAgB,CAAE,EAElB,CACJ,YAAAC,EAAcb,GAAiB,YAC/B,aAAAc,EAAed,GAAiB,aAChC,iBAAAe,EAAmBf,GAAiB,iBACpC,cAAAgB,CACJ,EAAMrL,EAEEqF,EAASoC,EAAW,EAE1B,GAAI,CAACpC,GAAU,CAACnF,KACd,OAAO,IAAInC,GAGb,MAAMJ,EAAQiK,EAAiB,EACzB0D,EAAqBpO,EAAe,EACpCQ,EAAO6N,GAAeZ,CAAgB,EAI5CjN,EAAK,IAAM,IAAI,MAAMA,EAAK,IAAK,CAC7B,MAAM8N,EAAQC,EAASC,EAAM,CACvBL,GACFA,EAAc3N,CAAI,EAIpB,KAAM,CAACiO,EAAqB,GAAGC,CAAI,EAAIF,EACjCG,EAAYF,GAAuBpF,EAAoB,EACvDuF,EAAmBhF,GAAuB+E,CAAS,EAGnDzG,GAAQ4C,GAAmBtK,CAAI,EAAE,OAAOqO,IAASA,KAAUrO,CAAI,EAGrE,GAAI,CAAC0H,GAAM,OACT,OAAA4G,EAAgBF,CAAgB,EACzB,QAAQ,MAAMN,EAAQC,EAAS,CAACK,EAAkB,GAAGF,CAAI,CAAC,EAGnE,MAAMK,GAAqB7G,GACxB,IAAI1H,IAAQ0B,EAAW1B,EAAI,EAAE,SAAS,EACtC,OAAOmO,IAAa,CAAC,CAACA,EAAS,EAC5BK,GAAyBD,GAAmB,OAAS,KAAK,IAAI,GAAGA,EAAkB,EAAI,OAGvFE,GAAqB/M,EAAW1B,CAAI,EAAE,gBAOtCsJ,GAAe,KAAK,IACxBmF,GAAqBA,GAAqBhB,EAAe,IAAO,IAChE,KAAK,IAAIgB,IAAsB,KAAW,KAAK,IAAIL,EAAkBI,IAA0B,GAAQ,CAAC,CACzG,EAED,OAAAF,EAAgBhF,EAAY,EACrB,QAAQ,MAAMwE,EAAQC,EAAS,CAACzE,GAAc,GAAG4E,CAAI,CAAC,CAC9D,CACL,CAAG,EAKD,SAASQ,GAAqB,CACxBtB,IACF,aAAaA,CAAc,EAC3BA,EAAiB,OAEvB,CAKE,SAASuB,EAAoBrF,EAAc,CACzCoF,EAAoB,EACpBtB,EAAiB,WAAW,IAAM,CAC5B,CAACD,GAAaD,EAAW,OAAS,GAAKI,IACzCD,EAAgBR,GAChB7M,EAAK,IAAIsJ,CAAY,EAExB,EAAEkE,CAAW,CAClB,CAKE,SAASoB,EAAyBtF,EAAc,CAC9C8D,EAAiB,WAAW,IAAM,CAC5B,CAACD,GAAaG,IAChBD,EAAgBT,GAChB5M,EAAK,IAAIsJ,CAAY,EAExB,EAAEoE,CAAgB,CACvB,CAME,SAASmB,EAAclN,EAAQ,CAC7B+M,EAAoB,EACpBxB,EAAW,IAAIvL,EAAQ,EAAI,EAE3B,MAAM2H,EAAeT,EAAoB,EAGzC+F,EAAyBtF,EAAeoE,EAAmB,GAAI,CACnE,CAME,SAASoB,EAAanN,EAAQ,CAK5B,GAJIuL,EAAW,IAAIvL,CAAM,GACvBuL,EAAW,OAAOvL,CAAM,EAGtBuL,EAAW,OAAS,EAAG,CACzB,MAAM5D,EAAeT,EAAoB,EAGzC8F,EAAoBrF,EAAekE,EAAc,GAAI,CAC3D,CACA,CAEE,SAASc,EAAgBhF,EAAc,CACrC6D,EAAY,GACZD,EAAW,MAAO,EAElBK,EAAc,QAAQwB,GAAWA,GAAS,EAE1CnD,GAAiB3L,EAAO2N,CAAkB,EAE1C,MAAMoB,EAAWtN,EAAW1B,CAAI,EAE1B,CAAE,gBAAiBiP,CAAc,EAAKD,EAE5C,GAAI,CAACC,EACH,QAGiBD,EAAS,MAAQ,CAAE,GACtBE,EAAiD,GAC/DlP,EAAK,aAAakP,GAAmD7B,CAAa,EAGpFlP,EAAO,IAAI,wBAAwB6Q,EAAS,EAAE,YAAY,EAE1D,MAAMG,EAAa7E,GAAmBtK,CAAI,EAAE,OAAOqO,GAASA,IAAUrO,CAAI,EAE1E,IAAIoP,EAAiB,EACrBD,EAAW,QAAQ1C,GAAa,CAE1BA,EAAU,gBACZA,EAAU,UAAU,CAAE,KAAM7M,GAAmB,QAAS,YAAa,EACrE6M,EAAU,IAAInD,CAAY,EAC1BpL,GACEC,EAAO,IAAI,mDAAoD,KAAK,UAAUsO,EAAW,OAAW,CAAC,CAAC,GAG1G,MAAM4C,GAAgB3N,EAAW+K,CAAS,EACpC,CAAE,UAAW6C,GAAoB,EAAG,gBAAiBC,GAAsB,CAAC,EAAKF,GAEjFG,GAA+BD,IAAuBjG,EAGtDmG,IAA4BhC,EAAeD,GAAe,IAC1DkC,GAA8BJ,GAAoBC,IAAuBE,GAE/E,GAAIvR,EAAa,CACf,MAAMyR,GAAkB,KAAK,UAAUlD,EAAW,OAAW,CAAC,EACzD+C,GAEOE,IACVvR,EAAO,IAAI,4EAA6EwR,EAAe,EAFvGxR,EAAO,IAAI,2EAA4EwR,EAAe,CAIhH,EAEU,CAACD,IAA+B,CAACF,MACnCI,GAAwB5P,EAAMyM,CAAS,EACvC2C,IAER,CAAK,EAEGA,EAAiB,GACnBpP,EAAK,aAAa,mCAAoCoP,CAAc,CAE1E,CAEE,OAAA7B,EAAc,KACZ5F,EAAO,GAAG,YAAakI,GAAe,CAKpC,GAAI1C,GAAa0C,IAAgB7P,GAAU0B,EAAWmO,CAAW,EAAE,UACjE,OAGevF,GAAmBtK,CAAI,EAG3B,SAAS6P,CAAW,GAC/BhB,EAAcgB,EAAY,YAAa,EAAC,MAAM,CAEtD,CAAK,CACF,EAEDtC,EAAc,KACZ5F,EAAO,GAAG,UAAWmI,GAAa,CAC5B3C,GAIJ2B,EAAagB,EAAU,YAAa,EAAC,MAAM,CACjD,CAAK,CACF,EAEDvC,EAAc,KACZ5F,EAAO,GAAG,2BAA4BoI,GAAyB,CACzDA,IAA0B/P,IAC5BsN,EAAqB,GACrBqB,EAAqB,EAEjBzB,EAAW,MACb0B,EAA0B,EAGpC,CAAK,CACF,EAGItM,EAAQ,mBACXqM,EAAqB,EAGvB,WAAW,IAAM,CACVxB,IACHnN,EAAK,UAAU,CAAE,KAAMJ,GAAmB,QAAS,oBAAqB,EACxEyN,EAAgBP,GAChB9M,EAAK,IAAK,EAEb,EAAEyN,CAAY,EAERzN,CACT,CAEA,SAAS6N,GAAevL,EAAS,CAC/B,MAAMtC,EAAOgL,GAAkB1I,CAAO,EAEtC,OAAAsJ,GAAiB1B,EAAiB,EAAElK,CAAI,EAExC9B,GAAeC,EAAO,IAAI,wCAAwC,EAE3D6B,CACT,CC5SA,MAAMgQ,GAAqB,IAG3B,SAASC,GAAmBnN,EAAK,CAC/B,MAAMF,EAAWE,EAAI,SAAW,GAAGA,EAAI,QAAQ,IAAM,GAC/CK,EAAOL,EAAI,KAAO,IAAIA,EAAI,IAAI,GAAK,GACzC,MAAO,GAAGF,CAAQ,KAAKE,EAAI,IAAI,GAAGK,CAAI,GAAGL,EAAI,KAAO,IAAIA,EAAI,IAAI,GAAK,EAAE,OACzE,CAGA,SAASoN,GAAmBpN,EAAK,CAC/B,MAAO,GAAGmN,GAAmBnN,CAAG,CAAC,GAAGA,EAAI,SAAS,YACnD,CAGA,SAASqN,GAAarN,EAAKiE,EAAS,CAClC,MAAMqJ,EAAS,CACb,eAAgBJ,EACjB,EAED,OAAIlN,EAAI,YAGNsN,EAAO,WAAatN,EAAI,WAGtBiE,IACFqJ,EAAO,cAAgB,GAAGrJ,EAAQ,IAAI,IAAIA,EAAQ,OAAO,IAGpD,IAAI,gBAAgBqJ,CAAM,EAAE,SAAU,CAC/C,CAOA,SAASC,GAAsCvN,EAAKkE,EAAQD,EAAS,CACnE,OAAOC,GAAkB,GAAGkJ,GAAmBpN,CAAG,CAAC,IAAIqN,GAAarN,EAAKiE,CAAO,CAAC,EACnF,CCtCA,MAAMuJ,GAAwB,CAAE,EAUhC,SAASC,GAAiBC,EAAc,CACtC,MAAMC,EAAqB,CAAE,EAE7B,OAAAD,EAAa,QAASE,GAAoB,CACxC,KAAM,CAAE,KAAA/J,CAAI,EAAK+J,EAEXC,EAAmBF,EAAmB9J,CAAI,EAI5CgK,GAAoB,CAACA,EAAiB,mBAAqBD,EAAgB,oBAI/ED,EAAmB9J,CAAI,EAAI+J,EAC/B,CAAG,EAEM,OAAO,OAAOD,CAAkB,CACzC,CAGA,SAASG,GAAuBtO,EAAS,CACvC,MAAMuO,EAAsBvO,EAAQ,qBAAuB,CAAE,EACvDwO,EAAmBxO,EAAQ,aAGjCuO,EAAoB,QAASE,GAAgB,CAC3CA,EAAY,kBAAoB,EACpC,CAAG,EAED,IAAIP,EAEJ,GAAI,MAAM,QAAQM,CAAgB,EAChCN,EAAe,CAAC,GAAGK,EAAqB,GAAGC,CAAgB,UAClD,OAAOA,GAAqB,WAAY,CACjD,MAAME,EAA2BF,EAAiBD,CAAmB,EACrEL,EAAe,MAAM,QAAQQ,CAAwB,EAAIA,EAA2B,CAACA,CAAwB,CACjH,MACIR,EAAeK,EAGjB,MAAMI,EAAoBV,GAAiBC,CAAY,EAMjDU,EAAaD,EAAkB,UAAUF,GAAeA,EAAY,OAAS,OAAO,EAC1F,GAAIG,EAAa,GAAI,CACnB,KAAM,CAACC,CAAa,EAAIF,EAAkB,OAAOC,EAAY,CAAC,EAC9DD,EAAkB,KAAKE,CAAa,CACxC,CAEE,OAAOF,CACT,CAQA,SAASG,GAAkBzJ,EAAQ6I,EAAc,CAC/C,MAAMa,EAAmB,CAAE,EAE3B,OAAAb,EAAa,QAAQO,GAAe,CAE9BA,GACFO,GAAiB3J,EAAQoJ,EAAaM,CAAgB,CAE5D,CAAG,EAEMA,CACT,CAKA,SAASE,GAAuB5J,EAAQ6I,EAAc,CACpD,UAAWO,KAAeP,EAEpBO,GAAeA,EAAY,eAC7BA,EAAY,cAAcpJ,CAAM,CAGtC,CAGA,SAAS2J,GAAiB3J,EAAQoJ,EAAaM,EAAkB,CAC/D,GAAIA,EAAiBN,EAAY,IAAI,EAAG,CACtC7S,GAAeC,EAAO,IAAI,yDAAyD4S,EAAY,IAAI,EAAE,EACrG,MACJ,CAcE,GAbAM,EAAiBN,EAAY,IAAI,EAAIA,EAGjCT,GAAsB,QAAQS,EAAY,IAAI,IAAM,IAAM,OAAOA,EAAY,WAAc,aAC7FA,EAAY,UAAW,EACvBT,GAAsB,KAAKS,EAAY,IAAI,GAIzCA,EAAY,OAAS,OAAOA,EAAY,OAAU,YACpDA,EAAY,MAAMpJ,CAAM,EAGtB,OAAOoJ,EAAY,iBAAoB,WAAY,CACrD,MAAMrM,EAAWqM,EAAY,gBAAgB,KAAKA,CAAW,EAC7DpJ,EAAO,GAAG,kBAAmB,CAACb,EAAO0K,IAAS9M,EAASoC,EAAO0K,EAAM7J,CAAM,CAAC,CAC/E,CAEE,GAAI,OAAOoJ,EAAY,cAAiB,WAAY,CAClD,MAAMrM,EAAWqM,EAAY,aAAa,KAAKA,CAAW,EAEpDU,EAAY,OAAO,OAAO,CAAC3K,EAAO0K,IAAS9M,EAASoC,EAAO0K,EAAM7J,CAAM,EAAG,CAC9E,GAAIoJ,EAAY,IACtB,CAAK,EAEDpJ,EAAO,kBAAkB8J,CAAS,CACtC,CAEEvT,GAAeC,EAAO,IAAI,0BAA0B4S,EAAY,IAAI,EAAE,CACxE,CChIA,SAASW,GACPC,EACA7O,EACAqL,EACA,CACA,MAAMyD,EAAmB,CACvB,CAAE,KAAM,eAAiB,EACzB,CACE,UAAwBC,GAAwB,EAChD,iBAAAF,CACD,CACF,EACD,OAAOxN,GAAerB,EAAM,CAAE,IAAAA,CAAK,EAAG,CAAE,EAAE,CAAC8O,CAAgB,CAAC,CAC9D,CCpBA,MAAME,UAAoB,KAAM,CAG7B,YACEnS,EACDoS,EAAW,OACX,CACA,MAAMpS,CAAO,EAAE,KAAK,QAAUA,EAC9B,KAAK,KAAO,WAAW,UAAU,YAAY,KAI7C,OAAO,eAAe,KAAM,WAAW,SAAS,EAChD,KAAK,SAAWoS,CACpB,CACA,CCGA,MAAMC,GAAqB,8DAiC3B,MAAMC,EAAW,CAkBd,YAAY3P,EAAS,CAcpB,GAbA,KAAK,SAAWA,EAChB,KAAK,cAAgB,CAAE,EACvB,KAAK,eAAiB,EACtB,KAAK,UAAY,CAAE,EACnB,KAAK,OAAS,CAAE,EAChB,KAAK,iBAAmB,CAAE,EAEtBA,EAAQ,IACV,KAAK,KAAO2B,GAAQ3B,EAAQ,GAAG,EAE/BpE,GAAeC,EAAO,KAAK,+CAA+C,EAGxE,KAAK,KAAM,CACb,MAAMU,EAAMwR,GACV,KAAK,KACL/N,EAAQ,OACRA,EAAQ,UAAYA,EAAQ,UAAU,IAAM,MAC7C,EACD,KAAK,WAAaA,EAAQ,UAAU,CAClC,OAAQ,KAAK,SAAS,OACtB,mBAAoB,KAAK,mBAAmB,KAAK,IAAI,EACrD,GAAGA,EAAQ,iBACX,IAAAzD,CACR,CAAO,CACP,CAII,MAAMqT,EADiB,CAAC,gBAAiB,mBAAoB,eAAe,EACrC,KAAKC,GAAUA,KAAU7P,GAAWA,EAAQ6P,CAAM,GAAK,IAAS,EACnGD,GACFzO,GAAe,IAAM,CAEnB,QAAQ,KACN,mCAAmCyO,CAAe,sIACnD,CACT,CAAO,CAEP,CAKG,iBAAiBE,EAAWZ,EAAMvR,EAAO,CACxC,MAAMoS,EAAUC,GAAO,EAGvB,GAAIC,GAAwBH,CAAS,EACnClU,OAAAA,GAAeC,EAAO,IAAI6T,EAAkB,EACrCK,EAGT,MAAMG,EAAkB,CACtB,SAAUH,EACV,GAAGb,CACJ,EAED,YAAK,SACH,KAAK,mBAAmBY,EAAWI,CAAe,EAAE,KAAK1L,GACvD,KAAK,cAAcA,EAAO0L,EAAiBvS,CAAK,CACjD,CACF,EAEMuS,EAAgB,QAC3B,CAKG,eACC7S,EACA8S,EACAjB,EACAkB,EACA,CACA,MAAMF,EAAkB,CACtB,SAAUF,GAAO,EACjB,GAAGd,CACJ,EAEKmB,EAAeC,GAAsBjT,CAAO,EAAIA,EAAU,OAAOA,CAAO,EAExEkT,EAAgBC,GAAYnT,CAAO,EACrC,KAAK,iBAAiBgT,EAAcF,EAAOD,CAAe,EAC1D,KAAK,mBAAmB7S,EAAS6S,CAAe,EAEpD,YAAK,SAASK,EAAc,KAAK/L,GAAS,KAAK,cAAcA,EAAO0L,EAAiBE,CAAY,CAAC,CAAC,EAE5FF,EAAgB,QAC3B,CAKG,aAAa1L,EAAO0K,EAAMkB,EAAc,CACvC,MAAML,EAAUC,GAAO,EAGvB,GAAId,GAAQA,EAAK,mBAAqBe,GAAwBf,EAAK,iBAAiB,EAClFtT,OAAAA,GAAeC,EAAO,IAAI6T,EAAkB,EACrCK,EAGT,MAAMG,EAAkB,CACtB,SAAUH,EACV,GAAGb,CACJ,EAGKpH,GADwBtD,EAAM,uBAAyB,CAAE,GACf,kBAEhD,YAAK,SAAS,KAAK,cAAcA,EAAO0L,EAAiBpI,GAAqBsI,CAAY,CAAC,EAEpFF,EAAgB,QAC3B,CAKG,eAAepL,EAAS,CACjB,OAAOA,EAAQ,SAAY,SAC/BlJ,GAAeC,EAAO,KAAK,4DAA4D,GAEvF,KAAK,YAAYiJ,CAAO,EAExB2L,GAAc3L,EAAS,CAAE,KAAM,EAAK,CAAE,EAE5C,CAKG,QAAS,CACR,OAAO,KAAK,IAChB,CAKG,YAAa,CACZ,OAAO,KAAK,QAChB,CAOG,gBAAiB,CAChB,OAAO,KAAK,SAAS,SACzB,CAKG,cAAe,CACd,OAAO,KAAK,UAChB,CAKG,MAAM4L,EAAS,CACd,MAAMC,EAAY,KAAK,WACvB,OAAIA,GACF,KAAK,KAAK,OAAO,EACV,KAAK,wBAAwBD,CAAO,EAAE,KAAKE,GACzCD,EAAU,MAAMD,CAAO,EAAE,KAAKG,GAAoBD,GAAkBC,CAAgB,CAC5F,GAEMC,GAAoB,EAAI,CAErC,CAKG,MAAMJ,EAAS,CACd,OAAO,KAAK,MAAMA,CAAO,EAAE,KAAKK,IAC9B,KAAK,aAAa,QAAU,GAC5B,KAAK,KAAK,OAAO,EACVA,EACR,CACL,CAGG,oBAAqB,CACpB,OAAO,KAAK,gBAChB,CAGG,kBAAkBC,EAAgB,CACjC,KAAK,iBAAiB,KAAKA,CAAc,CAC7C,CAGG,MAAO,EAEJ,KAAK,WAAY,GAMjB,KAAK,SAAS,aAAa,KAAK,CAAC,CAAE,KAAA3M,KAAWA,EAAK,WAAW,WAAW,CAAC,IAE1E,KAAK,mBAAoB,CAE/B,CAOG,qBAAqB4M,EAAiB,CACrC,OAAO,KAAK,cAAcA,CAAe,CAC7C,CAKG,eAAexC,EAAa,CAC3B,MAAMyC,EAAqB,KAAK,cAAczC,EAAY,IAAI,EAG9DO,GAAiB,KAAMP,EAAa,KAAK,aAAa,EAEjDyC,GACHjC,GAAuB,KAAM,CAACR,CAAW,CAAC,CAEhD,CAKG,UAAUjK,EAAO0K,EAAO,GAAI,CAC3B,KAAK,KAAK,kBAAmB1K,EAAO0K,CAAI,EAExC,IAAIiC,EAAMlM,GAAoBT,EAAO,KAAK,KAAM,KAAK,SAAS,UAAW,KAAK,SAAS,MAAM,EAE7F,UAAWT,KAAcmL,EAAK,aAAe,CAAA,EAC3CiC,EAAMnP,GAAkBmP,EAAKrN,GAA6BC,CAAU,CAAC,EAGvE,MAAMqN,EAAU,KAAK,aAAaD,CAAG,EACjCC,GACFA,EAAQ,KAAKC,GAAgB,KAAK,KAAK,iBAAkB7M,EAAO6M,CAAY,EAAG,IAAI,CAEzF,CAKG,YAAYvM,EAAS,CACpB,MAAMqM,EAAMtM,GAAsBC,EAAS,KAAK,KAAM,KAAK,SAAS,UAAW,KAAK,SAAS,MAAM,EAInG,KAAK,aAAaqM,CAAG,CACzB,CAKG,mBAAmBG,EAAQC,EAAUC,EAAc,CAClD,GAAI,KAAK,SAAS,kBAAmB,CAGnC,MAAMC,EAAQ,OAAOD,GAAiB,SAAWA,EAAe,EAQ1D5K,EAAM,GAAG0K,CAAM,IAAIC,CAAQ,GACjC3V,GAAeC,EAAO,IAAI,uBAAuB+K,CAAG,IAAI6K,EAAQ,EAAI,KAAKA,CAAK,UAAY,EAAE,EAAE,EAC9F,KAAK,UAAU7K,CAAG,GAAK,KAAK,UAAUA,CAAG,GAAK,GAAK6K,CACzD,CACA,CAQG,GAAGC,EAAMtP,EAAU,CAClB,MAAMuP,EAAS,KAAK,OAAOD,CAAI,EAAI,KAAK,OAAOA,CAAI,GAAK,GAGxD,OAAAC,EAAM,KAAKvP,CAAQ,EAMZ,IAAM,CAEX,MAAMwP,EAAUD,EAAM,QAAQvP,CAAQ,EAClCwP,EAAU,IACZD,EAAM,OAAOC,EAAS,CAAC,CAE1B,CACL,CAKG,KAAKF,KAAS9F,EAAM,CACnB,MAAMiG,EAAY,KAAK,OAAOH,CAAI,EAC9BG,GACFA,EAAU,QAAQzP,GAAYA,EAAS,GAAGwJ,CAAI,CAAC,CAErD,CAKG,aAAa3J,EAAU,CAGtB,OAFA,KAAK,KAAK,iBAAkBA,CAAQ,EAEhC,KAAK,cAAgB,KAAK,WACrB,KAAK,WAAW,KAAKA,CAAQ,EAAE,KAAK,KAAMqP,IAC/C1V,GAAeC,EAAO,MAAM,gCAAiCyV,CAAM,EAC5DA,EACR,GAGH1V,GAAeC,EAAO,MAAM,oBAAoB,EAEzCiV,GAAoB,CAAA,CAAE,EACjC,CAKG,oBAAqB,CACpB,KAAM,CAAE,aAAA5C,GAAiB,KAAK,SAC9B,KAAK,cAAgBY,GAAkB,KAAMZ,CAAY,EACzDe,GAAuB,KAAMf,CAAY,CAC7C,CAGG,wBAAwBpJ,EAASN,EAAO,CACvC,IAAIsN,EAAU,GACVC,EAAU,GACd,MAAMC,EAAaxN,EAAM,WAAaA,EAAM,UAAU,OAEtD,GAAIwN,EAAY,CACdD,EAAU,GAEV,UAAWE,KAAMD,EAAY,CAC3B,MAAME,EAAYD,EAAG,UACrB,GAAIC,GAAaA,EAAU,UAAY,GAAO,CAC5CJ,EAAU,GACV,KACV,CACA,CACA,CAKI,MAAMK,EAAqBrN,EAAQ,SAAW,MACjBqN,GAAsBrN,EAAQ,SAAW,GAAOqN,GAAsBL,KAGjGrB,GAAc3L,EAAS,CACrB,GAAIgN,GAAW,CAAE,OAAQ,WACzB,OAAQhN,EAAQ,QAAU,OAAOiN,GAAWD,CAAO,CAC3D,CAAO,EACD,KAAK,eAAehN,CAAO,EAEjC,CAYG,wBAAwB4L,EAAS,CAChC,OAAO,IAAI0B,GAAYC,GAAW,CAChC,IAAIC,EAAS,EACb,MAAMC,EAAO,EAEPC,EAAW,YAAY,IAAM,CAC7B,KAAK,gBAAkB,GACzB,cAAcA,CAAQ,EACtBH,EAAQ,EAAI,IAEZC,GAAUC,EACN7B,GAAW4B,GAAU5B,IACvB,cAAc8B,CAAQ,EACtBH,EAAQ,EAAK,GAGlB,EAAEE,CAAI,CACb,CAAK,CACL,CAGG,YAAa,CACZ,OAAO,KAAK,aAAa,UAAY,IAAS,KAAK,aAAe,MACtE,CAgBG,cACC/N,EACA0K,EACAkB,EAAexI,EAAiB,EAChChK,EAAiB2L,GAAmB,EACpC,CACA,MAAMvJ,EAAU,KAAK,WAAY,EAC3BkO,EAAe,OAAO,KAAK,KAAK,aAAa,EACnD,MAAI,CAACgB,EAAK,cAAgBhB,EAAa,OAAS,IAC9CgB,EAAK,aAAehB,GAGtB,KAAK,KAAK,kBAAmB1J,EAAO0K,CAAI,EAEnC1K,EAAM,MACT5G,EAAe,eAAe4G,EAAM,UAAY0K,EAAK,QAAQ,EAGxDuD,GAAazS,EAASwE,EAAO0K,EAAMkB,EAAc,KAAMxS,CAAc,EAAE,KAAK8U,GAAO,CACxF,GAAIA,IAAQ,KACV,OAAOA,EAGTA,EAAI,SAAW,CACb,MAAOC,GAAyBvC,CAAY,EAC5C,GAAGsC,EAAI,QACR,EAED,MAAM/N,EAAyBiO,GAAmC,KAAMxC,CAAY,EAEpF,OAAAsC,EAAI,sBAAwB,CAC1B,uBAAA/N,EACA,GAAG+N,EAAI,qBACR,EAEMA,CACb,CAAK,CACL,CAQG,cAAclO,EAAO0K,EAAO,CAAA,EAAIvR,EAAO,CACtC,OAAO,KAAK,cAAc6G,EAAO0K,EAAMvR,CAAK,EAAE,KAC5CkV,GACSA,EAAW,SAEpBvB,GAAU,CACR,GAAI1V,EAAa,CAGf,MAAMkX,EAAcxB,EAChBwB,EAAY,WAAa,MAC3BjX,EAAO,IAAIiX,EAAY,OAAO,EAE9BjX,EAAO,KAAKiX,CAAW,CAEnC,CAEO,CACF,CACL,CAeG,cAActO,EAAO0K,EAAMkB,EAAc,CACxC,MAAMpQ,EAAU,KAAK,WAAY,EAC3B,CAAE,WAAAH,CAAU,EAAKG,EAEjB+S,EAAgBC,GAAmBxO,CAAK,EACxCyO,EAAUC,GAAa1O,CAAK,EAC5BU,EAAYV,EAAM,MAAQ,QAC1B2O,EAAkB,0BAA0BjO,CAAS,KAKrD/E,EAAmB,OAAON,EAAe,IAAc,OAAYD,GAAgBC,CAAU,EACnG,GAAIoT,GAAW,OAAO9S,GAAqB,UAAY,KAAK,OAAQ,EAAGA,EACrE,YAAK,mBAAmB,cAAe,QAASqE,CAAK,EAC9C4O,GACL,IAAI5D,EACF,oFAAoF3P,CAAU,IAC9F,KACD,CACF,EAGH,MAAMwT,EAAenO,IAAc,eAAiB,SAAWA,EAGzD6C,GADwBvD,EAAM,uBAAyB,CAAE,GACN,2BAEzD,OAAO,KAAK,cAAcA,EAAO0K,EAAMkB,EAAcrI,CAA0B,EAC5E,KAAKuL,GAAY,CAChB,GAAIA,IAAa,KACf,WAAK,mBAAmB,kBAAmBD,EAAc7O,CAAK,EACxD,IAAIgL,EAAY,2DAA4D,KAAK,EAIzF,GAD4BN,EAAK,MAASA,EAAK,KAAO,aAAe,GAEnE,OAAOoE,EAGT,MAAMvC,EAASwC,GAAkB,KAAMvT,EAASsT,EAAUpE,CAAI,EAC9D,OAAOsE,GAA0BzC,EAAQoC,CAAe,CACzD,CAAA,EACA,KAAKM,GAAkB,CACtB,GAAIA,IAAmB,KAAM,CAE3B,GADA,KAAK,mBAAmB,cAAeJ,EAAc7O,CAAK,EACtDuO,EAAe,CAGjB,MAAMW,EAAY,GAFJlP,EAAM,OAAS,CAAE,GAEH,OAC5B,KAAK,mBAAmB,cAAe,OAAQkP,CAAS,CACpE,CACU,MAAM,IAAIlE,EAAY,GAAG2D,CAAe,2CAA4C,KAAK,CACnG,CAEQ,MAAMrO,EAAUsL,GAAgBA,EAAa,WAAY,EAKzD,GAJI,CAAC2C,GAAiBjO,GACpB,KAAK,wBAAwBA,EAAS2O,CAAc,EAGlDV,EAAe,CACjB,MAAMY,EACHF,EAAe,uBAAyBA,EAAe,sBAAsB,2BAC9E,EACIG,EAAiBH,EAAe,MAAQA,EAAe,MAAM,OAAS,EAEtEI,EAAmBF,EAAkBC,EACvCC,EAAmB,GACrB,KAAK,mBAAmB,cAAe,OAAQA,CAAgB,CAE3E,CAKQ,MAAMC,EAAkBL,EAAe,iBACvC,GAAIV,GAAiBe,GAAmBL,EAAe,cAAgBjP,EAAM,YAAa,CACxF,MAAM0D,EAAS,SACfuL,EAAe,iBAAmB,CAChC,GAAGK,EACH,OAAA5L,CACD,CACX,CAEQ,YAAK,UAAUuL,EAAgBvE,CAAI,EAC5BuE,CACR,CAAA,EACA,KAAK,KAAMnC,GAAU,CACpB,MAAIA,aAAkB9B,EACd8B,GAGR,KAAK,iBAAiBA,EAAQ,CAC5B,KAAM,CACJ,WAAY,EACb,EACD,kBAAmBA,CAC7B,CAAS,EACK,IAAI9B,EACR;AAAA,UAA8H8B,CAAM,EACrI,EACT,CAAO,CACP,CAKG,SAASF,EAAS,CACjB,KAAK,iBACAA,EAAQ,KACXvL,IACE,KAAK,iBACEA,GAETyL,IACE,KAAK,iBACEA,EAEV,CACL,CAKG,gBAAiB,CAChB,MAAMyC,EAAW,KAAK,UACtB,YAAK,UAAY,CAAE,EACZ,OAAO,QAAQA,CAAQ,EAAE,IAAI,CAAC,CAACnN,EAAKoN,CAAQ,IAAM,CACvD,KAAM,CAAC1C,EAAQC,CAAQ,EAAI3K,EAAI,MAAM,GAAG,EACxC,MAAO,CACL,OAAA0K,EACA,SAAAC,EACA,SAAAyC,CACD,CACP,CAAK,CACL,CAKG,gBAAiB,CAChBpY,GAAeC,EAAO,IAAI,sBAAsB,EAEhD,MAAMkY,EAAW,KAAK,eAAgB,EAEtC,GAAIA,EAAS,SAAW,EAAG,CACzBnY,GAAeC,EAAO,IAAI,qBAAqB,EAC/C,MACN,CAGI,GAAI,CAAC,KAAK,KAAM,CACdD,GAAeC,EAAO,IAAI,yCAAyC,EACnE,MACN,CAEID,GAAeC,EAAO,IAAI,oBAAqBkY,CAAQ,EAEvD,MAAM9R,EAAWmN,GAA2B2E,EAAU,KAAK,SAAS,QAAUxT,GAAY,KAAK,IAAI,CAAC,EAIpG,KAAK,aAAa0B,CAAQ,CAC9B,CAMA,CAKA,SAASuR,GACPS,EACAd,EACA,CACA,MAAMe,EAAoB,GAAGf,CAAe,0CAC5C,GAAIgB,GAAWF,CAAgB,EAC7B,OAAOA,EAAiB,KACtBzP,GAAS,CACP,GAAI,CAAC4P,GAAc5P,CAAK,GAAKA,IAAU,KACrC,MAAM,IAAIgL,EAAY0E,CAAiB,EAEzC,OAAO1P,CACR,EACD7I,GAAK,CACH,MAAM,IAAI6T,EAAY,GAAG2D,CAAe,kBAAkBxX,CAAC,EAAE,CAC9D,CACF,EACI,GAAI,CAACyY,GAAcH,CAAgB,GAAKA,IAAqB,KAClE,MAAM,IAAIzE,EAAY0E,CAAiB,EAEzC,OAAOD,CACT,CAKA,SAASV,GACPlO,EACArF,EACAwE,EACA0K,EACA,CACA,KAAM,CAAE,WAAAmF,EAAY,sBAAAC,EAAuB,eAAA7O,CAAgB,EAAGzF,EAE9D,GAAIkT,GAAa1O,CAAK,GAAK6P,EACzB,OAAOA,EAAW7P,EAAO0K,CAAI,EAG/B,GAAI8D,GAAmBxO,CAAK,EAAG,CAC7B,GAAIA,EAAM,OAASiB,EAAgB,CACjC,MAAM8O,EAAiB,CAAE,EACzB,UAAW7W,KAAQ8G,EAAM,MAAO,CAC9B,MAAMgQ,EAAgB/O,EAAe/H,CAAI,EACrC8W,EACFD,EAAe,KAAKC,CAAa,GAEjC7O,GAAqB,EACrBN,EAAO,mBAAmB,cAAe,MAAM,EAEzD,CACMb,EAAM,MAAQ+P,CACpB,CAEI,GAAID,EAAuB,CACzB,GAAI9P,EAAM,MAAO,CAGf,MAAMmP,EAAkBnP,EAAM,MAAM,OACpCA,EAAM,sBAAwB,CAC5B,GAAGA,EAAM,sBACT,0BAA2BmP,CAC5B,CACT,CACM,OAAOW,EAAsB9P,EAAO0K,CAAI,CAC9C,CACA,CAEE,OAAO1K,CACT,CAEA,SAAS0O,GAAa1O,EAAO,CAC3B,OAAOA,EAAM,OAAS,MACxB,CAEA,SAASwO,GAAmBxO,EAAO,CACjC,OAAOA,EAAM,OAAS,aACxB,CC9yBA,SAASiQ,GACPC,EACA1U,EACA,CACIA,EAAQ,QAAU,KAChBpE,EACFC,EAAO,OAAQ,EAGfsF,GAAe,IAAM,CAEnB,QAAQ,KAAK,8EAA8E,CACnG,CAAO,GAGSyG,EAAiB,EACzB,OAAO5H,EAAQ,YAAY,EAEjC,MAAMqF,EAAS,IAAIqP,EAAY1U,CAAO,EACtC,OAAA2U,GAAiBtP,CAAM,EACvBA,EAAO,KAAM,EACNA,CACT,CAKA,SAASsP,GAAiBtP,EAAQ,CAChCuC,EAAiB,EAAC,UAAUvC,CAAM,CACpC,CCnCA,SAASuP,GAAkBC,EAAO,CAChC,MAAMlR,EAAS,CAAE,EAEjB,SAASmR,GAAU,CACjB,OAAOD,IAAU,QAAalR,EAAO,OAASkR,CAClD,CAQE,SAASE,EAAOC,EAAM,CACpB,OAAOrR,EAAO,OAAOA,EAAO,QAAQqR,CAAI,EAAG,CAAC,EAAE,CAAC,GAAK,QAAQ,QAAQ,MAAS,CACjF,CAYE,SAASC,EAAIC,EAAc,CACzB,GAAI,CAACJ,EAAO,EACV,OAAO1B,GAAoB,IAAI5D,EAAY,sDAAsD,CAAC,EAIpG,MAAMwF,EAAOE,EAAc,EAC3B,OAAIvR,EAAO,QAAQqR,CAAI,IAAM,IAC3BrR,EAAO,KAAKqR,CAAI,EAEbA,EACF,KAAK,IAAMD,EAAOC,CAAI,CAAC,EAIvB,KAAK,KAAM,IACVD,EAAOC,CAAI,EAAE,KAAK,KAAM,IAAM,CAEtC,CAAS,CACF,EACIA,CACX,CAWE,SAASG,EAAMzE,EAAS,CACtB,OAAO,IAAI0B,GAAY,CAACC,EAAS+C,IAAW,CAC1C,IAAIC,EAAU1R,EAAO,OAErB,GAAI,CAAC0R,EACH,OAAOhD,EAAQ,EAAI,EAIrB,MAAMiD,EAAqB,WAAW,IAAM,CACtC5E,GAAWA,EAAU,GACvB2B,EAAQ,EAAK,CAEhB,EAAE3B,CAAO,EAGV/M,EAAO,QAAQZ,GAAQ,CAChB+N,GAAoB/N,CAAI,EAAE,KAAK,IAAM,CACnC,EAAEsS,IACL,aAAaC,CAAkB,EAC/BjD,EAAQ,EAAI,EAEf,EAAE+C,CAAM,CACjB,CAAO,CACP,CAAK,CACL,CAEE,MAAO,CACL,EAAGzR,EACH,IAAAsR,EACA,MAAAE,CACD,CACH,CChGA,MAAMI,GAAsB,GAAK,IAQjC,SAASC,GAAsB/V,EAAQgW,EAAM,KAAK,IAAG,EAAI,CACvD,MAAMC,EAAc,SAAS,GAAGjW,CAAM,GAAI,EAAE,EAC5C,GAAI,CAAC,MAAMiW,CAAW,EACpB,OAAOA,EAAc,IAGvB,MAAMC,EAAa,KAAK,MAAM,GAAGlW,CAAM,EAAE,EACzC,OAAK,MAAMkW,CAAU,EAIdJ,GAHEI,EAAaF,CAIxB,CASA,SAASG,GAAcC,EAAQxC,EAAc,CAC3C,OAAOwC,EAAOxC,CAAY,GAAKwC,EAAO,KAAO,CAC/C,CAKA,SAASC,GAAcD,EAAQxC,EAAcoC,EAAM,KAAK,IAAG,EAAI,CAC7D,OAAOG,GAAcC,EAAQxC,CAAY,EAAIoC,CAC/C,CAOA,SAASM,GACPF,EACA,CAAE,WAAAG,EAAY,QAAAlU,CAAS,EACvB2T,EAAM,KAAK,IAAK,EAChB,CACA,MAAMQ,EAAoB,CACxB,GAAGJ,CACJ,EAIKK,EAAkBpU,GAAWA,EAAQ,sBAAsB,EAC3DqU,EAAmBrU,GAAWA,EAAQ,aAAa,EAEzD,GAAIoU,EAeF,UAAWrB,KAASqB,EAAgB,KAAI,EAAG,MAAM,GAAG,EAAG,CACrD,KAAM,CAACE,EAAYC,IAAgBC,CAAU,EAAIzB,EAAM,MAAM,IAAK,CAAC,EAC7Da,EAAc,SAASU,EAAY,EAAE,EACrCG,GAAU,MAAMb,CAAW,EAAkB,GAAdA,GAAoB,IACzD,GAAI,CAACW,EACHJ,EAAkB,IAAMR,EAAMc,MAE9B,WAAWhF,KAAY8E,EAAW,MAAM,GAAG,EACrC9E,IAAa,iBAEX,CAAC+E,GAAcA,EAAW,MAAM,GAAG,EAAE,SAAS,QAAQ,KACxDL,EAAkB1E,CAAQ,EAAIkE,EAAMc,GAGtCN,EAAkB1E,CAAQ,EAAIkE,EAAMc,CAIhD,MACaJ,EACTF,EAAkB,IAAMR,EAAMD,GAAsBW,EAAkBV,CAAG,EAChEO,IAAe,MACxBC,EAAkB,IAAMR,EAAM,GAAK,KAGrC,OAAOQ,CACT,CC9FA,MAAMO,GAAgC,GAQtC,SAASC,GACPzW,EACA0W,EACA/S,EAASiR,GACP5U,EAAQ,YAAcwW,EACvB,EACD,CACA,IAAIG,EAAa,CAAE,EACnB,MAAMC,EAASlG,GAAY/M,EAAO,MAAM+M,CAAO,EAE/C,SAASmG,EAAK5U,EAAU,CACtB,MAAM6U,EAAwB,CAAE,EAchC,GAXA3U,GAAoBF,EAAU,CAACc,EAAMxH,IAAS,CAC5C,MAAM8X,EAAenP,GAA+B3I,CAAI,EACxD,GAAIua,GAAca,EAAYtD,CAAY,EAAG,CAC3C,MAAM7O,EAAQuS,GAAwBhU,EAAMxH,CAAI,EAChDyE,EAAQ,mBAAmB,oBAAqBqT,EAAc7O,CAAK,CAC3E,MACQsS,EAAsB,KAAK/T,CAAI,CAEvC,CAAK,EAGG+T,EAAsB,SAAW,EACnC,OAAOhG,GAAoB,CAAA,CAAE,EAG/B,MAAMkG,EAAmBnV,GAAeI,EAAS,CAAC,EAAG6U,CAAuB,EAGtEG,EAAsB3F,GAAW,CACrCnP,GAAoB6U,EAAkB,CAACjU,EAAMxH,IAAS,CACpD,MAAMiJ,EAAQuS,GAAwBhU,EAAMxH,CAAI,EAChDyE,EAAQ,mBAAmBsR,EAAQpN,GAA+B3I,CAAI,EAAGiJ,CAAK,CACtF,CAAO,CACF,EAEK0S,EAAc,IAClBR,EAAY,CAAE,KAAMhU,GAAkBsU,CAAgB,CAAC,CAAE,EAAE,KACzDG,IAEMA,EAAS,aAAe,SAAcA,EAAS,WAAa,KAAOA,EAAS,YAAc,MAC5Fvb,GAAeC,EAAO,KAAK,qCAAqCsb,EAAS,UAAU,iBAAiB,EAGtGR,EAAaZ,GAAiBY,EAAYQ,CAAQ,EAC3CA,GAETza,GAAS,CACP,MAAAua,EAAmB,eAAe,EAC5Bva,CACP,CACF,EAEH,OAAOiH,EAAO,IAAIuT,CAAW,EAAE,KAC7BnG,GAAUA,EACVrU,GAAS,CACP,GAAIA,aAAiB8S,EACnB5T,OAAAA,GAAeC,EAAO,MAAM,+CAA+C,EAC3Eob,EAAmB,gBAAgB,EAC5BnG,GAAoB,CAAA,CAAE,EAE7B,MAAMpU,CAET,CACF,CACL,CAEE,MAAO,CACL,KAAAma,EACA,MAAAD,CACD,CACH,CAEA,SAASG,GAAwBhU,EAAMxH,EAAM,CAC3C,GAAI,EAAAA,IAAS,SAAWA,IAAS,eAIjC,OAAO,MAAM,QAAQwH,CAAI,EAAKA,EAAO,CAAC,EAAI,MAC5C,CC7FA,SAASqU,GAAmB7a,EAAK8I,EAAQ,CACvC,MAAM7E,EAAM6E,GAAUA,EAAO,OAAQ,EAC/BX,EAASW,GAAUA,EAAO,WAAY,EAAC,OAC7C,OAAOgS,GAAS9a,EAAKiE,CAAG,GAAK8W,GAAY/a,EAAKmI,CAAM,CACtD,CAEA,SAAS4S,GAAY/a,EAAKmI,EAAQ,CAChC,OAAKA,EAIE6S,GAAoBhb,CAAG,IAAMgb,GAAoB7S,CAAM,EAHrD,EAIX,CAEA,SAAS2S,GAAS9a,EAAKiE,EAAK,CAC1B,OAAOA,EAAMjE,EAAI,SAASiE,EAAI,IAAI,EAAI,EACxC,CAEA,SAAS+W,GAAoBtW,EAAK,CAChC,OAAOA,EAAIA,EAAI,OAAS,CAAC,IAAM,IAAMA,EAAI,MAAM,EAAG,EAAE,EAAIA,CAC1D,CCVA,SAASuW,GAAiBxX,EAASqE,EAAMoT,EAAQ,CAACpT,CAAI,EAAG6D,EAAS,MAAO,CACvE,MAAMnD,EAAW/E,EAAQ,WAAa,CAAE,EAEnC+E,EAAS,MACZA,EAAS,IAAM,CACb,KAAM,qBAAqBV,CAAI,GAC/B,SAAUoT,EAAM,IAAIpT,IAAS,CAC3B,KAAM,GAAG6D,CAAM,YAAY7D,CAAI,GAC/B,QAASqT,EACjB,EAAQ,EACF,QAASA,EACV,GAGH1X,EAAQ,UAAY+E,CACtB,CCJA,SAAS4S,GAAa3X,EAAU,GAAI,CAClC,MAAMqF,EAASoC,EAAW,EAC1B,GAAI,CAACmQ,MAAe,CAACvS,EACnB,MAAO,CAAE,EAGX,MAAM0E,EAAUC,GAAgB,EAC1BrB,EAAMsB,GAAwBF,CAAO,EAC3C,GAAIpB,EAAI,aACN,OAAOA,EAAI,aAAa3I,CAAO,EAGjC,MAAMrC,EAAQiK,EAAiB,EACzBlK,EAAOsC,EAAQ,MAAQ9C,EAAe,EACtC2a,EAAcna,EAAOoa,GAAkBpa,CAAI,EAAIqa,GAAmBpa,CAAK,EACvE4H,EAAM7H,EAAO8H,GAAkC9H,CAAI,EAAIkV,GAAmCvN,EAAQ1H,CAAK,EACvGqa,EAAUC,GAA4C1S,CAAG,EAG/D,OADiC2S,GAAmB,KAAKL,CAAW,EAM7D,CACL,eAAgBA,EAChB,QAAAG,CACD,GAPCnc,EAAO,KAAK,uDAAuD,EAC5D,CAAE,EAOb,CAKA,SAASkc,GAAmBpa,EAAO,CAGjC,KAAM,CAAE,QAAA+I,EAAS,QAAApH,EAAS,OAAAD,CAAM,EAAK1B,EAAM,sBAAuB,EAClE,OAAOwa,GAA0BzR,EAASrH,EAAQC,CAAO,CAC3D,CCxDA,MAAM8Y,GAAsB,IAQ5B,SAASC,GAAcC,EAAYpJ,EAAM,CACvC,MAAM7J,EAASoC,EAAW,EACpB7J,EAAiB2L,GAAmB,EAE1C,GAAI,CAAClE,EAAQ,OAEb,KAAM,CAAE,iBAAAkT,EAAmB,KAAM,eAAAC,EAAiBJ,EAAqB,EAAG/S,EAAO,WAAY,EAE7F,GAAImT,GAAkB,EAAG,OAGzB,MAAMC,EAAmB,CAAE,UADTlJ,GAAwB,EACJ,GAAG+I,CAAY,EAC/CI,EAAkBH,EACnBpX,GAAe,IAAMoX,EAAiBE,EAAkBvJ,CAAI,CAAC,EAC9DuJ,EAEAC,IAAoB,OAEpBrT,EAAO,MACTA,EAAO,KAAK,sBAAuBqT,EAAiBxJ,CAAI,EAG1DtR,EAAe,cAAc8a,EAAiBF,CAAc,EAC9D,CCnCA,IAAIG,GAEJ,MAAMC,GAAmB,mBAEnBC,GAAgB,IAAI,QAEpBC,GAAgC,KAC7B,CACL,KAAMF,GACN,WAAY,CAEVD,GAA2B,SAAS,UAAU,SAI9C,GAAI,CACF,SAAS,UAAU,SAAW,YAAcjN,EAAM,CAChD,MAAMqN,EAAmBC,GAAoB,IAAI,EAC3CC,EACJJ,GAAc,IAAIpR,EAAW,CAAA,GAAMsR,IAAqB,OAAYA,EAAmB,KACzF,OAAOJ,GAAyB,MAAMM,EAASvN,CAAI,CACpD,CACF,MAAW,CAElB,CACK,EACD,MAAMrG,EAAQ,CACZwT,GAAc,IAAIxT,EAAQ,EAAI,CAC/B,CACF,GAcG6T,GAAgDJ,GCvChDK,GAAwB,CAC5B,oBACA,gDACA,kEACA,wCACA,gDACA,oDACA,gHACA,gDACA,+HACF,EAIMP,GAAmB,iBACnBQ,GAA8B,CAACpZ,EAAU,MACtC,CACL,KAAM4Y,GACN,aAAapU,EAAO6U,EAAOhU,EAAQ,CACjC,MAAMiU,EAAgBjU,EAAO,WAAY,EACnCkU,EAAgBC,GAAcxZ,EAASsZ,CAAa,EAC1D,OAAOG,GAAiBjV,EAAO+U,CAAa,EAAI,KAAO/U,CACxD,CACF,GAGGkV,GAA8CN,GAEpD,SAASI,GACPG,EAAkB,CAAE,EACpBL,EAAgB,CAAE,EAClB,CACA,MAAO,CACL,UAAW,CAAC,GAAIK,EAAgB,WAAa,CAAA,EAAK,GAAIL,EAAc,WAAa,CAAA,CAAG,EACpF,SAAU,CAAC,GAAIK,EAAgB,UAAY,CAAA,EAAK,GAAIL,EAAc,UAAY,CAAA,CAAG,EACjF,aAAc,CACZ,GAAIK,EAAgB,cAAgB,GACpC,GAAIL,EAAc,cAAgB,GAClC,GAAIK,EAAgB,qBAAuB,CAAE,EAAGR,EACjD,EACD,mBAAoB,CAAC,GAAIQ,EAAgB,oBAAsB,CAAA,EAAK,GAAIL,EAAc,oBAAsB,CAAA,CAAG,EAC/G,eAAgBK,EAAgB,iBAAmB,OAAYA,EAAgB,eAAiB,EACjG,CACH,CAEA,SAASF,GAAiBjV,EAAOxE,EAAS,CACxC,OAAIA,EAAQ,gBAAkB4Z,GAAepV,CAAK,GAChD5I,GACEC,EAAO,KAAK;AAAA,SAA6Dge,GAAoBrV,CAAK,CAAC,EAAE,EAChG,IAELsV,GAAgBtV,EAAOxE,EAAQ,YAAY,GAC7CpE,GACEC,EAAO,KACL;AAAA,SAA0Ege,GAAoBrV,CAAK,CAAC,EACrG,EACI,IAELuV,GAAgBvV,CAAK,GACvB5I,GACEC,EAAO,KACL;AAAA,SAAuFge,GACrFrV,CACV,CAAS,EACF,EACI,IAELwV,GAAsBxV,EAAOxE,EAAQ,kBAAkB,GACzDpE,GACEC,EAAO,KACL;AAAA,SAAgFge,GAAoBrV,CAAK,CAAC,EAC3G,EACI,IAELyV,GAAazV,EAAOxE,EAAQ,QAAQ,GACtCpE,GACEC,EAAO,KACL;AAAA,SAAsEge,GACpErV,CACD,CAAA;AAAA,OAAW0V,GAAmB1V,CAAK,CAAC,EACtC,EACI,IAEJ2V,GAAc3V,EAAOxE,EAAQ,SAAS,EASpC,IARLpE,GACEC,EAAO,KACL;AAAA,SAA2Ege,GACzErV,CACD,CAAA;AAAA,OAAW0V,GAAmB1V,CAAK,CAAC,EACtC,EACI,GAGX,CAEA,SAASsV,GAAgBtV,EAAO4V,EAAc,CAE5C,OAAI5V,EAAM,MAAQ,CAAC4V,GAAgB,CAACA,EAAa,OACxC,GAGFC,GAA0B7V,CAAK,EAAE,KAAKnH,GAAWid,GAAyBjd,EAAS+c,CAAY,CAAC,CACzG,CAEA,SAASJ,GAAsBxV,EAAO+V,EAAoB,CACxD,GAAI/V,EAAM,OAAS,eAAiB,CAAC+V,GAAsB,CAACA,EAAmB,OAC7E,MAAO,GAGT,MAAMlW,EAAOG,EAAM,YACnB,OAAOH,EAAOiW,GAAyBjW,EAAMkW,CAAkB,EAAI,EACrE,CAEA,SAASN,GAAazV,EAAOgW,EAAU,CAErC,GAAI,CAACA,GAAY,CAACA,EAAS,OACzB,MAAO,GAET,MAAMje,EAAM2d,GAAmB1V,CAAK,EACpC,OAAQjI,EAAc+d,GAAyB/d,EAAKie,CAAQ,EAA9C,EAChB,CAEA,SAASL,GAAc3V,EAAOiW,EAAW,CAEvC,GAAI,CAACA,GAAa,CAACA,EAAU,OAC3B,MAAO,GAET,MAAMle,EAAM2d,GAAmB1V,CAAK,EACpC,OAAQjI,EAAa+d,GAAyB/d,EAAKke,CAAS,EAA9C,EAChB,CAEA,SAASJ,GAA0B7V,EAAO,CACxC,MAAMkW,EAAmB,CAAE,EAEvBlW,EAAM,SACRkW,EAAiB,KAAKlW,EAAM,OAAO,EAGrC,IAAImW,EACJ,GAAI,CAEFA,EAAgBnW,EAAM,UAAU,OAAOA,EAAM,UAAU,OAAO,OAAS,CAAC,CACzE,MAAW,CAEd,CAEE,OAAImW,GACEA,EAAc,QAChBD,EAAiB,KAAKC,EAAc,KAAK,EACrCA,EAAc,MAChBD,EAAiB,KAAK,GAAGC,EAAc,IAAI,KAAKA,EAAc,KAAK,EAAE,GAKpED,CACT,CAEA,SAASd,GAAepV,EAAO,CAC7B,GAAI,CAEF,OAAOA,EAAM,UAAU,OAAO,CAAC,EAAE,OAAS,aAC3C,MAAW,CAEd,CACE,MAAO,EACT,CAEA,SAASoW,GAAiBC,EAAS,GAAI,CACrC,QAASC,EAAID,EAAO,OAAS,EAAGC,GAAK,EAAGA,IAAK,CAC3C,MAAMC,EAAQF,EAAOC,CAAC,EAEtB,GAAIC,GAASA,EAAM,WAAa,eAAiBA,EAAM,WAAa,gBAClE,OAAOA,EAAM,UAAY,IAE/B,CAEE,OAAO,IACT,CAEA,SAASb,GAAmB1V,EAAO,CACjC,GAAI,CACF,IAAIqW,EACJ,GAAI,CAEFA,EAASrW,EAAM,UAAU,OAAO,CAAC,EAAE,WAAW,MAC/C,MAAW,CAEhB,CACI,OAAOqW,EAASD,GAAiBC,CAAM,EAAI,IAC5C,MAAY,CACXjf,OAAAA,GAAeC,EAAO,MAAM,gCAAgCge,GAAoBrV,CAAK,CAAC,EAAE,EACjF,IACX,CACA,CAEA,SAASuV,GAAgBvV,EAAO,CAO9B,OANIA,EAAM,MAMN,CAACA,EAAM,WAAa,CAACA,EAAM,UAAU,QAAUA,EAAM,UAAU,OAAO,SAAW,EAC5E,GAKP,CAACA,EAAM,SAEP,CAACA,EAAM,UAAU,OAAO,KAAKqB,GAASA,EAAM,YAAeA,EAAM,MAAQA,EAAM,OAAS,SAAYA,EAAM,KAAK,CAEnH,CCvNA,SAASmV,GACPC,EACAC,EACAC,EAAgB,IAChBvU,EACAiO,EACArQ,EACA0K,EACA,CACA,GAAI,CAAC1K,EAAM,WAAa,CAACA,EAAM,UAAU,QAAU,CAAC0K,GAAQ,CAACkM,GAAalM,EAAK,kBAAmB,KAAK,EACrG,OAIF,MAAMmM,EACJ7W,EAAM,UAAU,OAAO,OAAS,EAAIA,EAAM,UAAU,OAAOA,EAAM,UAAU,OAAO,OAAS,CAAC,EAAI,OAG9F6W,IACF7W,EAAM,UAAU,OAAS8W,GACvBC,GACEN,EACAC,EACArG,EACA3F,EAAK,kBACLtI,EACApC,EAAM,UAAU,OAChB6W,EACA,CACD,EACDF,CACD,EAEL,CAEA,SAASI,GACPN,EACAC,EACArG,EACAnY,EACAkK,EACA4U,EACA1L,EACA2L,EACA,CACA,GAAID,EAAe,QAAU3G,EAAQ,EACnC,OAAO2G,EAGT,IAAIE,EAAgB,CAAC,GAAGF,CAAc,EAGtC,GAAIJ,GAAa1e,EAAMkK,CAAG,EAAG,KAAK,EAAG,CACnC+U,GAA4C7L,EAAW2L,CAAW,EAClE,MAAMG,EAAeX,EAAiCC,EAAQxe,EAAMkK,CAAG,CAAC,EAClEiV,EAAiBH,EAAc,OACrCI,GAA2CF,EAAchV,EAAKiV,EAAgBJ,CAAW,EACzFC,EAAgBH,GACdN,EACAC,EACArG,EACAnY,EAAMkK,CAAG,EACTA,EACA,CAACgV,EAAc,GAAGF,CAAa,EAC/BE,EACAC,CACD,CACL,CAIE,OAAI,MAAM,QAAQnf,EAAM,MAAM,GAC5BA,EAAM,OAAO,QAAQ,CAACqf,EAAYjB,IAAM,CACtC,GAAIM,GAAaW,EAAY,KAAK,EAAG,CACnCJ,GAA4C7L,EAAW2L,CAAW,EAClE,MAAMG,EAAeX,EAAiCC,EAAQa,CAAU,EAClEF,EAAiBH,EAAc,OACrCI,GAA2CF,EAAc,UAAUd,CAAC,IAAKe,EAAgBJ,CAAW,EACpGC,EAAgBH,GACdN,EACAC,EACArG,EACAkH,EACAnV,EACA,CAACgV,EAAc,GAAGF,CAAa,EAC/BE,EACAC,CACD,CACT,CACA,CAAK,EAGIH,CACT,CAEA,SAASC,GAA4C7L,EAAW2L,EAAa,CAE3E3L,EAAU,UAAYA,EAAU,WAAa,CAAE,KAAM,UAAW,QAAS,EAAM,EAE/EA,EAAU,UAAY,CACpB,GAAGA,EAAU,UACb,GAAIA,EAAU,OAAS,kBAAoB,CAAE,mBAAoB,EAAI,EACrE,aAAc2L,CACf,CACH,CAEA,SAASK,GACPhM,EACA5H,EACAuT,EACAO,EACA,CAEAlM,EAAU,UAAYA,EAAU,WAAa,CAAE,KAAM,UAAW,QAAS,EAAM,EAE/EA,EAAU,UAAY,CACpB,GAAGA,EAAU,UACb,KAAM,UACN,OAAA5H,EACA,aAAcuT,EACd,UAAWO,CACZ,CACH,CAOA,SAASV,GAA4BtJ,EAAYiK,EAAgB,CAC/D,OAAOjK,EAAW,IAAIlC,IAChBA,EAAU,QACZA,EAAU,MAAQoM,GAASpM,EAAU,MAAOmM,CAAc,GAErDnM,EACR,CACH,CCvIA,SAASqM,GAAS5f,EAAK,CACrB,GAAI,CAACA,EACH,MAAO,CAAE,EAGX,MAAM2E,EAAQ3E,EAAI,MAAM,8DAA8D,EAEtF,GAAI,CAAC2E,EACH,MAAO,CAAE,EAIX,MAAMkb,EAAQlb,EAAM,CAAC,GAAK,GACpBmb,EAAWnb,EAAM,CAAC,GAAK,GAC7B,MAAO,CACL,KAAMA,EAAM,CAAC,EACb,KAAMA,EAAM,CAAC,EACb,SAAUA,EAAM,CAAC,EACjB,OAAQkb,EACR,KAAMC,EACN,SAAUnb,EAAM,CAAC,EAAIkb,EAAQC,CAC9B,CACH,CAkBA,SAASC,GAAuB/f,EAAK,CAEnC,OAAOA,EAAI,MAAM,OAAO,EAAE,OAAOggB,GAAKA,EAAE,OAAS,GAAKA,IAAM,GAAG,EAAE,MACnE,CCvCA,SAASC,GAAiChhB,EAAS,CACjD,MAAMD,EAAO,UACbD,GAAWC,EAAMC,CAAO,EACxBC,GAAgBF,EAAMkhB,EAAiB,CACzC,CAEA,SAASA,IAAoB,CACrB,YAAapgB,GAInBqgB,GAAe,QAAQ,SAAUvM,EAAO,CAChCA,KAAS9T,EAAW,SAI1BsgB,EAAKtgB,EAAW,QAAS8T,EAAO,SAAUyM,EAAuB,CAC/D,OAAAC,GAAuB1M,CAAK,EAAIyM,EAEzB,YAAalR,EAAM,CAExB5P,EAAgB,UADI,CAAE,KAAA4P,EAAM,MAAAyE,CAAO,CACG,EAEtC,MAAM2M,EAAMD,GAAuB1M,CAAK,EACxC2M,GAAOA,EAAI,MAAMzgB,EAAW,QAASqP,CAAI,CAC1C,CACP,CAAK,CACL,CAAG,CACH,CC5BA,SAASqR,GAAwB5M,EAAO,CACtC,OACEA,IAAU,OAAS,UAAY,CAAC,QAAS,QAAS,UAAW,MAAO,OAAQ,OAAO,EAAE,SAASA,CAAK,EAAIA,EAAQ,KAEnH,CCLA,MAAMyI,GAAmB,iBAEnBoE,GAA8B,CAAChd,EAAU,KAAO,CACpD,MAAMid,EAASjd,EAAQ,QAAU0c,GAE3BQ,EAAU,CAAC,CAACld,EAAQ,QAE1B,MAAO,CACL,KAAM4Y,GACN,MAAMvT,EAAQ,CACN,YAAahJ,GAInBmgB,GAAiC,CAAC,CAAE,KAAA9Q,EAAM,MAAAyE,KAAY,CAChD1I,EAAW,IAAKpC,GAAU,CAAC4X,EAAO,SAAS9M,CAAK,GAIpDgN,GAAezR,EAAMyE,EAAO+M,CAAO,CAC3C,CAAO,CACF,CACF,CACH,EAKME,GAA8CJ,GAEpD,SAASG,GAAezR,EAAMyE,EAAO+M,EAAS,CAC5C,MAAMG,EAAiB,CACrB,MAAON,GAAwB5M,CAAK,EACpC,MAAO,CACL,UAAWzE,CACZ,CACF,EAEDzC,GAAUtL,GAAS,CAYjB,GAXAA,EAAM,kBAAkB6G,IACtBA,EAAM,OAAS,UAEf8Y,GAAsB9Y,EAAO,CAC3B,QAAA0Y,EACA,KAAM,SACd,CAAO,EAEM1Y,EACR,EAEG2L,IAAU,SAAU,CACtB,GAAI,CAACzE,EAAK,CAAC,EAAG,CACZ,MAAMrO,EAAU,qBAAqBkgB,GAAS7R,EAAK,MAAM,CAAC,EAAG,GAAG,GAAK,gBAAgB,GACrF/N,EAAM,SAAS,YAAa+N,EAAK,MAAM,CAAC,CAAC,EACzC8R,GAAengB,EAASggB,CAAc,CAC9C,CACM,MACN,CAEI,MAAM3gB,EAAQgP,EAAK,KAAK+R,GAAOA,aAAe,KAAK,EACnD,GAAI/gB,EAAO,CACTghB,GAAiBhhB,EAAO2gB,CAAc,EACtC,MACN,CAEI,MAAMhgB,EAAUkgB,GAAS7R,EAAM,GAAG,EAClC8R,GAAengB,EAASggB,CAAc,CAC1C,CAAG,CACH,CCzEA,MAAMzE,GAAmB,SAEnB+E,GAAsB,IAAM,CAChC,IAAIC,EAEJ,MAAO,CACL,KAAMhF,GACN,aAAaiF,EAAc,CAGzB,GAAIA,EAAa,KACf,OAAOA,EAIT,GAAI,CACF,GAAIpE,GAAiBoE,EAAcD,CAAa,EAC9ChiB,OAAAA,GAAeC,EAAO,KAAK,sEAAsE,EAC1F,IAEjB,MAAoB,CAAE,CAEhB,OAAQ+hB,EAAgBC,CACzB,CACF,CACH,EAKMC,GAAsCH,GAG5C,SAASlE,GAAiBoE,EAAcD,EAAe,CACrD,OAAKA,EAID,GAAAG,GAAoBF,EAAcD,CAAa,GAI/CI,GAAsBH,EAAcD,CAAa,GAP5C,EAYX,CAEA,SAASG,GAAoBF,EAAcD,EAAe,CACxD,MAAMK,EAAiBJ,EAAa,QAC9BK,EAAkBN,EAAc,QAoBtC,MAjBI,GAACK,GAAkB,CAACC,GAKnBD,GAAkB,CAACC,GAAqB,CAACD,GAAkBC,GAI5DD,IAAmBC,GAInB,CAACC,GAAmBN,EAAcD,CAAa,GAI/C,CAACQ,GAAkBP,EAAcD,CAAa,EAKpD,CAEA,SAASI,GAAsBH,EAAcD,EAAe,CAC1D,MAAMS,EAAoBC,GAAuBV,CAAa,EACxDW,EAAmBD,GAAuBT,CAAY,EAc5D,MAZI,GAACQ,GAAqB,CAACE,GAIvBF,EAAkB,OAASE,EAAiB,MAAQF,EAAkB,QAAUE,EAAiB,OAIjG,CAACJ,GAAmBN,EAAcD,CAAa,GAI/C,CAACQ,GAAkBP,EAAcD,CAAa,EAKpD,CAEA,SAASQ,GAAkBP,EAAcD,EAAe,CACtD,IAAIY,EAAgBC,GAAmBZ,CAAY,EAC/Ca,EAAiBD,GAAmBb,CAAa,EAGrD,GAAI,CAACY,GAAiB,CAACE,EACrB,MAAO,GAYT,GARKF,GAAiB,CAACE,GAAoB,CAACF,GAAiBE,IAI7DF,EAAgBA,EAChBE,EAAiBA,EAGbA,EAAe,SAAWF,EAAc,QAC1C,MAAO,GAIT,QAAS1D,EAAI,EAAGA,EAAI4D,EAAe,OAAQ5D,IAAK,CAE9C,MAAM6D,EAASD,EAAe5D,CAAC,EAEzB8D,EAASJ,EAAc1D,CAAC,EAE9B,GACE6D,EAAO,WAAaC,EAAO,UAC3BD,EAAO,SAAWC,EAAO,QACzBD,EAAO,QAAUC,EAAO,OACxBD,EAAO,WAAaC,EAAO,SAE3B,MAAO,EAEb,CAEE,MAAO,EACT,CAEA,SAAST,GAAmBN,EAAcD,EAAe,CACvD,IAAIiB,EAAqBhB,EAAa,YAClCiB,EAAsBlB,EAAc,YAGxC,GAAI,CAACiB,GAAsB,CAACC,EAC1B,MAAO,GAIT,GAAKD,GAAsB,CAACC,GAAyB,CAACD,GAAsBC,EAC1E,MAAO,GAGTD,EAAqBA,EACrBC,EAAsBA,EAGtB,GAAI,CACF,OAAUD,EAAmB,KAAK,EAAE,IAAMC,EAAoB,KAAK,EAAE,CACtE,MAAa,CACZ,MAAO,EACX,CACA,CAEA,SAASR,GAAuB9Z,EAAO,CACrC,OAAOA,EAAM,WAAaA,EAAM,UAAU,QAAUA,EAAM,UAAU,OAAO,CAAC,CAC9E,CCxJA,SAASua,GACPC,EACAC,EACAC,EACA9Z,EACA+Z,EAAa,oBACb,CACA,GAAI,CAACH,EAAY,UACf,OAGF,MAAMI,EAAyBlf,GAAmB,GAAI+e,EAAiBD,EAAY,UAAU,GAAG,EAEhG,GAAIA,EAAY,cAAgBI,EAAwB,CACtD,MAAM/f,EAAS2f,EAAY,UAAU,OACrC,GAAI,CAAC3f,EAAQ,OAEb,MAAM3B,EAAO0H,EAAM/F,CAAM,EACrB3B,IACF2hB,GAAQ3hB,EAAMshB,CAAW,EAGzB,OAAO5Z,EAAM/F,CAAM,GAErB,MACJ,CAEE,KAAM,CAAE,OAAAigB,EAAQ,IAAA/iB,CAAK,EAAGyiB,EAAY,UAE9BO,EAAUC,GAAWjjB,CAAG,EACxBmE,EAAO6e,EAAUpD,GAASoD,CAAO,EAAE,KAAO,OAE1CE,EAAY,CAAC,CAACviB,EAAe,EAE7BQ,EACJ0hB,GAA0BK,EACtB/W,GAAkB,CAChB,KAAM,GAAG4W,CAAM,IAAI/iB,CAAG,GACtB,WAAY,CACV,IAAAA,EACA,KAAM,QACN,cAAe+iB,EACf,WAAYC,EACZ,iBAAkB7e,EAClB,CAAC8F,CAAgC,EAAG2Y,EACpC,CAAC1Y,EAA4B,EAAG,aACjC,CACF,CAAA,EACD,IAAI1I,GAKV,GAHAihB,EAAY,UAAU,OAASthB,EAAK,YAAa,EAAC,OAClD0H,EAAM1H,EAAK,cAAc,MAAM,EAAIA,EAE/BwhB,EAAoBF,EAAY,UAAU,GAAG,EAAG,CAClD,MAAMU,EAAUV,EAAY,KAAK,CAAC,EAE5Bhf,EAAUgf,EAAY,KAAK,CAAC,GAAK,CAAE,EAEnCld,EAAU6d,GACdD,EACA1f,EAIAE,GAAmB,GAAIuf,EAAY/hB,EAAO,MAC3C,EACGoE,IAEFkd,EAAY,KAAK,CAAC,EAAIhf,EACtBA,EAAQ,QAAU8B,EAExB,CAEE,OAAOpE,CACT,CAKA,SAASiiB,GACPD,EACAE,EAGAliB,EACA,CACA,MAAMmiB,EAAelI,GAAa,CAAE,KAAAja,EAAM,EACpCma,EAAcgI,EAAa,cAAc,EACzC7H,EAAU6H,EAAa,QAG7B,GAAI,CAAChI,EACH,OAGF,MAAM/V,EAAU8d,EAAgB,UAAYE,GAAUJ,CAAO,EAAIA,EAAQ,QAAU,QAEnF,GAAK5d,EAEE,GAAIie,GAAUje,CAAO,EAAG,CAC7B,MAAMke,EAAa,IAAI,QAAQle,CAAO,EAGtC,GAFAke,EAAW,IAAI,eAAgBnI,CAAW,EAEtCG,EAAS,CACX,MAAMiI,EAAoBD,EAAW,IAAI,SAAS,EAClD,GAAIC,EAAmB,CACrB,MAAMC,EAAsCC,GAAwCF,CAAiB,EACrGD,EAAW,IACT,UAGAE,EAAsC,GAAGA,CAAmC,IAAIlI,CAAO,GAAKA,CAC7F,CACT,MACQgI,EAAW,IAAI,UAAWhI,CAAO,CAEzC,CAEI,OAAOgI,CACR,SAAU,MAAM,QAAQle,CAAO,EAAG,CACjC,MAAMke,EAAa,CACjB,GAAGle,EAEA,OAAOrC,GACC,EAAE,MAAM,QAAQA,CAAM,GAAKA,EAAO,CAAC,IAAM,eACjD,EAEA,IAAIA,GAAU,CACb,GAAI,MAAM,QAAQA,CAAM,GAAKA,EAAO,CAAC,IAAM,WAAa,OAAOA,EAAO,CAAC,GAAM,SAAU,CACrF,KAAM,CAAC2gB,EAAYC,EAAa,GAAGzU,CAAI,EAAInM,EAC3C,MAAO,CAAC2gB,EAAYD,GAAwCE,CAAW,EAAG,GAAGzU,CAAI,CAC7F,KACY,QAAOnM,CAEnB,CAAS,EAEH,CAAC,eAAgBoY,CAAW,CAC7B,EAED,OAAIG,GAGFgI,EAAW,KAAK,CAAC,UAAWhI,CAAO,CAAC,EAG/BgI,CACX,KAAS,CACL,MAAMM,EAAwB,YAAaxe,EAAUA,EAAQ,QAAU,OACvE,IAAIye,EAAoB,CAAE,EAE1B,OAAI,MAAM,QAAQD,CAAqB,EACrCC,EAAoBD,EACjB,IAAIE,GACH,OAAOA,GAAe,SAAWL,GAAwCK,CAAU,EAAIA,CACjG,EACS,OAAOA,GAAcA,IAAe,EAAE,EAChCF,GACTC,EAAkB,KAAKJ,GAAwCG,CAAqB,CAAC,EAGnFtI,GACFuI,EAAkB,KAAKvI,CAAO,EAGzB,CACL,GAAIlW,EACJ,eAAgB+V,EAChB,QAAS0I,EAAkB,OAAS,EAAIA,EAAkB,KAAK,GAAG,EAAI,MACvE,CACL,KAvEI,OAAO,CAAE,GAAGV,CAAc,CAwE9B,CAmBA,SAASL,GAAWjjB,EAAK,CACvB,GAAI,CAEF,OADe,IAAI,IAAIA,CAAG,EACZ,IACf,MAAW,CACV,MACJ,CACA,CAEA,SAAS8iB,GAAQ3hB,EAAMshB,EAAa,CAClC,GAAIA,EAAY,SAAU,CACxByB,GAAc/iB,EAAMshB,EAAY,SAAS,MAAM,EAE/C,MAAM0B,EACJ1B,EAAY,UAAYA,EAAY,SAAS,SAAWA,EAAY,SAAS,QAAQ,IAAI,gBAAgB,EAE3G,GAAI0B,EAAe,CACjB,MAAMC,EAAmB,SAASD,CAAa,EAC3CC,EAAmB,GACrBjjB,EAAK,aAAa,+BAAgCijB,CAAgB,CAE1E,CACA,MAAa3B,EAAY,OACrBthB,EAAK,UAAU,CAAE,KAAMJ,GAAmB,QAAS,iBAAkB,EAEvEI,EAAK,IAAK,CACZ,CAEA,SAASyiB,GAAwCS,EAAe,CAC9D,OACEA,EACG,MAAM,GAAG,EAET,OAAOC,GAAgB,CAACA,EAAa,MAAM,GAAG,EAAE,CAAC,EAAE,WAAWC,EAAyB,CAAC,EACxF,KAAK,GAAG,CAEf,CAEA,SAAShB,GAAUJ,EAAS,CAC1B,OAAO,OAAO,QAAY,KAAetE,GAAasE,EAAS,OAAO,CACxE,CAEA,SAASK,GAAUje,EAAS,CAC1B,OAAO,OAAO,QAAY,KAAesZ,GAAatZ,EAAS,OAAO,CACxE,CC7PA,SAASif,GAAwC/K,EAAY,CAE3D,GAAIA,IAAe,OAEZ,OAAIA,GAAc,KAAOA,EAAa,IACpC,UACEA,GAAc,IAChB,QAEP,MAEJ,CCVA,MAAMgL,GAAS3kB,EAwDf,SAAS4kB,IAAgB,CACvB,GAAI,EAAE,UAAWD,IACf,MAAO,GAGT,GAAI,CACF,WAAI,QACJ,IAAI,QAAQ,wBAAwB,EACpC,IAAI,SACG,EACR,MAAW,CACV,MAAO,EACX,CACA,CAMA,SAASE,GAAiBC,EAAM,CAC9B,OAAOA,GAAQ,mDAAmD,KAAKA,EAAK,SAAQ,CAAE,CACxF,CAQA,SAASC,IAAsB,CAC7B,GAAI,OAAO,aAAgB,SACzB,MAAO,GAGT,GAAI,CAACH,GAAa,EAChB,MAAO,GAKT,GAAIC,GAAiBF,GAAO,KAAK,EAC/B,MAAO,GAKT,IAAIjQ,EAAS,GACb,MAAMsQ,EAAML,GAAO,SAEnB,GAAIK,GAAO,OAAQA,EAAI,eAAoB,WACzC,GAAI,CACF,MAAMC,EAAUD,EAAI,cAAc,QAAQ,EAC1CC,EAAQ,OAAS,GACjBD,EAAI,KAAK,YAAYC,CAAO,EACxBA,EAAQ,eAAiBA,EAAQ,cAAc,QAEjDvQ,EAASmQ,GAAiBI,EAAQ,cAAc,KAAK,GAEvDD,EAAI,KAAK,YAAYC,CAAO,CAC7B,OAAQC,EAAK,CACZ3lB,IACEC,EAAO,KAAK,kFAAmF0lB,CAAG,CAC1G,CAGE,OAAOxQ,CACT,CC/GA,SAASyQ,GACPhmB,EACAimB,EACA,CACA,MAAMlmB,EAAO,QACbD,GAAWC,EAAMC,CAAO,EACxBC,GAAgBF,EAAM,IAAMmmB,GAAgB,OAAWD,CAAoB,CAAC,CAC9E,CAUA,SAASE,GAAkCnmB,EAAS,CAClD,MAAMD,EAAO,sBACbD,GAAWC,EAAMC,CAAO,EACxBC,GAAgBF,EAAM,IAAMmmB,GAAgBE,EAAa,CAAC,CAC5D,CAEA,SAASF,GAAgBG,EAAiBJ,EAAuB,GAAO,CAClEA,GAAwB,CAACL,MAI7BzE,EAAKtgB,EAAY,QAAS,SAAUylB,EAAe,CACjD,OAAO,YAAapW,EAAM,CAQxB,MAAMqW,EAAe,IAAI,MAEnB,CAAE,OAAAzC,EAAQ,IAAA/iB,GAAQylB,GAAetW,CAAI,EACrCsT,EAAc,CAClB,KAAAtT,EACA,UAAW,CACT,OAAA4T,EACA,IAAA/iB,CACD,EACD,eAAgBgK,EAAkB,EAAK,IAEvC,aAAAwb,CACD,EAGD,OAAKF,GACH/lB,EAAgB,QAAS,CACvB,GAAGkjB,CACb,CAAS,EAII8C,EAAc,MAAMzlB,EAAYqP,CAAI,EAAE,KAC3C,MAAOyL,IACD0K,EACFA,EAAgB1K,CAAQ,EAExBrb,EAAgB,QAAS,CACvB,GAAGkjB,EACH,aAAczY,EAAkB,EAAK,IACrC,SAAA4Q,CACd,CAAa,EAGIA,GAERza,GAAU,CACTZ,MAAAA,EAAgB,QAAS,CACvB,GAAGkjB,EACH,aAAczY,EAAkB,EAAK,IACrC,MAAA7J,CACZ,CAAW,EAEGuW,GAAQvW,CAAK,GAAKA,EAAM,QAAU,SAKpCA,EAAM,MAAQqlB,EAAa,MAC3BlkB,GAAyBnB,EAAO,cAAe,CAAC,GAM5CA,CACP,CACF,CACF,CACL,CAAG,CACH,CAEA,eAAeulB,GAAgBC,EAAKC,EAAqB,CACvD,GAAID,GAAOA,EAAI,KAAM,CACnB,MAAME,EAAOF,EAAI,KACXG,EAAiBD,EAAK,UAAW,EAGjCE,EAA0B,WAC9B,IAAM,CACJF,EAAK,OAAM,EAAG,KAAK,KAAM,IAAM,CAEvC,CAAS,CACF,EACD,GAAK,GACN,EAED,IAAIG,EAAgB,GACpB,KAAOA,GAAe,CACpB,IAAIC,EACJ,GAAI,CAEFA,EAAe,WAAW,IAAM,CAC9BJ,EAAK,OAAM,EAAG,KAAK,KAAM,IAAM,CAEzC,CAAW,CACF,EAAE,GAAI,EAGP,KAAM,CAAE,KAAAK,CAAI,EAAK,MAAMJ,EAAe,KAAM,EAE5C,aAAaG,CAAY,EAErBC,IACFN,EAAqB,EACrBI,EAAgB,GAEnB,MAAe,CACdA,EAAgB,EACxB,QAAgB,CACR,aAAaC,CAAY,CACjC,CACA,CAEI,aAAaF,CAAuB,EAEpCD,EAAe,YAAa,EAC5BD,EAAK,OAAM,EAAG,KAAK,KAAM,IAAM,CAEnC,CAAK,CACL,CACA,CAEA,SAASR,GAAczK,EAAU,CAE/B,IAAIuL,EACJ,GAAI,CACFA,EAA6BvL,EAAS,MAAO,CAC9C,MAAW,CACV,MACJ,CAGE8K,GAAgBS,EAA4B,IAAM,CAChD5mB,EAAgB,sBAAuB,CACrC,aAAcyK,EAAkB,EAAK,IACrC,SAAA4Q,CACN,CAAK,CACL,CAAG,CACH,CAEA,SAASwL,GAAQC,EAAKC,EAAM,CAC1B,MAAO,CAAC,CAACD,GAAO,OAAOA,GAAQ,UAAY,CAAC,CAAEA,EAAMC,CAAI,CAC1D,CAEA,SAASC,GAAmBC,EAAU,CACpC,OAAI,OAAOA,GAAa,SACfA,EAGJA,EAIDJ,GAAQI,EAAU,KAAK,EAClBA,EAAS,IAGdA,EAAS,SACJA,EAAS,SAAU,EAGrB,GAXE,EAYX,CAMA,SAASf,GAAegB,EAAW,CACjC,GAAIA,EAAU,SAAW,EACvB,MAAO,CAAE,OAAQ,MAAO,IAAK,EAAI,EAGnC,GAAIA,EAAU,SAAW,EAAG,CAC1B,KAAM,CAACzmB,EAAKyD,CAAO,EAAIgjB,EAEvB,MAAO,CACL,IAAKF,GAAmBvmB,CAAG,EAC3B,OAAQomB,GAAQ3iB,EAAS,QAAQ,EAAI,OAAOA,EAAQ,MAAM,EAAE,YAAW,EAAK,KAC7E,CACL,CAEE,MAAMyd,EAAMuF,EAAU,CAAC,EACvB,MAAO,CACL,IAAKF,GAAmBrF,CAAK,EAC7B,OAAQkF,GAAQlF,EAAK,QAAQ,EAAI,OAAOA,EAAI,MAAM,EAAE,YAAW,EAAK,KACrE,CACH,CC3MA,SAASwF,IAAe,CAEM,MAAO,KACrC,CCxBA,MAAMjC,GAAS3kB,EAQf,SAAS6mB,IAAkB,CAKzB,MAAMC,EAAanC,GAAS,OACtBoC,EAAsBD,GAAaA,EAAU,KAAOA,EAAU,IAAI,QAClEE,EAAgB,YAAarC,IAAU,CAAC,CAACA,GAAO,QAAQ,WAAa,CAAC,CAACA,GAAO,QAAQ,aAE5F,MAAO,CAACoC,GAAuBC,CACjC,CCtBA,MAAMrC,EAAS3kB,EAEf,IAAIinB,GAAgB,EAKpB,SAASC,IAAsB,CAC7B,OAAOD,GAAgB,CACzB,CAKA,SAASE,IAAoB,CAE3BF,KACA,WAAW,IAAM,CACfA,IACJ,CAAG,CACH,CAaA,SAASG,GACPC,EACA1jB,EAEC,CAAE,EACH,CAQA,SAAS2jB,EAAWD,EAAI,CACtB,OAAO,OAAOA,GAAO,UACzB,CAEE,GAAI,CAACC,EAAWD,CAAE,EAChB,OAAOA,EAGT,GAAI,CAGF,MAAME,EAAWF,EAAK,mBACtB,GAAIE,EACF,OAAI,OAAOA,GAAY,WACdA,EAIAF,EAKX,GAAI1K,GAAoB0K,CAAE,EACxB,OAAOA,CAEV,MAAW,CAIV,OAAOA,CACX,CAIE,MAAMG,EAAgB,YAAcnY,EAAM,CACxC,GAAI,CAEF,MAAMoY,EAAmBpY,EAAK,IAAI+R,GAAOgG,GAAKhG,EAAKzd,CAAO,CAAC,EAM3D,OAAO0jB,EAAG,MAAM,KAAMI,CAAgB,CACvC,OAAQ7R,EAAI,CACX,MAAAuR,GAAmB,EAEnBva,GAAUtL,GAAS,CACjBA,EAAM,kBAAkB6G,IAClBxE,EAAQ,YACV+jB,GAAsBvf,EAAO,MAAoB,EACjD8Y,GAAsB9Y,EAAOxE,EAAQ,SAAS,GAGhDwE,EAAM,MAAQ,CACZ,GAAGA,EAAM,MACT,UAAWkH,CACZ,EAEMlH,EACR,EAEDkZ,GAAiBzL,CAAE,CAC3B,CAAO,EAEKA,CACZ,CACG,EAGD,GAAI,CACF,UAAW+R,KAAYN,EACjB,OAAO,UAAU,eAAe,KAAKA,EAAIM,CAAQ,IACnDH,EAAcG,CAAQ,EAAKN,EAAGM,CAAU,EAG7C,MAAY,CAGf,CAIEC,GAAoBJ,EAAeH,CAAE,EAErC7lB,GAAyB6lB,EAAI,qBAAsBG,CAAa,EAGhE,GAAI,CAEiB,OAAO,yBAAyBA,EAAe,MAAM,EACzD,cACb,OAAO,eAAeA,EAAe,OAAQ,CAC3C,KAAM,CACJ,OAAOH,EAAG,IACX,CACT,CAAO,CAEJ,MAAY,CAGf,CAEE,OAAOG,CACT,CCpJA,MAAMjoB,EAAe,OAAO,iBAAqB,KAAe,iBCAhE,SAASsoB,GAAmBC,EAAalS,EAAI,CAE3C,MAAM4I,EAASuJ,GAAiBD,EAAalS,CAAE,EAEzCnC,EAAY,CAChB,KAAMuU,GAAYpS,CAAE,EACpB,MAAOqS,GAAerS,CAAE,CACzB,EAED,OAAI4I,EAAO,SACT/K,EAAU,WAAa,CAAE,OAAA+K,CAAQ,GAG/B/K,EAAU,OAAS,QAAaA,EAAU,QAAU,KACtDA,EAAU,MAAQ,8BAGbA,CACT,CAEA,SAASyU,GACPJ,EACArU,EACA0U,EACAC,EACA,CACA,MAAMpf,EAASoC,EAAW,EACpBid,EAAiBrf,GAAUA,EAAO,WAAY,EAAC,eAG/Csf,EAAgBC,GAA2B9U,CAAS,EAEpD+U,EAAQ,CACZ,eAAgBC,GAAgBhV,EAAW4U,CAAc,CAC1D,EAED,GAAIC,EACF,MAAO,CACL,UAAW,CACT,OAAQ,CAACT,GAAmBC,EAAaQ,CAAa,CAAC,CACxD,EACD,MAAAE,CACD,EAGH,MAAMrgB,EAAQ,CACZ,UAAW,CACT,OAAQ,CACN,CACE,KAAMugB,GAAQjV,CAAS,EAAIA,EAAU,YAAY,KAAO2U,EAAuB,qBAAuB,QACtG,MAAOO,GAAgClV,EAAW,CAAE,qBAAA2U,CAAoB,CAAE,CAC3E,CACF,CACF,EACD,MAAAI,CACD,EAED,GAAIL,EAAoB,CACtB,MAAM3J,EAASuJ,GAAiBD,EAAaK,CAAkB,EAC3D3J,EAAO,SAGTrW,EAAM,UAAU,OAAO,CAAC,EAAE,WAAa,CAAE,OAAAqW,CAAQ,EAEvD,CAEE,OAAOrW,CACT,CAEA,SAASygB,GAAed,EAAalS,EAAI,CACvC,MAAO,CACL,UAAW,CACT,OAAQ,CAACiS,GAAmBC,EAAalS,CAAE,CAAC,CAC7C,CACF,CACH,CAGA,SAASmS,GACPD,EACAlS,EACA,CAIA,MAAMiT,EAAajT,EAAG,YAAcA,EAAG,OAAS,GAE1CkT,EAAYC,GAA6BnT,CAAE,EAC3CoT,EAAcC,GAAqBrT,CAAE,EAE3C,GAAI,CACF,OAAOkS,EAAYe,EAAYC,EAAWE,CAAW,CACtD,MAAW,CAEd,CAEE,MAAO,CAAE,CACX,CAGA,MAAME,GAAsB,8BAO5B,SAASH,GAA6BnT,EAAI,CACxC,OAAIA,GAAMsT,GAAoB,KAAKtT,EAAG,OAAO,EACpC,EAGF,CACT,CAUA,SAASqT,GAAqBrT,EAAI,CAChC,OAAI,OAAOA,EAAG,aAAgB,SACrBA,EAAG,YAGL,CACT,CAIA,SAASuT,GAAuB1V,EAAW,CAGzC,OAAI,OAAO,YAAgB,KAAe,OAAO,YAAY,UAAc,IAElEA,aAAqB,YAAY,UAEjC,EAEX,CAOA,SAASuU,GAAYpS,EAAI,CACvB,MAAM5N,EAAO4N,GAAMA,EAAG,KAItB,MAAI,CAAC5N,GAAQmhB,GAAuBvT,CAAE,EAEXA,EAAG,SAAW,MAAM,QAAQA,EAAG,OAAO,GAAKA,EAAG,QAAQ,QAAU,EAC/DA,EAAG,QAAQ,CAAC,EAAI,wBAGrC5N,CACT,CAOA,SAASigB,GAAerS,EAAI,CAC1B,MAAM5U,EAAU4U,GAAMA,EAAG,QAEzB,OAAK5U,EAIDA,EAAQ,OAAS,OAAOA,EAAQ,MAAM,SAAY,SAC7CA,EAAQ,MAAM,QAInBmoB,GAAuBvT,CAAE,GAAK,MAAM,QAAQA,EAAG,OAAO,GAAKA,EAAG,QAAQ,QAAU,EAC3EA,EAAG,QAAQ,CAAC,EAGd5U,EAZE,kBAaX,CAMA,SAASooB,GACPtB,EACArU,EACAZ,EACAwW,EACA,CACA,MAAMlB,EAAsBtV,GAAQA,EAAK,oBAAuB,OAC1D1K,EAAQmhB,GAAsBxB,EAAarU,EAAW0U,EAAoBkB,CAAgB,EAChG,OAAApI,GAAsB9Y,CAAK,EAC3BA,EAAM,MAAQ,QACV0K,GAAQA,EAAK,WACf1K,EAAM,SAAW0K,EAAK,UAEjB4B,GAAoBtM,CAAK,CAClC,CAMA,SAASohB,GACPzB,EACA9mB,EACA8S,EAAQ,OACRjB,EACAwW,EACA,CACA,MAAMlB,EAAsBtV,GAAQA,EAAK,oBAAuB,OAC1D1K,EAAQqhB,GAAgB1B,EAAa9mB,EAASmnB,EAAoBkB,CAAgB,EACxF,OAAAlhB,EAAM,MAAQ2L,EACVjB,GAAQA,EAAK,WACf1K,EAAM,SAAW0K,EAAK,UAEjB4B,GAAoBtM,CAAK,CAClC,CAKA,SAASmhB,GACPxB,EACArU,EACA0U,EACAkB,EACAjB,EACA,CACA,IAAIjgB,EAEJ,GAAI0O,GAAapD,CAAS,GAAOA,EAAY,MAG3C,OAAOmV,GAAed,EADHrU,EAC2B,KAAO,EAUvD,GAAIgW,GAAWhW,CAAS,GAAKiW,GAAejW,CAAS,EAAI,CACvD,MAAMkW,EAAelW,EAErB,GAAI,UAAYA,EACdtL,EAAQygB,GAAed,EAAarU,CAAW,MAC1C,CACL,MAAMzL,EAAO2hB,EAAa,OAASF,GAAWE,CAAY,EAAI,WAAa,gBACrE3oB,EAAU2oB,EAAa,QAAU,GAAG3hB,CAAI,KAAK2hB,EAAa,OAAO,GAAK3hB,EAC5EG,EAAQqhB,GAAgB1B,EAAa9mB,EAASmnB,EAAoBkB,CAAgB,EAClF3B,GAAsBvf,EAAOnH,CAAO,CAC1C,CACI,MAAI,SAAU2oB,IAEZxhB,EAAM,KAAO,CAAE,GAAGA,EAAM,KAAM,oBAAqB,GAAGwhB,EAAa,IAAI,EAAI,GAGtExhB,CACX,CACE,OAAIyO,GAAQnD,CAAS,EAEZmV,GAAed,EAAarU,CAAS,EAE1CsE,GAActE,CAAS,GAAKiV,GAAQjV,CAAS,GAK/CtL,EAAQ+f,GAAqBJ,EADLrU,EACmC0U,EAAoBC,CAAoB,EACnGnH,GAAsB9Y,EAAO,CAC3B,UAAW,EACjB,CAAK,EACMA,IAYTA,EAAQqhB,GAAgB1B,EAAarU,EAAY0U,EAAoBkB,CAAgB,EACrF3B,GAAsBvf,EAAO,GAAGsL,CAAS,EAAa,EACtDwN,GAAsB9Y,EAAO,CAC3B,UAAW,EACf,CAAG,EAEMA,EACT,CAEA,SAASqhB,GACP1B,EACA9mB,EACAmnB,EACAkB,EACA,CACA,MAAMlhB,EAAQ,CAAE,EAEhB,GAAIkhB,GAAoBlB,EAAoB,CAC1C,MAAM3J,EAASuJ,GAAiBD,EAAaK,CAAkB,EAC3D3J,EAAO,SACTrW,EAAM,UAAY,CAChB,OAAQ,CAAC,CAAE,MAAOnH,EAAS,WAAY,CAAE,OAAAwd,CAAM,EAAI,CACpD,GAEHyC,GAAsB9Y,EAAO,CAAE,UAAW,EAAI,CAAE,CACpD,CAEE,GAAI8L,GAAsBjT,CAAO,EAAG,CAClC,KAAM,CAAE,2BAAA4oB,EAA4B,2BAAAC,CAA0B,EAAK7oB,EAEnE,OAAAmH,EAAM,SAAW,CACf,QAASyhB,EACT,OAAQC,CACT,EACM1hB,CACX,CAEE,OAAAA,EAAM,QAAUnH,EACTmH,CACT,CAEA,SAASwgB,GACPlV,EACA,CAAE,qBAAA2U,CAAsB,EACxB,CACA,MAAM0B,EAAOC,GAA+BtW,CAAS,EAC/CuW,EAAc5B,EAAuB,oBAAsB,YAIjE,OAAIvR,GAAapD,CAAS,EACjB,oCAAoCuW,CAAW,mBAAmBvW,EAAU,OAAO,KAGxFiV,GAAQjV,CAAS,EAEZ,WADWwW,GAAmBxW,CAAS,CACnB,YAAYA,EAAU,IAAI,iBAAiBuW,CAAW,GAG5E,sBAAsBA,CAAW,eAAeF,CAAI,EAC7D,CAEA,SAASG,GAAmB1D,EAAK,CAC/B,GAAI,CACF,MAAM2D,EAAY,OAAO,eAAe3D,CAAG,EAC3C,OAAO2D,EAAYA,EAAU,YAAY,KAAO,MACjD,MAAW,CAEd,CACA,CAGA,SAAS3B,GAA2BhC,EAAK,CACvC,UAAWC,KAAQD,EACjB,GAAI,OAAO,UAAU,eAAe,KAAKA,EAAKC,CAAI,EAAG,CACnD,MAAMhd,EAAQ+c,EAAIC,CAAI,EACtB,GAAIhd,aAAiB,MACnB,OAAOA,CAEf,CAIA,CC1XA,SAAS2gB,GACPC,EACA,CACE,SAAA1hB,EACA,OAAAL,EACA,IAAAlE,CACJ,EAGE,CACA,MAAMsB,EAAU,CACd,SAAU2kB,EAAS,SACnB,QAAS,IAAI,KAAM,EAAC,YAAa,EACjC,GAAI1hB,GACFA,EAAS,KAAO,CACd,IAAK,CACH,KAAMA,EAAS,IAAI,KACnB,QAASA,EAAS,IAAI,OACvB,CACT,EACI,GAAI,CAAC,CAACL,GAAU,CAAC,CAAClE,GAAO,CAAE,IAAKD,GAAYC,CAAG,EAChD,EACKuC,EAAO2jB,GAA+BD,CAAQ,EAEpD,OAAO5kB,GAAeC,EAAS,CAACiB,CAAI,CAAC,CACvC,CAEA,SAAS2jB,GAA+BD,EAAU,CAIhD,MAAO,CAHiB,CACtB,KAAM,aACP,EACwBA,CAAQ,CACnC,CCpBA,MAAME,WAAsBhX,EAAW,CAMpC,YAAY3P,EAAS,CACpB,MAAM4mB,EAAO,CAEX,2BAA4B,GAC5B,GAAG5mB,CACJ,EACK6mB,EAAY7F,EAAO,mBAAqBiC,GAAc,EAC5DzL,GAAiBoP,EAAM,UAAW,CAAC,SAAS,EAAGC,CAAS,EAExD,MAAMD,CAAI,EAENA,EAAK,mBAAqB5F,EAAO,UACnCA,EAAO,SAAS,iBAAiB,mBAAoB,IAAM,CACrDA,EAAO,SAAS,kBAAoB,UACtC,KAAK,eAAgB,CAE/B,CAAO,CAEP,CAKG,mBAAmBlR,EAAWZ,EAAM,CACnC,OAAOuW,GAAmB,KAAK,SAAS,YAAa3V,EAAWZ,EAAM,KAAK,SAAS,gBAAgB,CACxG,CAKG,iBACC7R,EACA8S,EAAQ,OACRjB,EACA,CACA,OAAO0W,GAAiB,KAAK,SAAS,YAAavoB,EAAS8S,EAAOjB,EAAM,KAAK,SAAS,gBAAgB,CAC3G,CAOG,oBAAoBuX,EAAU,CAC7B,GAAI,CAAC,KAAK,aAAc,CACtB7qB,GAAeC,EAAO,KAAK,kDAAkD,EAC7E,MACN,CAEI,MAAMoG,EAAWukB,GAA2BC,EAAU,CACpD,SAAU,KAAK,eAAgB,EAC/B,IAAK,KAAK,OAAQ,EAClB,OAAQ,KAAK,WAAU,EAAG,MAChC,CAAK,EAID,KAAK,aAAaxkB,CAAQ,CAC9B,CAKG,cAAcuC,EAAO0K,EAAMvR,EAAO,CACjC,OAAA6G,EAAM,SAAWA,EAAM,UAAY,aAC5B,MAAM,cAAcA,EAAO0K,EAAMvR,CAAK,CACjD,CACA,CCrFA,MAAM/B,GAAe,OAAO,iBAAqB,KAAe,iBCL1DkrB,GAAY,CAACjhB,EAAOkhB,IACpBlhB,EAAQkhB,EAAW,CAAC,EACf,OAELlhB,EAAQkhB,EAAW,CAAC,EACf,oBAEF,OAGHC,GAAe,CACnB5kB,EACA6kB,EACAF,EACAG,IACG,CACH,IAAIC,EACAC,EACJ,OAAQC,GAAgB,CAClBJ,EAAO,OAAS,IACdI,GAAeH,KACjBE,EAAQH,EAAO,OAASE,GAAa,IAMjCC,GAASD,IAAc,UACzBA,EAAYF,EAAO,MACnBA,EAAO,MAAQG,EACfH,EAAO,OAASH,GAAUG,EAAO,MAAOF,CAAU,EAClD3kB,EAAS6kB,CAAM,GAItB,CACH,EClCMjG,EAAS3kB,ECmBTirB,GAAmB,IAChB,MAAM,KAAK,IAAG,CAAE,IAAI,KAAK,MAAM,KAAK,OAAQ,GAAI,KAAO,EAAE,EAAI,IAAI,GCDpEC,GAAqB,CAACC,EAAqB,KAAS,CACxD,MAAMC,EACJzG,EAAO,aAAeA,EAAO,YAAY,kBAAoBA,EAAO,YAAY,iBAAiB,YAAY,EAAE,CAAC,EAQlH,GAGE,CAACwG,GACAC,GAAmBA,EAAgB,cAAgB,GAAKA,EAAgB,cAAgB,YAAY,IAAK,EAE1G,OAAOA,CAEX,ECpBMC,GAAqB,IAAM,CAC/B,MAAMC,EAAWJ,GAAoB,EACrC,OAAQI,GAAYA,EAAS,iBAAoB,CACnD,ECAMC,GAAa,CAACvjB,EAAMwB,IAAU,CAClC,MAAM8hB,EAAWJ,GAAoB,EACrC,IAAIM,EAAiB,WAErB,OAAIF,IACG3G,EAAO,UAAYA,EAAO,SAAS,cAAiB0G,GAAoB,EAAG,EAC9EG,EAAiB,YACR7G,EAAO,UAAYA,EAAO,SAAS,aAC5C6G,EAAiB,UACRF,EAAS,OAClBE,EAAiBF,EAAS,KAAK,QAAQ,KAAM,GAAG,IAO7C,CACL,KAAAtjB,EACA,MAAO,OAAOwB,EAAU,IAAc,GAAKA,EAC3C,OAAQ,OACR,MAAO,EACP,QAPc,CAAE,EAQhB,GAAIyhB,GAAkB,EACtB,eAAAO,CACD,CACH,ECxBMC,GAAU,CACdvsB,EACA6G,EACAwkB,IACG,CACH,GAAI,CACF,GAAI,oBAAoB,oBAAoB,SAASrrB,CAAI,EAAG,CAC1D,MAAMwsB,EAAK,IAAI,oBAAoBC,GAAQ,CAKzC,QAAQ,UAAU,KAAK,IAAM,CAC3B5lB,EAAS4lB,EAAK,YAAc,CACtC,CAAS,CACT,CAAO,EACD,OAAAD,EAAG,QACD,OAAO,OACL,CACE,KAAAxsB,EACA,SAAU,EACX,EACDqrB,GAAQ,CAAE,CACX,CACF,EACMmB,CACb,CACG,MAAW,CAEd,CAEA,EC1BME,GAAYC,GAAO,CACvB,MAAMC,EAAsB3jB,GAAU,EAChCA,EAAM,OAAS,YAAewc,EAAO,UAAYA,EAAO,SAAS,kBAAoB,WACvFkH,EAAG1jB,CAAK,CAEX,EAEGwc,EAAO,WACT,iBAAiB,mBAAoBmH,EAAoB,EAAI,EAG7D,iBAAiB,WAAYA,EAAoB,EAAI,EAEzD,EC1BMC,GAAWF,GAAO,CACtB,IAAIG,EAAS,GACb,MAAO,IAAM,CACNA,IACHH,EAAI,EACJG,EAAS,GAEZ,CACH,ECLA,IAAIC,GAAkB,GAEtB,MAAMC,GAAiB,IAMdvH,EAAO,SAAS,kBAAoB,UAAY,CAACA,EAAO,SAAS,aAAe,EAAI,IAGvFwH,GAAsBhkB,GAAU,CAGhCwc,EAAO,SAAS,kBAAoB,UAAYsH,GAAkB,KAQpEA,GAAkB9jB,EAAM,OAAS,mBAAqBA,EAAM,UAAY,EAGxEikB,GAAuB,EAE3B,EAEMC,GAAqB,IAAM,CAC/B,iBAAiB,mBAAoBF,GAAoB,EAAI,EAK7D,iBAAiB,qBAAsBA,GAAoB,EAAI,CACjE,EAEMC,GAAwB,IAAM,CAClC,oBAAoB,mBAAoBD,GAAoB,EAAI,EAChE,oBAAoB,qBAAsBA,GAAoB,EAAI,CACpE,EAEMG,GAAuB,KACvB3H,EAAO,UAAYsH,GAAkB,IAKvCA,GAAkBC,GAAgB,EAClCG,GAAoB,GAEf,CACL,IAAI,iBAAkB,CACpB,OAAOJ,EACR,CACF,GCxDGM,GAAiBxmB,GAAa,CAC9B4e,EAAO,UAAYA,EAAO,SAAS,aACrC,iBAAiB,qBAAsB,IAAM5e,EAAQ,EAAI,EAAI,EAE7DA,EAAU,CAEd,ECAMymB,GAAgB,CAAC,KAAM,GAAI,EAQ3BC,GAAQ,CAACC,EAAUnC,EAAO,KAAO,CACrCgC,GAAc,IAAM,CAClB,MAAMI,EAAoBL,GAAsB,EAC1C1B,EAASW,GAAW,KAAK,EAC/B,IAAIqB,EAqBJ,MAAMlB,EAAKD,GAAQ,QAnBIoB,GAAY,CACjCA,EAAQ,QAAQC,GAAS,CACnBA,EAAM,OAAS,2BACjBpB,EAAG,WAAY,EAGXoB,EAAM,UAAYH,EAAkB,kBAKtC/B,EAAO,MAAQ,KAAK,IAAIkC,EAAM,UAAYzB,GAAoB,EAAE,CAAC,EACjET,EAAO,QAAQ,KAAKkC,CAAK,EACzBF,EAAO,EAAI,GAGvB,CAAO,CACF,CAEwC,EAErClB,IACFkB,EAASjC,GAAa+B,EAAU9B,EAAQ4B,GAAejC,EAAK,gBAAgB,EAElF,CAAG,CACH,ECvCMwC,GAAgB,CAAC,GAAK,GAAI,EAuB1BC,GAAQ,CAACN,EAAUnC,EAAO,KAAO,CAGrCkC,GACEV,GAAQ,IAAM,CACZ,MAAMnB,EAASW,GAAW,MAAO,CAAC,EAClC,IAAIqB,EAEAK,EAAe,EACfC,EAAiB,CAAE,EAEvB,MAAMC,EAAiBN,GAAY,CACjCA,EAAQ,QAAQC,GAAS,CAEvB,GAAI,CAACA,EAAM,eAAgB,CACzB,MAAMM,EAAoBF,EAAe,CAAC,EACpCG,EAAmBH,EAAeA,EAAe,OAAS,CAAC,EAO/DD,GACAG,GACAC,GACAP,EAAM,UAAYO,EAAiB,UAAY,KAC/CP,EAAM,UAAYM,EAAkB,UAAY,KAEhDH,GAAgBH,EAAM,MACtBI,EAAe,KAAKJ,CAAK,IAEzBG,EAAeH,EAAM,MACrBI,EAAiB,CAACJ,CAAK,EAErC,CACA,CAAS,EAIGG,EAAerC,EAAO,QACxBA,EAAO,MAAQqC,EACfrC,EAAO,QAAUsC,EACjBN,EAAQ,EAEX,EAEKlB,EAAKD,GAAQ,eAAgB0B,CAAa,EAC5CzB,IACFkB,EAASjC,GAAa+B,EAAU9B,EAAQmC,GAAexC,EAAK,gBAAgB,EAE5EqB,GAAS,IAAM,CACbuB,EAAczB,EAAG,aAAe,EAChCkB,EAAO,EAAI,CACrB,CAAS,EAKD,WAAWA,EAAQ,CAAC,EAE5B,CAAK,CACF,CACH,ECrFMU,GAAgB,CAAC,IAAK,GAAG,EAWzBC,GAAQ,CAACb,EAAUnC,EAAO,KAAO,CACrCgC,GAAc,IAAM,CAClB,MAAMI,EAAoBL,GAAsB,EAC1C1B,EAASW,GAAW,KAAK,EAE/B,IAAIqB,EAEJ,MAAMY,EAAeV,GAAU,CAEzBA,EAAM,UAAYH,EAAkB,kBACtC/B,EAAO,MAAQkC,EAAM,gBAAkBA,EAAM,UAC7ClC,EAAO,QAAQ,KAAKkC,CAAK,EACzBF,EAAO,EAAI,EAEd,EAEKO,EAAiBN,GAAY,CAChCA,EAAU,QAAQW,CAAW,CAC/B,EAEK9B,EAAKD,GAAQ,cAAe0B,CAAa,EAE/CP,EAASjC,GAAa+B,EAAU9B,EAAQ0C,GAAe/C,EAAK,gBAAgB,EAExEmB,GACFE,GACEG,GAAQ,IAAM,CACZoB,EAAczB,EAAG,aAAe,EAChCA,EAAG,WAAY,CACzB,CAAS,CACF,CAEP,CAAG,CACH,ECnDA,IAAI+B,GAA2B,EAC3BC,GAAwB,IACxBC,GAAwB,EAE5B,MAAMC,GAAkBf,GAAY,CAClCA,EAAQ,QAAQvtB,GAAK,CACfA,EAAE,gBACJouB,GAAwB,KAAK,IAAIA,GAAuBpuB,EAAE,aAAa,EACvEquB,GAAwB,KAAK,IAAIA,GAAuBruB,EAAE,aAAa,EAEvEmuB,GAA2BE,IAAyBA,GAAwBD,IAAyB,EAAI,EAAI,EAEnH,CAAG,CACH,EAEA,IAAIhC,GAMJ,MAAMmC,GAAsB,IACnBnC,GAAK+B,GAA2B,YAAY,kBAAoB,EAMnEK,GAA+B,IAAM,CACrC,qBAAsB,aAAepC,KAEzCA,GAAKD,GAAQ,QAASmC,GAAgB,CACpC,KAAM,QACN,SAAU,GACV,kBAAmB,CACvB,CAAK,EACL,EClCMG,EAAyB,CAAE,EAI3BC,GAAwB,IAAI,IAI5BC,GAA6B,GAInC,IAAIC,GAAuB,EAM3B,MAAMC,GAAmC,IAChCN,GAAqB,EAAGK,GAO3BE,GAAgC,IAAM,CAC1C,MAAMC,EAA4B,KAAK,IACrCN,EAAuB,OAAS,EAChC,KAAK,MAAMI,GAAkC,EAAG,EAAE,CACnD,EAED,OAAOJ,EAAuBM,CAAyB,CACzD,EAIMC,GAA+B,GAO/BC,GAA8B,CAAE,EAQhCC,GAA2B1B,GAAU,CAIzC,GAHAyB,GAA4B,QAAQ1C,GAAMA,EAAGiB,CAAK,CAAC,EAG/C,EAAEA,EAAM,eAAiBA,EAAM,YAAc,eAAgB,OAGjE,MAAM2B,EAAwBV,EAAuBA,EAAuB,OAAS,CAAC,EAEhFW,EAAsBV,GAAsB,IAAIlB,EAAM,aAAa,EAIzE,GACE4B,GACAX,EAAuB,OAASO,IAC/BG,GAAyB3B,EAAM,SAAW2B,EAAsB,QACjE,CAEA,GAAIC,EAGE5B,EAAM,SAAW4B,EAAoB,SACvCA,EAAoB,QAAU,CAAC5B,CAAK,EACpC4B,EAAoB,QAAU5B,EAAM,UAEpCA,EAAM,WAAa4B,EAAoB,SACvC5B,EAAM,aAAe4B,EAAoB,QAAQ,CAAC,GAAKA,EAAoB,QAAQ,CAAC,EAAE,YAEtFA,EAAoB,QAAQ,KAAK5B,CAAK,MAEnC,CACL,MAAM6B,EAAc,CAClB,GAAI7B,EAAM,cACV,QAASA,EAAM,SACf,QAAS,CAACA,CAAK,CAChB,EACDkB,GAAsB,IAAIW,EAAY,GAAIA,CAAW,EACrDZ,EAAuB,KAAKY,CAAW,CAC7C,CAGIZ,EAAuB,KAAK,CAAC9hB,EAAGC,IAAMA,EAAE,QAAUD,EAAE,OAAO,EACvD8hB,EAAuB,OAASO,IAClCP,EAAuB,OAAOO,EAA4B,EAAE,QAAQ7P,GAAKuP,GAAsB,OAAOvP,EAAE,EAAE,CAAC,CAEjH,CACA,EC/FMmQ,GAAY/C,GAAO,CACvB,MAAMgD,EAAMlK,EAAO,qBAAuBA,EAAO,WAEjD,IAAImK,EAAS,GAEb,OAAAjD,EAAKE,GAAQF,CAAE,EAGXlH,EAAO,UAAYA,EAAO,SAAS,kBAAoB,SACzDkH,EAAI,GAEJiD,EAASD,EAAIhD,CAAE,EACfD,GAASC,CAAE,GAENiD,CACT,ECZMC,GAAgB,CAAC,IAAK,GAAG,EA6BzBC,GAAQ,CAACtC,EAAUnC,EAAO,KAAO,CAE/B,2BAA4B5F,GAAU,kBAAmB,uBAAuB,WAItF4H,GAAc,IAAM,CAElBuB,GAA8B,EAE9B,MAAMlD,EAASW,GAAW,KAAK,EAE/B,IAAIqB,EAEJ,MAAMO,EAAiBN,GAAY,CAOjC+B,GAAS,IAAM,CACb/B,EAAQ,QAAQ2B,EAAuB,EAEvC,MAAMS,EAAMb,GAA+B,EAEvCa,GAAOA,EAAI,UAAYrE,EAAO,QAChCA,EAAO,MAAQqE,EAAI,QACnBrE,EAAO,QAAUqE,EAAI,QACrBrC,EAAQ,EAElB,CAAO,CACF,EAEKlB,EAAKD,GAAQ,QAAS0B,EAAe,CAOzC,kBAAmB5C,EAAK,mBAAqB,KAAOA,EAAK,kBAAoB0D,EACnF,CAAK,EAEDrB,EAASjC,GAAa+B,EAAU9B,EAAQmE,GAAexE,EAAK,gBAAgB,EAExEmB,IAGFA,EAAG,QAAQ,CAAE,KAAM,cAAe,SAAU,GAAM,EAElDE,GAAS,IAAM,CACbuB,EAAczB,EAAG,aAAe,EAChCkB,EAAO,EAAI,CACnB,CAAO,EAEP,CAAG,CACH,ECrFMsC,GAAgB,CAAC,KAAM,GAAI,EAE3BC,GAAoB,CAAE,EAatBC,GAAQ,CAAC1C,EAAUnC,EAAO,KAAO,CACrCgC,GAAc,IAAM,CAClB,MAAMI,EAAoBL,GAAsB,EAC1C1B,EAASW,GAAW,KAAK,EAC/B,IAAIqB,EAEJ,MAAMO,EAAiBN,GAAY,CAG5BtC,EAAK,mBAERsC,EAAUA,EAAQ,MAAM,EAAE,GAG5BA,EAAQ,QAAQC,GAAS,CAEnBA,EAAM,UAAYH,EAAkB,kBAOtC/B,EAAO,MAAQ,KAAK,IAAIkC,EAAM,UAAYzB,GAAoB,EAAE,CAAC,EACjET,EAAO,QAAU,CAACkC,CAAK,EACvBF,EAAQ,EAElB,CAAO,CACF,EAEKlB,EAAKD,GAAQ,2BAA4B0B,CAAa,EAE5D,GAAIzB,EAAI,CACNkB,EAASjC,GAAa+B,EAAU9B,EAAQsE,GAAe3E,EAAK,gBAAgB,EAE5E,MAAM8E,EAAgBtD,GAAQ,IAAM,CAC7BoD,GAAkBvE,EAAO,EAAE,IAC9BuC,EAAczB,EAAG,aAAe,EAChCA,EAAG,WAAY,EACfyD,GAAkBvE,EAAO,EAAE,EAAI,GAC/BgC,EAAO,EAAI,EAErB,CAAO,EAKD,CAAC,UAAW,OAAO,EAAE,QAAQ1tB,GAAQ,CAI/BylB,EAAO,UACT,iBAAiBzlB,EAAM,IAAM0vB,GAASS,CAAa,EAAI,CACrD,KAAM,GACN,QAAS,EACrB,CAAW,CAEX,CAAO,EAEDzD,GAASyD,CAAa,CAC5B,CACA,CAAG,CACH,ECjFMC,GAAiB,CAAC,IAAK,IAAI,EAM3BC,GAAaxpB,GAAa,CAC1B4e,EAAO,UAAYA,EAAO,SAAS,aACrC4H,GAAc,IAAMgD,GAAUxpB,CAAQ,CAAC,EAC9B4e,EAAO,UAAYA,EAAO,SAAS,aAAe,WAC3D,iBAAiB,OAAQ,IAAM4K,GAAUxpB,CAAQ,EAAG,EAAI,EAGxD,WAAWA,EAAU,CAAC,CAE1B,EAiBMypB,GAAS,CAAC9C,EAAUnC,EAAO,KAAO,CACtC,MAAMK,EAASW,GAAW,MAAM,EAC1BqB,EAASjC,GAAa+B,EAAU9B,EAAQ0E,GAAgB/E,EAAK,gBAAgB,EAEnFgF,GAAU,IAAM,CACd,MAAMnE,EAAkBF,GAAoB,EAExCE,IAKFR,EAAO,MAAQ,KAAK,IAAIQ,EAAgB,cAAgBC,GAAoB,EAAE,CAAC,EAE/ET,EAAO,QAAU,CAACQ,CAAe,EACjCwB,EAAO,EAAI,EAEjB,CAAG,CACH,EClEM7tB,GAAW,CAAE,EACbC,GAAe,CAAE,EAEvB,IAAIywB,GACAC,GACAC,GACAC,GACAC,GASJ,SAASC,GACP/pB,EACAgqB,EAAiB,GACjB,CACA,OAAOC,GAAkB,MAAOjqB,EAAUkqB,GAAeR,GAAcM,CAAc,CACvF,CASA,SAASG,GACPnqB,EACAgqB,EAAiB,GACjB,CACA,OAAOC,GAAkB,MAAOjqB,EAAUoqB,GAAeR,GAAcI,CAAc,CACvF,CAMA,SAASK,GAA6BrqB,EAAU,CAC9C,OAAOiqB,GAAkB,MAAOjqB,EAAUsqB,GAAeX,EAAY,CACvE,CAKA,SAASY,GAA8BvqB,EAAU,CAC/C,OAAOiqB,GAAkB,OAAQjqB,EAAUwqB,GAAgBX,EAAa,CAC1E,CAMA,SAASY,GACPzqB,EACA,CACA,OAAOiqB,GAAkB,MAAOjqB,EAAU0qB,GAAeZ,EAAY,CACvE,CAOA,SAASa,GACPxxB,EACA6G,EACA,CACA,OAAA9G,GAAWC,EAAM6G,CAAQ,EAEpB/G,GAAaE,CAAI,IACpByxB,GAA8BzxB,CAAI,EAClCF,GAAaE,CAAI,EAAI,IAGhB0xB,GAAmB1xB,EAAM6G,CAAQ,CAC1C,CAGA,SAAStG,GAAgBP,EAAMQ,EAAM,CACnC,MAAMC,EAAeZ,GAASG,CAAI,EAElC,GAAI,GAACS,GAAgB,CAACA,EAAa,QAInC,UAAWR,KAAWQ,EACpB,GAAI,CACFR,EAAQO,CAAI,CACb,OAAQJ,EAAG,CACVC,IACEC,EAAO,MACL;AAAA,QAA0DN,CAAI;AAAA,QAAWU,GAAgBT,CAAO,CAAC;AAAA,QACjGG,CACD,CACT,CAEA,CAEA,SAAS2wB,IAAgB,CACvB,OAAOjD,GACLpC,GAAU,CACRnrB,GAAgB,MAAO,CACrB,OAAAmrB,CACR,CAAO,EACD6E,GAAe7E,CAChB,EAGD,CAAE,iBAAkB,EAAM,CAC3B,CACH,CAEA,SAASyF,IAAgB,CACvB,OAAO9C,GAAM3C,GAAU,CACrBnrB,GAAgB,MAAO,CACrB,OAAAmrB,CACN,CAAK,EACD8E,GAAe9E,CACnB,CAAG,CACH,CAEA,SAASuF,IAAgB,CACvB,OAAOf,GACLxE,GAAU,CACRnrB,GAAgB,MAAO,CACrB,OAAAmrB,CACR,CAAO,EACD+E,GAAe/E,CAChB,EAGD,CAAE,iBAAkB,EAAM,CAC3B,CACH,CAEA,SAAS2F,IAAiB,CACxB,OAAOf,GAAO5E,GAAU,CACtBnrB,GAAgB,OAAQ,CACtB,OAAAmrB,CACN,CAAK,EACDgF,GAAgBhF,CACpB,CAAG,CACH,CAEA,SAAS6F,IAAgB,CACvB,OAAOzB,GAAMpE,GAAU,CACrBnrB,GAAgB,MAAO,CACrB,OAAAmrB,CACN,CAAK,EACDiF,GAAejF,CACnB,CAAG,CACH,CAEA,SAASoF,GACP9wB,EACA6G,EACA1G,EACAwxB,EACAd,EAAiB,GACjB,CACA9wB,GAAWC,EAAM6G,CAAQ,EAEzB,IAAIspB,EAEJ,OAAKrwB,GAAaE,CAAI,IACpBmwB,EAAgBhwB,EAAc,EAC9BL,GAAaE,CAAI,EAAI,IAGnB2xB,GACF9qB,EAAS,CAAE,OAAQ8qB,EAAe,EAG7BD,GAAmB1xB,EAAM6G,EAAUgqB,EAAiBV,EAAgB,MAAS,CACtF,CAEA,SAASsB,GAA8BzxB,EAAM,CAC3C,MAAMyE,EAAU,CAAE,EAGdzE,IAAS,UACXyE,EAAQ,kBAAoB,GAG9B8nB,GACEvsB,EACA2tB,GAAW,CACTptB,GAAgBP,EAAM,CAAE,QAAA2tB,EAAS,CAClC,EACDlpB,CACD,CACH,CAEA,SAAS1E,GAAWC,EAAMC,EAAS,CACjCJ,GAASG,CAAI,EAAIH,GAASG,CAAI,GAAK,CAAE,EACpCH,GAASG,CAAI,EAAI,KAAKC,CAAO,CAChC,CAGA,SAASyxB,GACP1xB,EACA6G,EACAspB,EACA,CACA,MAAO,IAAM,CACPA,GACFA,EAAe,EAGjB,MAAM1vB,EAAeZ,GAASG,CAAI,EAElC,GAAI,CAACS,EACH,OAGF,MAAMmxB,EAAQnxB,EAAa,QAAQoG,CAAQ,EACvC+qB,IAAU,IACZnxB,EAAa,OAAOmxB,EAAO,CAAC,CAE/B,CACH,CAKA,SAASC,GAAyBjE,EAAO,CACvC,MAAO,aAAcA,CACvB,CC1OA,SAASkE,GAAmBxnB,EAAO,CACjC,OAAO,OAAOA,GAAU,UAAY,SAASA,CAAK,CACpD,CAOA,SAASynB,EACPnkB,EACAokB,EACAC,EACA,CAAE,GAAG1jB,CAAK,EACV,CACA,MAAM2jB,EAAkBruB,EAAW+J,CAAU,EAAE,gBAC/C,OAAIskB,GAAmBA,EAAkBF,GAEnC,OAAQpkB,EAAa,iBAAoB,YAC1CA,EAAa,gBAAgBokB,CAAkB,EAK7CrkB,GAAeC,EAAY,IAAM,CACtC,MAAMzL,EAAOgL,GAAkB,CAC7B,UAAW6kB,EACX,GAAGzjB,CACT,CAAK,EAED,OAAIpM,GACFA,EAAK,IAAI8vB,CAAO,EAGX9vB,CACX,CAAG,CACH,CAkBA,SAASgwB,GAA4B1tB,EAAS,CAC5C,MAAMqF,EAASoC,EAAW,EAC1B,GAAI,CAACpC,EACH,OAGF,KAAM,CAAE,KAAAhB,EAAM,YAAA+D,EAAa,WAAYulB,EAAkB,UAAArmB,CAAS,EAAKtH,EAEjE,CAAE,QAAA4tB,EAAS,YAAAC,GAAgBxoB,EAAO,WAAY,EAG9CyoB,EAASzoB,EAAO,qBAAqB,QAAQ,EAC7C0oB,EAAWD,GAAUA,EAAO,YAAa,EAEzCnwB,EAAQiK,EAAiB,EAEzBomB,EAAOrwB,EAAM,QAAS,EACtBswB,EAAcD,IAAS,OAAYA,EAAK,OAASA,EAAK,IAAMA,EAAK,WAAa,OAEpF,IAAIE,EACJ,GAAI,CAEFA,EAAYvwB,EAAM,aAAc,EAAC,SAAS,QAAQ,UACnD,MAAW,CAEd,CAEE,MAAMyI,EAAa,CACjB,QAAAwnB,EACA,YAAAC,EAEA,KAAMI,GAAe,OACrB,WAAYC,GAAa,OACzB,UAAWH,GAAY,OAEvB,YAAA3lB,EAKA,sBAAuB4Y,EAAO,WAAaA,EAAO,UAAU,UAE5D,GAAG2M,CACJ,EAED,OAAOjlB,GAAkB,CACvB,KAAArE,EACA,WAAA+B,EACA,UAAAkB,EACA,aAAc,CACZ,WAAY,EACb,CACL,CAAG,CACH,CAGA,SAAS6mB,IAA2B,CAElC,OAAOnN,GAAUA,EAAO,kBAAoBA,EAAO,WACrD,CAMA,SAASoN,EAAQ7mB,EAAM,CACrB,OAAOA,EAAO,GAChB,CChHA,SAAS8mB,IAA2B,CAClC,IAAIC,EAAqB,EACrBC,EACAC,EAEJ,GAAI,CAACC,GAAmB,EACtB,OAGF,IAAIC,EAAW,GACf,SAASC,GAAkB,CACrBD,IAGJA,EAAW,GACPF,GACFI,GAAsBN,EAAoBC,EAAoBC,CAAc,EAE9EK,EAAmB,EACvB,CAEE,MAAMA,EAAoB1C,GAA6B,CAAC,CAAE,OAAAlF,CAAM,IAAO,CACrE,MAAMkC,EAAQlC,EAAO,QAAQA,EAAO,QAAQ,OAAS,CAAC,EACjDkC,IAGLmF,EAAqBrH,EAAO,MAC5BsH,EAAqBpF,EACtB,EAAE,EAAI,EAGPlB,GAAS,IAAM,CACb0G,EAAiB,CACrB,CAAG,EAKD,WAAW,IAAM,CACf,MAAMtpB,EAASoC,EAAW,EAE1B,GAAI,CAACpC,EACH,OAGF,MAAMypB,EAA6BzpB,EAAO,GAAG,sBAAuB,IAAM,CACxEspB,EAAiB,EACjBG,GAA8BA,EAA4B,CAChE,CAAK,EAEK7xB,EAAaC,EAAe,EAC5BC,EAAWF,GAAcG,EAAYH,CAAU,EAC/CyP,EAAWvP,GAAYiC,EAAWjC,CAAQ,EAC5CuP,GAAYA,EAAS,KAAO,aAC9B8hB,EAAiBrxB,EAAS,YAAW,EAAG,OAE3C,EAAE,CAAC,CACN,CAEA,SAASyxB,GAAsBG,EAAU5F,EAAOqF,EAAgB,CAC9D5yB,IAAeC,EAAO,IAAI,qBAAqBkzB,CAAQ,GAAG,EAE1D,MAAMznB,EAAY8mB,GAASY,GAAgC,IAAO7F,GAASA,EAAM,WAAc,EAAE,EAC3F8F,EAAYrnB,IAAkB,aAAc,EAAC,gBAE7CvD,EAAO8kB,EAAQ+F,GAAiB/F,EAAM,QAAQ,CAAC,GAAKA,EAAM,QAAQ,CAAC,EAAE,IAAI,EAAI,eAE7E/iB,EAAapC,GAAkB,CACnC,CAACwC,CAAgC,EAAG,wBACpC,CAACC,EAA4B,EAAG,kBAChC,CAACW,EAAiC,EAAI+hB,GAASA,EAAM,UAAa,EAElE,0BAA2BqF,CAC/B,CAAG,EAEK9wB,EAAOgwB,GAA4B,CACvC,KAAArpB,EACA,YAAa4qB,EACb,WAAA7oB,EACA,UAAAkB,CACJ,CAAG,EAEG5J,IACFA,EAAK,SAAS,MAAO,CACnB,CAACsI,EAA0C,EAAG,GAC9C,CAACD,EAA2C,EAAGgpB,CACrD,CAAK,EAIDrxB,EAAK,IAAI4J,CAAS,EAEtB,CAEA,SAASmnB,IAAsB,CAC7B,GAAI,CACF,OAAO,oBAAoB,oBAAoB,SAAS,cAAc,CACvE,MAAW,CACV,MAAO,EACX,CACA,CC1GA,MAAMU,GAAmB,WAEzB,IAAIC,GAAqB,EAErBC,EAAgB,CAAE,EAClBC,EACAC,GAQJ,SAASC,GAAuB,CAAE,yBAAAC,GAA4B,CAC5D,MAAMC,EAAcvB,GAA0B,EAC9C,GAAIuB,GAAeV,EAA8B,CAE3CU,EAAY,MACd1O,EAAO,YAAY,KAAK,qBAAqB,EAE/C,MAAM2O,EAAqBC,GAAW,EAChCC,EAAqBC,GAAW,EAChCC,EAAsBC,GAAY,EAClCC,EAAqBR,EAA2BpB,GAAwB,EAAK6B,GAAW,EAE9F,MAAO,IAAM,CACXP,EAAoB,EACpBE,EAAoB,EACpBE,EAAqB,EACrBE,GAAsBA,EAAoB,CAC3C,CACL,CAEE,MAAO,MACT,CAKA,SAASE,IAAyB,CAChCpD,GAAqC,WAAY,CAAC,CAAE,QAAA7D,KAAc,CAChE,MAAMkH,EAASlzB,EAAe,EAC9B,GAAI,CAACkzB,EACH,OAGF,KAAM,CAAE,GAAIC,EAAU,gBAAiBC,CAAsB,EAAGlxB,EAAWgxB,CAAM,EAEjF,UAAWjH,KAASD,EAAS,CAC3B,MAAM5hB,EAAY8mB,EAASY,EAAiC7F,EAAM,SAAS,EACrEoH,EAAWnC,EAAQjF,EAAM,QAAQ,EAEnCkH,IAAa,cAAgBC,GAAwBhpB,EAAYgpB,GAQrEhD,EAAgB8C,EAAQ9oB,EAAWA,EAAYipB,EAAU,CACvD,KAAM,yBACN,GAAI,eACJ,WAAY,CACV,CAAC/pB,CAAgC,EAAG,yBACrC,CACT,CAAO,CACP,CACA,CAAG,CACH,CAKA,SAASgqB,IAAmC,CAIzB,IAAI,oBAAoBxI,GAAQ,CAC/C,MAAMoI,EAASlzB,EAAe,EAC9B,GAAKkzB,EAGL,UAAWjH,KAASnB,EAAK,aAAe,CACtC,GAAI,CAACmB,EAAM,QAAQ,CAAC,EAClB,SAGF,MAAM7hB,EAAY8mB,EAASY,EAAiC7F,EAAM,SAAS,EAErE,CAAE,gBAAiBmH,EAAsB,GAAID,CAAU,EAAGjxB,EAAWgxB,CAAM,EAEjF,GAAIC,IAAa,cAAgBC,GAAwBhpB,EAAYgpB,EAKnE,SAGF,MAAMC,EAAWnC,EAAQjF,EAAM,QAAQ,EAEjC/iB,EAAa,CACjB,CAACI,CAAgC,EAAG,yBACrC,EAEKiqB,EAAgBtH,EAAM,QAAQ,CAAC,EAC/B,CAAE,QAAAuH,EAAS,YAAAC,EAAa,UAAAC,EAAW,mBAAAC,EAAoB,mBAAAC,CAAkB,EAAKL,EACpFrqB,EAAW,wBAAwB,EAAIsqB,EACvCtqB,EAAW,6BAA6B,EAAIuqB,EACxCC,IACFxqB,EAAW,eAAe,EAAIwqB,GAE5BC,IACFzqB,EAAW,eAAe,EAAIyqB,GAE5BC,IAAuB,KACzB1qB,EAAW,qCAAqC,EAAI0qB,GAGtDxD,EAAgB8C,EAAQ9oB,EAAWA,EAAYipB,EAAU,CACvD,KAAM,yBACN,GAAI,0BACJ,WAAAnqB,CACR,CAAO,CACP,CACA,CAAG,EAEQ,QAAQ,CAAE,KAAM,uBAAwB,SAAU,GAAM,CACnE,CAKA,SAAS2qB,IAA4B,CACnChE,GAAqC,QAAS,CAAC,CAAE,QAAA7D,KAAc,CAC7D,MAAMkH,EAASlzB,EAAe,EAC9B,GAAKkzB,GAGL,UAAWjH,KAASD,EAClB,GAAIC,EAAM,OAAS,QAAS,CAC1B,MAAM7hB,EAAY8mB,EAASY,EAAiC7F,EAAM,SAAS,EACrEoH,EAAWnC,EAAQjF,EAAM,QAAQ,EAEjC6H,EAAc,CAClB,KAAM9B,GAAiB/F,EAAM,MAAM,EACnC,GAAI,kBAAkBA,EAAM,IAAI,GAChC,UAAW7hB,EACX,WAAY,CACV,CAACd,CAAgC,EAAG,yBACrC,CACF,EAEKyqB,EAAgBC,GAAiB/H,EAAM,MAAM,EAC/C8H,IACFD,EAAY,WAAW,mBAAmB,EAAIC,GAGhD3D,EAAgB8C,EAAQ9oB,EAAWA,EAAYipB,EAAUS,CAAW,CAC5E,EAEA,CAAG,CACH,CAMA,SAASd,IAAY,CACnB,OAAO/D,GAA6B,CAAC,CAAE,OAAAlF,KAAa,CAClD,MAAMkC,EAAQlC,EAAO,QAAQA,EAAO,QAAQ,OAAS,CAAC,EACjDkC,IAGLkG,EAAc,IAAS,CAAE,MAAOpI,EAAO,MAAO,KAAM,EAAI,EACxDsI,GAAYpG,EACb,EAAE,EAAI,CACT,CAGA,SAAS2G,IAAY,CACnB,OAAOvD,GAA6B,CAAC,CAAE,OAAAtF,KAAa,CAClD,MAAMkC,EAAQlC,EAAO,QAAQA,EAAO,QAAQ,OAAS,CAAC,EACjDkC,IAILkG,EAAc,IAAS,CAAE,MAAOpI,EAAO,MAAO,KAAM,aAAe,EACnEqI,EAAYnG,EACb,EAAE,EAAI,CACT,CAGA,SAASyG,IAAY,CACnB,OAAOnD,GAA6B,CAAC,CAAE,OAAAxF,KAAa,CAClD,MAAMkC,EAAQlC,EAAO,QAAQA,EAAO,QAAQ,OAAS,CAAC,EACtD,GAAI,CAACkC,EACH,OAGF,MAAMgI,EAAa/C,EAAQY,CAA8B,EACnD1nB,EAAY8mB,EAAQjF,EAAM,SAAS,EACzCkG,EAAc,IAAS,CAAE,MAAOpI,EAAO,MAAO,KAAM,aAAe,EACnEoI,EAAc,UAAU,EAAI,CAAE,MAAO8B,EAAa7pB,EAAW,KAAM,QAAU,CACjF,CAAG,CACH,CAEA,SAAS0oB,IAAa,CACpB,OAAOrD,GAA8B,CAAC,CAAE,OAAA1F,KAAa,CACrCA,EAAO,QAAQA,EAAO,QAAQ,OAAS,CAAC,IAKtDoI,EAAc,KAAU,CAAE,MAAOpI,EAAO,MAAO,KAAM,aAAe,EACxE,CAAG,CACH,CAGA,SAASmK,GAAsB1zB,EAAMsC,EAAS,CAC5C,MAAM0vB,EAAcvB,GAA0B,EAC9C,GAAI,CAACuB,GAAe,CAACA,EAAY,YAAc,CAACV,EAE9C,OAGF,MAAMmC,EAAa/C,EAAQY,CAA4B,EAEjDqC,EAAqB3B,EAAY,WAAY,EAE7C,CAAE,GAAAxwB,EAAI,gBAAiBoyB,CAAoB,EAAKlyB,EAAW1B,CAAI,EAoDrE,GAlDA2zB,EAAmB,MAAMjC,EAAkB,EAAE,QAAQjG,GAAS,CAC5D,MAAM7hB,EAAY8mB,EAAQjF,EAAM,SAAS,EACnCoH,EAAWnC,EAKf,KAAK,IAAI,EAAGjF,EAAM,QAAQ,CAC3B,EAED,GAAI,EAAAjqB,IAAO,cAAgBoyB,GAAwBH,EAAa7pB,EAAYgqB,GAI5E,OAAQnI,EAAM,UAAS,CACrB,IAAK,aAAc,CACjBoI,GAAoB7zB,EAAMyrB,EAAQgI,CAAU,EAC5C,KACR,CACM,IAAK,OACL,IAAK,QACL,IAAK,UAAW,CACdK,GAAiB9zB,EAAMyrB,EAAO7hB,EAAWipB,EAAUY,CAAU,EAG7D,MAAMM,EAAc9I,GAAsB,EAEpC+I,EAAevI,EAAM,UAAYsI,EAAY,gBAE/CtI,EAAM,OAAS,eAAiBuI,IAClCrC,EAAc,GAAQ,CAAE,MAAOlG,EAAM,UAAW,KAAM,aAAe,GAEnEA,EAAM,OAAS,0BAA4BuI,IAC7CrC,EAAc,IAAS,CAAE,MAAOlG,EAAM,UAAW,KAAM,aAAe,GAExE,KACR,CACM,IAAK,WAAY,CACfwI,GAAkBj0B,EAAMyrB,EAAQA,EAAM,KAAM7hB,EAAWipB,EAAUY,CAAU,EAC3E,KACR,CAEA,CACA,CAAG,EAED/B,GAAqB,KAAK,IAAIiC,EAAmB,OAAS,EAAG,CAAC,EAE9DO,GAAgBl0B,CAAI,EAGhBwB,IAAO,WAAY,CACrB2yB,GAAkCxC,CAAa,EAE/C,MAAMyC,EAAUzC,EAAc,UAAU,EACpCyC,GAAWzC,EAAc,MAE3B/B,EAAgB5vB,EAAMo0B,EAAQ,MAAOA,EAAQ,MAAQ1D,EAAQiB,EAAc,IAAO,KAAK,EAAG,CACxF,KAAM,oBACN,GAAI,YACJ,WAAY,CACV,CAAC7oB,CAAgC,EAAG,yBACrC,CACT,CAAO,EAGD,OAAO6oB,EAAc,UAAU,IAM7B,EAAE,QAASA,IAAkB,CAACrvB,EAAQ,0BACxC,OAAOqvB,EAAc,IAGvB,OAAO,QAAQA,CAAa,EAAE,QAAQ,CAAC,CAAC0C,EAAiBC,CAAW,IAAM,CACxEpsB,GAAemsB,EAAiBC,EAAY,MAAOA,EAAY,IAAI,CACzE,CAAK,EAGDt0B,EAAK,aAAa,yBAA0ByzB,CAAU,EAQtDzzB,EAAK,aAAa,8BAA+BgqB,IAAoB,EAErEuK,GAAuBv0B,CAAI,CAC/B,CAEE4xB,EAAY,OACZC,GAAY,OACZF,EAAgB,CAAE,CACpB,CAMA,SAASmC,GACP9zB,EACAyrB,EACA7hB,EACAipB,EACAY,EACA,CACA,MAAMxJ,EAAWJ,GAAmB,EAAK,EACnC2K,EAAc9D,EAAQzG,EAAWA,EAAS,aAAe,CAAC,EAU1DwK,EAAwBhB,EAAa,KAAK,IAAI7pB,EAAW4qB,CAAW,EACpEE,EAAiBjB,EAAa7pB,EAC9B+qB,EAAsBD,EAAiB7B,EAEvCnqB,EAAa,CACjB,CAACI,CAAgC,EAAG,+BACrC,EAED,OAAI2rB,IAA0BC,IAC5BhsB,EAAW,gDAAgD,EAAI,GAC/DA,EAAW,mCAAmC,EAAI+rB,GAGpD7E,EAAgB5vB,EAAMy0B,EAAuBE,EAAqB,CAChE,KAAMlJ,EAAM,KACZ,GAAIA,EAAM,UACV,WAAA/iB,CACJ,CAAG,EAEM+rB,CACT,CAGA,SAASZ,GAAoB7zB,EAAMyrB,EAAOgI,EAAY,CACnD,CAAC,cAAe,WAAY,wBAAyB,YAAa,SAAS,EAAI,QAAQ3sB,GAAS,CAC/F8tB,GAAgC50B,EAAMyrB,EAAO3kB,EAAO2sB,CAAU,CAClE,CAAG,EACDmB,GAAgC50B,EAAMyrB,EAAO,mBAAoBgI,EAAY,SAAS,EACtFmB,GAAgC50B,EAAMyrB,EAAO,QAASgI,EAAY,OAAO,EACzEmB,GAAgC50B,EAAMyrB,EAAO,eAAgBgI,EAAY,KAAK,EAE9EoB,GAAY70B,EAAMyrB,EAAOgI,CAAU,CACrC,CAGA,SAASmB,GACP50B,EACAyrB,EACA3kB,EACA2sB,EACA9sB,EAAOG,EACP,CACA,MAAMguB,EAAWC,GAAuCjuB,CAAK,EACvDkuB,EAAMvJ,EAAMqJ,CAAQ,EACpBG,EAAQxJ,EAAM,GAAG3kB,CAAK,OAAO,EAC/B,CAACmuB,GAAS,CAACD,GAGfpF,EAAgB5vB,EAAMyzB,EAAa/C,EAAQuE,CAAK,EAAGxB,EAAa/C,EAAQsE,CAAG,EAAG,CAC5E,GAAI,WAAWruB,CAAI,GACnB,KAAM8kB,EAAM,KACZ,WAAY,CACV,CAAC3iB,CAAgC,EAAG,yBACrC,CACL,CAAG,CACH,CAEA,SAASisB,GAAuCjuB,EAAO,CACrD,OAAIA,IAAU,mBACL,aAELA,IAAU,QACL,oBAEF,GAAGA,CAAK,KACjB,CAGA,SAAS+tB,GAAY70B,EAAMyrB,EAAOgI,EAAY,CAC5C,MAAMyB,EAAwBzB,EAAa/C,EAAQjF,EAAM,YAAc,EACjE0J,EAAuB1B,EAAa/C,EAAQjF,EAAM,WAAa,EAC/D2J,EAAyB3B,EAAa/C,EAAQjF,EAAM,aAAe,EACrEA,EAAM,cAKRmE,EAAgB5vB,EAAMk1B,EAAuBC,EAAsB,CACjE,GAAI,kBACJ,KAAM1J,EAAM,KACZ,WAAY,CACV,CAAC3iB,CAAgC,EAAG,yBACrC,CACP,CAAK,EAED8mB,EAAgB5vB,EAAMo1B,EAAwBD,EAAsB,CAClE,GAAI,mBACJ,KAAM1J,EAAM,KACZ,WAAY,CACV,CAAC3iB,CAAgC,EAAG,yBACrC,CACP,CAAK,EAEL,CAMA,SAASmrB,GACPj0B,EACAyrB,EACA4J,EACAzrB,EACAipB,EACAY,EACA,CAGA,GAAIhI,EAAM,gBAAkB,kBAAoBA,EAAM,gBAAkB,QACtE,OAGF,MAAM6J,EAAY7W,GAAS4W,CAAW,EAEhC3sB,EAAa,CACjB,CAACI,CAAgC,EAAG,+BACrC,EACDysB,GAAyB7sB,EAAY+iB,EAAO,eAAgB,6BAA6B,EACzF8J,GAAyB7sB,EAAY+iB,EAAO,kBAAmB,8BAA8B,EAC7F8J,GAAyB7sB,EAAY+iB,EAAO,kBAAmB,sCAAsC,EAGrG,MAAM+J,EAAgB/J,EAAQ,aAC1B+J,GAAgB,OAClB9sB,EAAW,6BAA6B,EAAI8sB,GAI9C,MAAMC,EAAwBhK,EAC3B,qBACCgK,IACF/sB,EAAW,iCAAiC,EAAI+sB,GAG9CH,EAAU,WACZ5sB,EAAW,YAAY,EAAI4sB,EAAU,SAAS,MAAM,GAAG,EAAE,OAGvDA,EAAU,OACZ5sB,EAAW,gBAAgB,EAAI4sB,EAAU,MAG3C5sB,EAAW,iBAAiB,EAAI2sB,EAAY,SAAS/R,EAAO,SAAS,MAAM,EAE3E,MAAMrU,EAAiBwkB,EAAa7pB,EAC9BN,EAAe2F,EAAiB4jB,EAEtCjD,EAAgB5vB,EAAMiP,EAAgB3F,EAAc,CAClD,KAAM+rB,EAAY,QAAQ/R,EAAO,SAAS,OAAQ,EAAE,EACpD,GAAImI,EAAM,cAAgB,YAAYA,EAAM,aAAa,GAAK,iBAC9D,WAAA/iB,CACJ,CAAG,CACH,CAKA,SAASwrB,GAAgBl0B,EAAM,CAC7B,MAAM01B,EAAYpS,EAAO,UACzB,GAAI,CAACoS,EACH,OAIF,MAAMC,EAAaD,EAAU,WACzBC,IACEA,EAAW,eACb31B,EAAK,aAAa,0BAA2B21B,EAAW,aAAa,EAGnEA,EAAW,MACb31B,EAAK,aAAa,iBAAkB21B,EAAW,IAAI,EAGjDhG,GAAmBgG,EAAW,GAAG,IACnChE,EAAc,gBAAgB,EAAI,CAAE,MAAOgE,EAAW,IAAK,KAAM,aAAe,IAIhFhG,GAAmB+F,EAAU,YAAY,GAC3C11B,EAAK,aAAa,eAAgB,GAAG01B,EAAU,YAAY,KAAK,EAG9D/F,GAAmB+F,EAAU,mBAAmB,GAClD11B,EAAK,aAAa,sBAAuB,OAAO01B,EAAU,mBAAmB,CAAC,CAElF,CAGA,SAASnB,GAAuBv0B,EAAM,CAChC4xB,IAGEA,EAAU,SACZ5xB,EAAK,aAAa,cAAewxB,GAAiBI,EAAU,OAAO,CAAC,EAGlEA,EAAU,IACZ5xB,EAAK,aAAa,SAAU4xB,EAAU,EAAE,EAGtCA,EAAU,KAEZ5xB,EAAK,aAAa,UAAW4xB,EAAU,IAAI,KAAI,EAAG,MAAM,EAAG,GAAG,CAAC,EAG7DA,EAAU,UAAY,MAExB5xB,EAAK,aAAa,eAAgB4xB,EAAU,QAAQ,EAGlDA,EAAU,YAAc,MAI1B5xB,EAAK,aAAa,iBAAkB4xB,EAAU,UAAU,EAG1D5xB,EAAK,aAAa,WAAY4xB,EAAU,IAAI,GAI1CC,IAAaA,GAAU,SACzBA,GAAU,QAAQ,QAAQ,CAACrnB,EAAQilB,IACjCzvB,EAAK,aAAa,cAAcyvB,EAAQ,CAAC,GAAI+B,GAAiBhnB,EAAO,IAAI,CAAC,CAC3E,CAEL,CAEA,SAAS+qB,GACP7sB,EACA+iB,EACAviB,EACA0sB,EACA,CACA,MAAMC,EAAWpK,EAAMviB,CAAG,EACtB2sB,GAAY,MAAQA,EAAWpE,KACjC/oB,EAAWktB,CAAO,EAAIC,EAE1B,CAOA,SAAS1B,GAAkCxC,EAAe,CACxD,MAAM1H,EAAWJ,GAAmB,EAAK,EACzC,GAAI,CAACI,EACH,OAGF,KAAM,CAAE,cAAA6L,EAAe,aAAAC,CAAY,EAAK9L,EAEpC8L,GAAgBD,IAClBnE,EAAc,kBAAkB,EAAI,CAClC,MAAOmE,EAAgBC,EACvB,KAAM,aACP,EAEL,CC7mBA,MAAMC,GAAoB,IAE1B,IAAIC,GACAC,GACAC,GAQJ,SAASC,GAAuCt4B,EAAS,CACvD,MAAMD,EAAO,MACbD,GAAWC,EAAMC,CAAO,EACxBC,GAAgBF,EAAMw4B,EAAa,CACrC,CAGA,SAASA,IAAgB,CACvB,GAAI,CAAC/S,EAAO,SACV,OAMF,MAAMgT,EAAoBl4B,EAAgB,KAAK,KAAM,KAAK,EACpDm4B,EAAwBC,GAAoBF,EAAmB,EAAI,EACzEhT,EAAO,SAAS,iBAAiB,QAASiT,EAAuB,EAAK,EACtEjT,EAAO,SAAS,iBAAiB,WAAYiT,EAAuB,EAAK,EAOzE,CAAC,cAAe,MAAM,EAAE,QAASzoB,GAAW,CAE1C,MAAM2oB,EADenT,EACUxV,CAAM,EAC/B4oB,EAAQD,GAAaA,EAAU,UAGjC,CAACC,GAAS,CAACA,EAAM,gBAAkB,CAACA,EAAM,eAAe,kBAAkB,IAI/EzX,EAAKyX,EAAO,mBAAoB,SAAUC,EAA0B,CAClE,OAAO,SAAW94B,EAAM+4B,EAAUt0B,EAAS,CACzC,GAAIzE,IAAS,SAAWA,GAAQ,WAC9B,GAAI,CACF,MAAMH,EAAY,KAAK,oCACrB,KAAK,qCAAuC,GACxCm5B,EAAkBn5B,EAASG,CAAI,EAAIH,EAASG,CAAI,GAAK,CAAE,SAAU,GAEvE,GAAI,CAACg5B,EAAe,QAAS,CAC3B,MAAM/4B,EAAU04B,GAAoBF,CAAiB,EACrDO,EAAe,QAAU/4B,EACzB64B,EAAyB,KAAK,KAAM94B,EAAMC,EAASwE,CAAO,CACxE,CAEYu0B,EAAe,UAChB,MAAW,CAGtB,CAGQ,OAAOF,EAAyB,KAAK,KAAM94B,EAAM+4B,EAAUt0B,CAAO,CACnE,CACP,CAAK,EAED2c,EACEyX,EACA,sBACA,SAAUI,EAA6B,CACrC,OAAO,SAAWj5B,EAAM+4B,EAAUt0B,EAAS,CACzC,GAAIzE,IAAS,SAAWA,GAAQ,WAC9B,GAAI,CACF,MAAMH,EAAW,KAAK,qCAAuC,CAAE,EACzDm5B,EAAiBn5B,EAASG,CAAI,EAEhCg5B,IACFA,EAAe,WAEXA,EAAe,UAAY,IAC7BC,EAA4B,KAAK,KAAMj5B,EAAMg5B,EAAe,QAASv0B,CAAO,EAC5Eu0B,EAAe,QAAU,OACzB,OAAOn5B,EAASG,CAAI,GAIlB,OAAO,KAAKH,CAAQ,EAAE,SAAW,GACnC,OAAO,KAAK,oCAGjB,MAAW,CAGxB,CAGU,OAAOo5B,EAA4B,KAAK,KAAMj5B,EAAM+4B,EAAUt0B,CAAO,CACtE,CACF,CACF,EACL,CAAG,CACH,CAKA,SAASy0B,GAA6BjwB,EAAO,CAE3C,GAAIA,EAAM,OAASovB,GACjB,MAAO,GAGT,GAAI,CAGF,GAAI,CAACpvB,EAAM,QAAWA,EAAM,OAAS,YAAcqvB,GACjD,MAAO,EAEV,MAAW,CAGd,CAKE,MAAO,EACT,CAMA,SAASa,GAAmBxvB,EAAWsG,EAAQ,CAE7C,OAAItG,IAAc,WACT,GAGL,CAACsG,GAAU,CAACA,EAAO,QACd,GAKL,EAAAA,EAAO,UAAY,SAAWA,EAAO,UAAY,YAAcA,EAAO,kBAK5E,CAKA,SAAS0oB,GACP14B,EACAm5B,EAAiB,GACjB,CACA,OAAQnwB,GAAU,CAIhB,GAAI,CAACA,GAASA,EAAM,gBAClB,OAGF,MAAMgH,EAASopB,GAAepwB,CAAK,EAGnC,GAAIkwB,GAAmBlwB,EAAM,KAAMgH,CAAM,EACvC,OAIF3N,GAAyB2G,EAAO,kBAAmB,EAAI,EAEnDgH,GAAU,CAACA,EAAO,WAEpB3N,GAAyB2N,EAAQ,YAAawE,IAAO,EAGvD,MAAM3L,EAAOG,EAAM,OAAS,WAAa,QAAUA,EAAM,KAKpDiwB,GAA6BjwB,CAAK,IAErChJ,EADoB,CAAE,MAAAgJ,EAAO,KAAAH,EAAM,OAAQswB,CAAgB,CACxC,EACnBf,GAAwBpvB,EAAM,KAC9BqvB,GAA4BroB,EAASA,EAAO,UAAY,QAI1D,aAAamoB,EAAe,EAC5BA,GAAkB3S,EAAO,WAAW,IAAM,CACxC6S,GAA4B,OAC5BD,GAAwB,MACzB,EAAEF,EAAiB,CACrB,CACH,CAEA,SAASkB,GAAepwB,EAAO,CAC7B,GAAI,CACF,OAAOA,EAAM,MACd,MAAW,CAGV,OAAO,IACX,CACA,CCzNA,IAAIqwB,GAUJ,SAASC,GAAiCt5B,EAAS,CACjD,MAAMD,EAAO,UACbD,GAAWC,EAAMC,CAAO,EACxBC,GAAgBF,EAAMw5B,EAAiB,CACzC,CAEA,SAASA,IAAoB,CAC3B,GAAI,CAAC7R,GAAe,EAClB,OAGF,MAAM8R,EAAgBhU,EAAO,WAC7BA,EAAO,WAAa,YAActV,EAAM,CACtC,MAAMupB,EAAKjU,EAAO,SAAS,KAErBpf,EAAOizB,GAIb,GAHAA,GAAWI,EAEXn5B,EAAgB,UADI,CAAE,KAAA8F,EAAM,GAAAqzB,CAAI,CACM,EAClCD,EAIF,GAAI,CACF,OAAOA,EAAc,MAAM,KAAMtpB,CAAI,CACtC,MAAa,CAEpB,CAEG,EAED,SAASwpB,EAA2BC,EAAyB,CAC3D,OAAO,YAAczpB,EAAM,CACzB,MAAMnP,EAAMmP,EAAK,OAAS,EAAIA,EAAK,CAAC,EAAI,OACxC,GAAInP,EAAK,CAEP,MAAMqF,EAAOizB,GACPI,EAAK,OAAO14B,CAAG,EAErBs4B,GAAWI,EAEXn5B,EAAgB,UADI,CAAE,KAAA8F,EAAM,GAAAqzB,CAAI,CACM,CAC9C,CACM,OAAOE,EAAwB,MAAM,KAAMzpB,CAAI,CAChD,CACL,CAEEiR,EAAKqE,EAAO,QAAS,YAAakU,CAA0B,EAC5DvY,EAAKqE,EAAO,QAAS,eAAgBkU,CAA0B,CACjE,CCpDA,MAAME,GAAwB,CAAE,EAWhC,SAASC,GACPhxB,EACA,CACA,MAAMixB,EAASF,GAAsB/wB,CAAI,EACzC,GAAIixB,EACF,OAAOA,EAGT,IAAIC,EAAOvU,EAAO3c,CAAI,EAGtB,GAAI6c,GAAiBqU,CAAI,EACvB,OAAQH,GAAsB/wB,CAAI,EAAIkxB,EAAK,KAAKvU,CAAM,EAGxD,MAAMwU,EAAWxU,EAAO,SAExB,GAAIwU,GAAY,OAAOA,EAAS,eAAkB,WAChD,GAAI,CACF,MAAMlU,EAAUkU,EAAS,cAAc,QAAQ,EAC/ClU,EAAQ,OAAS,GACjBkU,EAAS,KAAK,YAAYlU,CAAO,EACjC,MAAMmU,EAAgBnU,EAAQ,cAC1BmU,GAAiBA,EAAcpxB,CAAI,IACrCkxB,EAAOE,EAAcpxB,CAAI,GAE3BmxB,EAAS,KAAK,YAAYlU,CAAO,CAClC,OAAQ3lB,EAAG,CAEVC,IAAeC,EAAO,KAAK,uCAAuCwI,CAAI,6BAA6BA,CAAI,KAAM1I,CAAC,CACpH,CAKE,OAAK45B,IAIGH,GAAsB/wB,CAAI,EAAIkxB,EAAK,KAAKvU,CAAM,EACxD,CAGA,SAAS0U,GAA0BrxB,EAAM,CACvC+wB,GAAsB/wB,CAAI,EAAI,MAChC,CC/DA,MAAMsxB,GAAsB,oBAU5B,SAASC,GAA6Bp6B,EAAS,CAC7C,MAAMD,EAAO,MACbD,GAAWC,EAAMC,CAAO,EACxBC,GAAgBF,EAAMs6B,EAAa,CACrC,CAGA,SAASA,IAAgB,CACvB,GAAI,CAAE7U,EAAS,eACb,OAGF,MAAM8U,EAAW,eAAe,UAGhCA,EAAS,KAAO,IAAI,MAAMA,EAAS,KAAM,CACvC,MAAMC,EAAcC,EAAgBC,EAAiB,CAMnD,MAAMlU,EAAe,IAAI,MAEnBpV,EAAiBpG,EAAkB,EAAK,IAIxC+Y,EAAS4W,GAASD,EAAgB,CAAC,CAAC,EAAIA,EAAgB,CAAC,EAAE,YAAW,EAAK,OAC3E15B,EAAM4f,GAAS8Z,EAAgB,CAAC,CAAC,EAEvC,GAAI,CAAC3W,GAAU,CAAC/iB,EACd,OAAOw5B,EAAa,MAAMC,EAAgBC,CAAe,EAG3DD,EAAeL,EAAmB,EAAI,CACpC,OAAArW,EACA,IAAA/iB,EACA,gBAAiB,CAAE,CACpB,EAGG+iB,IAAW,QAAU/iB,EAAI,MAAM,YAAY,IAC7Cy5B,EAAe,uBAAyB,IAG1C,MAAMG,EAA4B,IAAM,CAEtC,MAAMC,EAAUJ,EAAeL,EAAmB,EAElD,GAAKS,GAIDJ,EAAe,aAAe,EAAG,CACnC,GAAI,CAGFI,EAAQ,YAAcJ,EAAe,MACtC,MAAW,CAEtB,CAEU,MAAMhX,EAAc,CAClB,aAAczY,EAAkB,EAAK,IACrC,eAAAoG,EACA,IAAKqpB,EACL,aAAAjU,CACD,EACDjmB,EAAgB,MAAOkjB,CAAW,CAC5C,CACO,EAED,MAAI,uBAAwBgX,GAAkB,OAAOA,EAAe,oBAAuB,WACzFA,EAAe,mBAAqB,IAAI,MAAMA,EAAe,mBAAoB,CAC/E,MAAMK,EAA4BC,EAA2BC,EAA4B,CACvF,OAAAJ,EAA2B,EACpBE,EAA2B,MAAMC,EAA2BC,CAA0B,CAC9F,CACX,CAAS,EAEDP,EAAe,iBAAiB,mBAAoBG,CAAyB,EAM/EH,EAAe,iBAAmB,IAAI,MAAMA,EAAe,iBAAkB,CAC3E,MACEQ,EACAC,EACAC,EACA,CACA,KAAM,CAACj3B,EAAQoG,CAAK,EAAI6wB,EAElBN,EAAUK,EAAwBd,EAAmB,EAE3D,OAAIS,GAAWF,GAASz2B,CAAM,GAAKy2B,GAASrwB,CAAK,IAC/CuwB,EAAQ,gBAAgB32B,EAAO,YAAW,CAAE,EAAIoG,GAG3C2wB,EAAyB,MAAMC,EAAyBC,CAAwB,CACxF,CACT,CAAO,EAEMX,EAAa,MAAMC,EAAgBC,CAAe,CAC1D,CACL,CAAG,EAGDH,EAAS,KAAO,IAAI,MAAMA,EAAS,KAAM,CACvC,MAAMa,EAAcC,EAAaC,EAAc,CAC7C,MAAMC,EAAgBF,EAAYjB,EAAmB,EAErD,GAAI,CAACmB,EACH,OAAOH,EAAa,MAAMC,EAAaC,CAAY,EAGjDA,EAAa,CAAC,IAAM,SACtBC,EAAc,KAAOD,EAAa,CAAC,GAGrC,MAAM7X,EAAc,CAClB,eAAgBzY,EAAkB,EAAK,IACvC,IAAKqwB,CACN,EACD96B,OAAAA,EAAgB,MAAOkjB,CAAW,EAE3B2X,EAAa,MAAMC,EAAaC,CAAY,CACpD,CACL,CAAG,CACH,CAEA,SAAS1a,GAAS5f,EAAK,CACrB,GAAI25B,GAAS35B,CAAG,EACd,OAAOA,EAGT,GAAI,CAKF,OAAQA,EAAM,SAAU,CAC5B,MAAe,CAAE,CAGjB,CC5JA,MAAMw6B,GAAoB,CAAE,EACtBC,GAAwB,IAAI,IAKlC,SAASC,IAAmB,CAE1B,GADoB9I,GAA0B,GAC3Ba,EAA8B,CAC/C,MAAMkI,EAAcC,GAAW,EAE/B,MAAO,IAAM,CACXD,EAAa,CACd,CACL,CAEE,MAAO,MACT,CAEA,MAAME,GAAgB,CACpB,MAAO,QACP,YAAa,QACb,UAAW,QACX,UAAW,QACX,QAAS,QACT,WAAY,QACZ,SAAU,QACV,UAAW,QACX,SAAU,QACV,WAAY,QACZ,WAAY,QACZ,YAAa,QACb,WAAY,QACZ,aAAc,QACd,aAAc,QACd,UAAW,OACX,QAAS,OACT,KAAM,OACN,UAAW,OACX,UAAW,OACX,SAAU,OACV,KAAM,OACN,QAAS,QACT,MAAO,QACP,SAAU,QACV,MAAO,OACT,EAGA,SAASD,IAAY,CACnB,OAAOtK,GAA6B,CAAC,CAAE,OAAA5F,KAAa,CAClD,GAAIA,EAAO,OAAS,KAClB,OAGF,MAAMkC,EAAQlC,EAAO,QAAQ,KAAKkC,GAASA,EAAM,WAAalC,EAAO,OAASmQ,GAAcjO,EAAM,IAAI,CAAC,EAEvG,GAAI,CAACA,EACH,OAGF,KAAM,CAAE,cAAAkO,CAAa,EAAKlO,EACpBmO,EAAkBF,GAAcjO,EAAM,IAAI,EAG1C7hB,EAAY8mB,EAASY,EAAiC7F,EAAM,SAAS,EACrEoH,EAAWnC,EAAQnH,EAAO,KAAK,EAC/BhqB,EAAaC,EAAe,EAC5BC,EAAWF,EAAaG,EAAYH,CAAU,EAAI,OAMlDs6B,GAFaF,GAAiB,KAAOL,GAAsB,IAAIK,CAAa,EAAI,SAEtDl6B,EAI1B8xB,EAAYsI,EAAYn4B,EAAWm4B,CAAS,EAAE,YAAc3vB,EAAe,EAAG,aAAY,EAAG,gBAE7FvD,EAAO6qB,GAAiB/F,EAAM,MAAM,EACpC/iB,EAAapC,GAAkB,CACnC,CAACwC,CAAgC,EAAG,wBACpC,CAACC,EAA4B,EAAG,kBAAkB6wB,CAAe,GACjE,CAAClwB,EAAiC,EAAG+hB,EAAM,QACjD,CAAK,EAEKzrB,EAAOgwB,GAA4B,CACvC,KAAArpB,EACA,YAAa4qB,EACb,WAAA7oB,EACA,UAAAkB,CACN,CAAK,EAEG5J,IACFA,EAAK,SAAS,MAAO,CACnB,CAACsI,EAA0C,EAAG,cAC9C,CAACD,EAA2C,EAAGkhB,EAAO,KAC9D,CAAO,EAEDvpB,EAAK,IAAI4J,EAAYipB,CAAQ,EAEnC,CAAG,CACH,CAMA,SAASiH,GAA+BC,EAAc,CACpD,MAAMjO,EAAgB,CAAC,CAAE,QAAAN,KAAc,CACrC,MAAMjsB,EAAaC,EAAe,EAC5Bw6B,EAAiBz6B,GAAcG,EAAYH,CAAU,EAE3DisB,EAAQ,QAAQC,GAAS,CACvB,GAAI,CAACiE,GAAyBjE,CAAK,GAAK,CAACuO,EACvC,OAGF,MAAML,EAAgBlO,EAAM,cAC5B,GAAIkO,GAAiB,MAKjB,CAAAL,GAAsB,IAAIK,CAAa,EAK3C,IAAIN,GAAkB,OAAS,GAAI,CACjC,MAAMY,EAAOZ,GAAkB,MAAO,EACtCC,GAAsB,OAAOW,CAAI,CACzC,CAIMZ,GAAkB,KAAKM,CAAa,EACpCL,GAAsB,IAAIK,EAAeK,CAAc,EAC7D,CAAK,CACF,EAED3K,GAAqC,QAASvD,CAAa,EAC3DuD,GAAqC,cAAevD,CAAa,CACnE,CC9IA,SAASoO,GACP53B,EACA63B,EAAcxC,GAAwB,OAAO,EAC7C,CACA,IAAIyC,EAAkB,EAClBC,EAAe,EAEnB,SAASrhB,EAAYgJ,EAAS,CAC5B,MAAMsY,EAActY,EAAQ,KAAK,OACjCoY,GAAmBE,EACnBD,IAEA,MAAME,EAAiB,CACrB,KAAMvY,EAAQ,KACd,OAAQ,OACR,eAAgB,SAChB,QAAS1f,EAAQ,QAYjB,UAAW83B,GAAmB,KAASC,EAAe,GACtD,GAAG/3B,EAAQ,YACZ,EAED,GAAI,CAAC63B,EACH,OAAAnC,GAA0B,OAAO,EAC1BtiB,GAAoB,mCAAmC,EAGhE,GAAI,CAEF,OAAOykB,EAAY73B,EAAQ,IAAKi4B,CAAc,EAAE,KAAK9gB,IACnD2gB,GAAmBE,EACnBD,IACO,CACL,WAAY5gB,EAAS,OACrB,QAAS,CACP,uBAAwBA,EAAS,QAAQ,IAAI,sBAAsB,EACnE,cAAeA,EAAS,QAAQ,IAAI,aAAa,CAClD,CACF,EACF,CACF,OAAQxb,EAAG,CACV,OAAA+5B,GAA0B,OAAO,EACjCoC,GAAmBE,EACnBD,IACO3kB,GAAoBzX,CAAC,CAClC,CACA,CAEE,OAAO8a,GAAgBzW,EAAS0W,CAAW,CAC7C,CCtDA,MAAMwhB,GAAkB,GAElBC,GAAiB,GAEvB,SAASC,GAAYC,EAAUlX,EAAMmX,EAAQC,EAAO,CAClD,MAAMxd,EAAQ,CACZ,SAAAsd,EACA,SAAUlX,IAAS,cAAgBqX,GAAmBrX,EACtD,OAAQ,EACT,EAED,OAAImX,IAAW,SACbvd,EAAM,OAASud,GAGbC,IAAU,SACZxd,EAAM,MAAQwd,GAGTxd,CACT,CAKA,MAAM0d,GAAsB,yCAGtBC,GACJ,6IAEIC,GAAkB,gCAKlBC,GAAsBp8B,GAAQ,CAElC,MAAMq8B,EAAYJ,GAAoB,KAAKj8B,CAAI,EAE/C,GAAIq8B,EAAW,CACb,KAAM,EAAGR,EAAU77B,EAAMs8B,CAAG,EAAID,EAChC,OAAOT,GAAYC,EAAUG,GAAkB,CAACh8B,EAAM,CAACs8B,CAAG,CAC9D,CAEE,MAAMl2B,EAAQ81B,GAAY,KAAKl8B,CAAI,EAEnC,GAAIoG,EAAO,CAGT,GAFeA,EAAM,CAAC,GAAKA,EAAM,CAAC,EAAE,QAAQ,MAAM,IAAM,EAE5C,CACV,MAAMm2B,EAAWJ,GAAgB,KAAK/1B,EAAM,CAAC,CAAC,EAE1Cm2B,IAEFn2B,EAAM,CAAC,EAAIm2B,EAAS,CAAC,EACrBn2B,EAAM,CAAC,EAAIm2B,EAAS,CAAC,EACrBn2B,EAAM,CAAC,EAAIm2B,EAAS,CAAC,EAE7B,CAII,KAAM,CAAC5X,EAAMkX,CAAQ,EAAIW,GAA8Bp2B,EAAM,CAAC,GAAK41B,GAAkB51B,EAAM,CAAC,CAAC,EAE7F,OAAOw1B,GAAYC,EAAUlX,EAAMve,EAAM,CAAC,EAAI,CAACA,EAAM,CAAC,EAAI,OAAWA,EAAM,CAAC,EAAI,CAACA,EAAM,CAAC,EAAI,MAAS,CACzG,CAGA,EAEMq2B,GAAwB,CAACf,GAAiBU,EAAmB,EAK7DM,GACJ,uIACIC,GAAiB,gDAEjBC,GAAQ58B,GAAQ,CACpB,MAAMoG,EAAQs2B,GAAW,KAAK18B,CAAI,EAElC,GAAIoG,EAAO,CAET,GADeA,EAAM,CAAC,GAAKA,EAAM,CAAC,EAAE,QAAQ,SAAS,EAAI,GAC7C,CACV,MAAMm2B,EAAWI,GAAe,KAAKv2B,EAAM,CAAC,CAAC,EAEzCm2B,IAEFn2B,EAAM,CAAC,EAAIA,EAAM,CAAC,GAAK,OACvBA,EAAM,CAAC,EAAIm2B,EAAS,CAAC,EACrBn2B,EAAM,CAAC,EAAIm2B,EAAS,CAAC,EACrBn2B,EAAM,CAAC,EAAI,GAEnB,CAEI,IAAIy1B,EAAWz1B,EAAM,CAAC,EAClBue,EAAOve,EAAM,CAAC,GAAK41B,GACvB,OAACrX,EAAMkX,CAAQ,EAAIW,GAA8B7X,EAAMkX,CAAQ,EAExDD,GAAYC,EAAUlX,EAAMve,EAAM,CAAC,EAAI,CAACA,EAAM,CAAC,EAAI,OAAWA,EAAM,CAAC,EAAI,CAACA,EAAM,CAAC,EAAI,MAAS,CACzG,CAGA,EAEMy2B,GAAuB,CAAClB,GAAgBiB,EAAK,EAiC7CE,GAA0B,CAACL,GAAuBI,EAAoB,EAEtEE,GAAqBC,GAAkB,GAAGF,EAAuB,EAsBjEN,GAAgC,CAAC7X,EAAMkX,IAAa,CACxD,MAAMoB,EAAoBtY,EAAK,QAAQ,kBAAkB,IAAM,GACzDuY,EAAuBvY,EAAK,QAAQ,sBAAsB,IAAM,GAEtE,OAAOsY,GAAqBC,EACxB,CACEvY,EAAK,QAAQ,GAAG,IAAM,GAAMA,EAAK,MAAM,GAAG,EAAE,CAAC,EAAMqX,GACnDiB,EAAoB,oBAAoBpB,CAAQ,GAAK,wBAAwBA,CAAQ,EAC7F,EACM,CAAClX,EAAMkX,CAAQ,CACrB,EChLMsB,GAA4B,KAE5B/gB,GAAmB,cAEnBghB,GAA2B,CAAC55B,EAAU,KAAO,CACjD,MAAM65B,EAAW,CACf,QAAS,GACT,IAAK,GACL,MAAO,GACP,QAAS,GACT,OAAQ,GACR,IAAK,GACL,GAAG75B,CACJ,EAED,MAAO,CACL,KAAM4Y,GACN,MAAMvT,EAAQ,CACRw0B,EAAS,SACXrd,GAAiCsd,GAA6Bz0B,CAAM,CAAC,EAEnEw0B,EAAS,KACX/F,GAAuCiG,GAAyB10B,EAAQw0B,EAAS,GAAG,CAAC,EAEnFA,EAAS,KACXjE,GAA6BoE,GAAyB30B,CAAM,CAAC,EAE3Dw0B,EAAS,OACXrY,GAA+ByY,GAA2B50B,CAAM,CAAC,EAE/Dw0B,EAAS,SACX/E,GAAiCoF,GAA6B70B,CAAM,CAAC,EAEnEw0B,EAAS,QACXx0B,EAAO,GAAG,kBAAmB80B,GAA4B90B,CAAM,CAAC,CAEnE,CACF,CACH,EAEM+0B,GAA2CR,GAKjD,SAASO,GAA4B90B,EAAQ,CAC3C,OAAO,SAA6Bb,EAAO,CACrCiD,EAAW,IAAKpC,GAIpBgT,GACE,CACE,SAAU,UAAU7T,EAAM,OAAS,cAAgB,cAAgB,OAAO,GAC1E,SAAUA,EAAM,SAChB,MAAOA,EAAM,MACb,QAASqV,GAAoBrV,CAAK,CACnC,EACD,CACE,MAAAA,CACD,CACF,CACF,CACH,CAMA,SAASu1B,GACP10B,EACAg1B,EACA,CACA,OAAO,SAA6Brb,EAAa,CAC/C,GAAIvX,EAAW,IAAKpC,EAClB,OAGF,IAAImG,EACAylB,EACAqJ,EAAW,OAAOD,GAAQ,SAAWA,EAAI,mBAAqB,OAE9DE,EACF,OAAOF,GAAQ,UAAY,OAAOA,EAAI,iBAAoB,SAAWA,EAAI,gBAAkB,OACzFE,GAAmBA,EAAkBZ,KACvC/9B,GACEC,EAAO,KACL,yCAAyC89B,EAAyB,oBAAoBY,CAAe,oCAAoCZ,EAAyB,WACnK,EACHY,EAAkBZ,IAGhB,OAAOW,GAAa,WACtBA,EAAW,CAACA,CAAQ,GAItB,GAAI,CACF,MAAM91B,EAAQwa,EAAY,MACpBwb,EAAUC,GAASj2B,CAAK,EAAIA,EAAM,OAASA,EAEjDgH,EAAS0jB,GAAiBsL,EAAS,CAAE,SAAAF,EAAU,gBAAAC,CAAe,CAAE,EAChEtJ,EAAgBC,GAAiBsJ,CAAO,CACzC,MAAW,CACVhvB,EAAS,WACf,CAEI,GAAIA,EAAO,SAAW,EACpB,OAGF,MAAM8M,EAAa,CACjB,SAAU,MAAM0G,EAAY,IAAI,GAChC,QAASxT,CACV,EAEGylB,IACF3Y,EAAW,KAAO,CAAE,oBAAqB2Y,CAAe,GAG1D5Y,GAAcC,EAAY,CACxB,MAAO0G,EAAY,MACnB,KAAMA,EAAY,KAClB,OAAQA,EAAY,MAC1B,CAAK,CACF,CACH,CAKA,SAAS8a,GAA6Bz0B,EAAQ,CAC5C,OAAO,SAA4B2Z,EAAa,CAC9C,GAAIvX,EAAW,IAAKpC,EAClB,OAGF,MAAMiT,EAAa,CACjB,SAAU,UACV,KAAM,CACJ,UAAW0G,EAAY,KACvB,OAAQ,SACT,EACD,MAAOjC,GAAwBiC,EAAY,KAAK,EAChD,QAASzB,GAASyB,EAAY,KAAM,GAAG,CACxC,EAED,GAAIA,EAAY,QAAU,SACxB,GAAIA,EAAY,KAAK,CAAC,IAAM,GAC1B1G,EAAW,QAAU,qBAAqBiF,GAASyB,EAAY,KAAK,MAAM,CAAC,EAAG,GAAG,GAAK,gBAAgB,GACtG1G,EAAW,KAAK,UAAY0G,EAAY,KAAK,MAAM,CAAC,MAGpD,QAIJ3G,GAAcC,EAAY,CACxB,MAAO0G,EAAY,KACnB,MAAOA,EAAY,KACzB,CAAK,CACF,CACH,CAKA,SAASgb,GAAyB30B,EAAQ,CACxC,OAAO,SAAwB2Z,EAAa,CAC1C,GAAIvX,EAAW,IAAKpC,EAClB,OAGF,KAAM,CAAE,eAAAsH,EAAgB,aAAA3F,CAAY,EAAKgY,EAEnC8X,EAAgB9X,EAAY,IAAI2W,EAAmB,EAGzD,GAAI,CAAChpB,GAAkB,CAAC3F,GAAgB,CAAC8vB,EACvC,OAGF,KAAM,CAAE,OAAAxX,EAAQ,IAAA/iB,EAAK,YAAAm+B,EAAa,KAAAtY,CAAM,EAAG0U,EAErC/6B,EAAO,CACX,OAAAujB,EACA,IAAA/iB,EACA,YAAAm+B,CACD,EAEKxrB,EAAO,CACX,IAAK8P,EAAY,IACjB,MAAOoD,EACP,eAAAzV,EACA,aAAA3F,CACD,EAEKmJ,EAAQ4Q,GAAwC2Z,CAAW,EAEjEriB,GACE,CACE,SAAU,MACV,KAAAtc,EACA,KAAM,OACN,MAAAoU,CACD,EACDjB,CACD,CACF,CACH,CAKA,SAAS+qB,GAA2B50B,EAAQ,CAC1C,OAAO,SAA0B2Z,EAAa,CAC5C,GAAIvX,EAAW,IAAKpC,EAClB,OAGF,KAAM,CAAE,eAAAsH,EAAgB,aAAA3F,CAAY,EAAKgY,EAGzC,GAAKhY,GAID,EAAAgY,EAAY,UAAU,IAAI,MAAM,YAAY,GAAKA,EAAY,UAAU,SAAW,QAKtF,GAAIA,EAAY,MAAO,CACrB,MAAMjjB,EAAOijB,EAAY,UACnB9P,EAAO,CACX,KAAM8P,EAAY,MAClB,MAAOA,EAAY,KACnB,eAAArS,EACA,aAAA3F,CACD,EAEDqR,GACE,CACE,SAAU,QACV,KAAAtc,EACA,MAAO,QACP,KAAM,MACP,EACDmT,CACD,CACP,KAAW,CACL,MAAMiI,EAAW6H,EAAY,SACvBjjB,EAAO,CACX,GAAGijB,EAAY,UACf,YAAa7H,GAAYA,EAAS,MACnC,EACKjI,EAAO,CACX,MAAO8P,EAAY,KACnB,SAAA7H,EACA,eAAAxK,EACA,aAAA3F,CACD,EACKmJ,EAAQ4Q,GAAwChlB,EAAK,WAAW,EAEtEsc,GACE,CACE,SAAU,QACV,KAAAtc,EACA,KAAM,OACN,MAAAoU,CACD,EACDjB,CACD,CACP,CACG,CACH,CAKA,SAASgrB,GAA6B70B,EAAQ,CAC5C,OAAO,SAA4B2Z,EAAa,CAC9C,GAAIvX,EAAW,IAAKpC,EAClB,OAGF,IAAIzD,EAAOod,EAAY,KACnBiW,EAAKjW,EAAY,GACrB,MAAM2b,EAAYxe,GAAS6E,EAAO,SAAS,IAAI,EAC/C,IAAI4Z,EAAah5B,EAAOua,GAASva,CAAI,EAAI,OACzC,MAAMi5B,EAAW1e,GAAS8Y,CAAE,GAGxB,CAAC2F,GAAc,CAACA,EAAW,QAC7BA,EAAaD,GAKXA,EAAU,WAAaE,EAAS,UAAYF,EAAU,OAASE,EAAS,OAC1E5F,EAAK4F,EAAS,UAEZF,EAAU,WAAaC,EAAW,UAAYD,EAAU,OAASC,EAAW,OAC9Eh5B,EAAOg5B,EAAW,UAGpBviB,GAAc,CACZ,SAAU,aACV,KAAM,CACJ,KAAAzW,EACA,GAAAqzB,CACD,CACP,CAAK,CACF,CACH,CAEA,SAASwF,GAASj2B,EAAO,CACvB,MAAO,CAAC,CAACA,GAAS,CAAC,CAAEA,EAAQ,MAC/B,CCpUA,MAAMs2B,GAAuB,CAC3B,cACA,SACA,OACA,mBACA,iBACA,mBACA,oBACA,kBACA,cACA,aACA,qBACA,cACA,aACA,iBACA,eACA,kBACA,cACA,cACA,eACA,qBACA,SACA,eACA,YACA,eACA,gBACA,YACA,kBACA,SACA,iBACA,4BACA,sBACF,EAEMliB,GAAmB,mBAEnBmiB,GAAgC,CAAC/6B,EAAU,KAAO,CACtD,MAAM65B,EAAW,CACf,eAAgB,GAChB,YAAa,GACb,sBAAuB,GACvB,YAAa,GACb,WAAY,GACZ,GAAG75B,CACJ,EAED,MAAO,CACL,KAAM4Y,GAGN,WAAY,CACNihB,EAAS,YACXld,EAAKqE,EAAQ,aAAcga,EAAiB,EAG1CnB,EAAS,aACXld,EAAKqE,EAAQ,cAAega,EAAiB,EAG3CnB,EAAS,uBACXld,EAAKqE,EAAQ,wBAAyBia,EAAQ,EAG5CpB,EAAS,gBAAkB,mBAAoB7Y,GACjDrE,EAAK,eAAe,UAAW,OAAQue,EAAQ,EAGjD,MAAMC,EAAoBtB,EAAS,YAC/BsB,IACkB,MAAM,QAAQA,CAAiB,EAAIA,EAAoBL,IAC/D,QAAQM,EAAgB,CAEvC,CACF,CACH,EAKMC,GAAgDN,GAEtD,SAASC,GAAkBM,EAAU,CACnC,OAAO,YAAc5vB,EAAM,CACzB,MAAM6vB,EAAmB7vB,EAAK,CAAC,EAC/B,OAAAA,EAAK,CAAC,EAAI+X,GAAK8X,EAAkB,CAC/B,UAAW,CACT,KAAM,CAAE,SAAUt/B,GAAgBq/B,CAAQ,CAAG,EAC7C,QAAS,GACT,KAAM,YACP,CACP,CAAK,EACMA,EAAS,MAAM,KAAM5vB,CAAI,CACjC,CACH,CAEA,SAASuvB,GAASK,EAAU,CAC1B,OAAO,SAAWl5B,EAAU,CAC1B,OAAOk5B,EAAS,MAAM,KAAM,CAC1B7X,GAAKrhB,EAAU,CACb,UAAW,CACT,KAAM,CACJ,SAAU,wBACV,QAASnG,GAAgBq/B,CAAQ,CAClC,EACD,QAAS,GACT,KAAM,YACP,CACT,CAAO,CACP,CAAK,CACF,CACH,CAEA,SAASJ,GAASvE,EAAc,CAC9B,OAAO,YAAcjrB,EAAM,CAEzB,MAAM8vB,EAAM,KAGZ,MAF4B,CAAC,SAAU,UAAW,aAAc,oBAAoB,EAEhE,QAAQ3Y,GAAQ,CAC9BA,KAAQ2Y,GAAO,OAAOA,EAAI3Y,CAAI,GAAM,YACtClG,EAAK6e,EAAK3Y,EAAM,SAAUyY,EAAU,CAClC,MAAMG,EAAc,CAClB,UAAW,CACT,KAAM,CACJ,SAAU5Y,EACV,QAAS5mB,GAAgBq/B,CAAQ,CAClC,EACD,QAAS,GACT,KAAM,YACP,CACF,EAGKviB,EAAmBC,GAAoBsiB,CAAQ,EACrD,OAAIviB,IACF0iB,EAAY,UAAU,KAAK,QAAUx/B,GAAgB8c,CAAgB,GAIhE0K,GAAK6X,EAAUG,CAAW,CAC3C,CAAS,CAET,CAAK,EAEM9E,EAAa,MAAM,KAAMjrB,CAAI,CACrC,CACH,CAEA,SAAS0vB,GAAiB5vB,EAAQ,CAEhC,MAAM2oB,EADenT,EACUxV,CAAM,EAC/B4oB,EAAQD,GAAaA,EAAU,UAGjC,CAACC,GAAS,CAACA,EAAM,gBAAkB,CAACA,EAAM,eAAe,kBAAkB,IAI/EzX,EAAKyX,EAAO,mBAAoB,SAAUkH,EAE3C,CACG,OAAO,SAAWI,EAAWhY,EAAI1jB,EAAS,CACxC,GAAI,CACE27B,GAAsBjY,CAAE,IAO1BA,EAAG,YAAcD,GAAKC,EAAG,YAAa,CACpC,UAAW,CACT,KAAM,CACJ,SAAU,cACV,QAASznB,GAAgBynB,CAAE,EAC3B,OAAAlY,CACD,EACD,QAAS,GACT,KAAM,YACP,CACb,CAAW,EAEJ,MAAY,CAEnB,CAEM,OAAO8vB,EAAS,MAAM,KAAM,CAC1BI,EACAjY,GAAKC,EAAI,CACP,UAAW,CACT,KAAM,CACJ,SAAU,mBACV,QAASznB,GAAgBynB,CAAE,EAC3B,OAAAlY,CACD,EACD,QAAS,GACT,KAAM,YACP,CACX,CAAS,EACDxL,CACR,CAAO,CACF,CACL,CAAG,EAED2c,EAAKyX,EAAO,sBAAuB,SAAUI,EAE9C,CACG,OAAO,SAAWkH,EAAWhY,EAAI1jB,EAAS,CAkBxC,GAAI,CACF,MAAM47B,EAAwBlY,EAAK,mBAC/BkY,GACFpH,EAA4B,KAAK,KAAMkH,EAAWE,EAAsB57B,CAAO,CAElF,MAAW,CAElB,CACM,OAAOw0B,EAA4B,KAAK,KAAMkH,EAAWhY,EAAI1jB,CAAO,CACrE,CACL,CAAG,EACH,CAEA,SAAS27B,GAAsB/Y,EAAK,CAClC,OAAO,OAAQA,EAAM,aAAgB,UACvC,CCxOA,MAAMiZ,GAA8C,KAC3C,CACL,KAAM,iBACN,WAAY,CACV,GAAI,OAAO7a,EAAO,SAAa,IAAa,CAC1CplB,GACEC,EAAO,KAAK,qFAAqF,EACnG,MACR,CAMMigC,GAAa,CAAE,eAAgB,GAAM,EACrCC,GAAgB,EAGhBjH,GAAiC,CAAC,CAAE,KAAAlzB,EAAM,GAAAqzB,KAAS,CAE7CrzB,IAAS,QAAaA,IAASqzB,IACjC6G,GAAa,CAAE,eAAgB,GAAM,EACrCC,GAAgB,EAE1B,CAAO,CACF,CACF,GChCGnjB,GAAmB,iBAEnBojB,GAA8B,CAACh8B,EAAU,KAAO,CACpD,MAAM65B,EAAW,CACf,QAAS,GACT,qBAAsB,GACtB,GAAG75B,CACJ,EAED,MAAO,CACL,KAAM4Y,GACN,WAAY,CACV,MAAM,gBAAkB,EACzB,EACD,MAAMvT,EAAQ,CACRw0B,EAAS,UACXoC,GAA6B52B,CAAM,EACnC62B,GAAiB,SAAS,GAExBrC,EAAS,uBACXsC,GAA0C92B,CAAM,EAChD62B,GAAiB,sBAAsB,EAE1C,CACF,CACH,EAEME,GAA8CJ,GAEpD,SAASC,GAA6B52B,EAAQ,CAC5ClJ,GAAqCJ,GAAQ,CAC3C,KAAM,CAAE,YAAAooB,EAAa,iBAAAuB,CAAkB,EAAG2W,GAAY,EAEtD,GAAI50B,EAAW,IAAKpC,GAAUke,KAC5B,OAGF,KAAM,CAAE,IAAAjnB,EAAK,IAAAC,EAAK,KAAAC,EAAM,OAAAC,EAAQ,MAAAC,CAAK,EAAKX,EAEpCyI,EAAQ83B,GACZ3W,GAAsBxB,EAAaznB,GAASJ,EAAK,OAAWopB,EAAkB,EAAK,EACnFnpB,EACAC,EACAC,CACD,EAED+H,EAAM,MAAQ,QAEd+3B,GAAa/3B,EAAO,CAClB,kBAAmB9H,EACnB,UAAW,CACT,QAAS,GACT,KAAM,SACP,CACP,CAAK,CACL,CAAG,CACH,CAEA,SAASy/B,GAA0C92B,EAAQ,CACzDzI,GAAkDjB,GAAK,CACrD,KAAM,CAAE,YAAAwoB,EAAa,iBAAAuB,CAAkB,EAAG2W,GAAY,EAEtD,GAAI50B,EAAW,IAAKpC,GAAUke,KAC5B,OAGF,MAAM7mB,EAAQ8/B,GAA4B7gC,CAAG,EAEvC6I,EAAQgM,GAAY9T,CAAK,EAC3B+/B,GAAiC//B,CAAK,EACtCipB,GAAsBxB,EAAaznB,EAAO,OAAWgpB,EAAkB,EAAI,EAE/ElhB,EAAM,MAAQ,QAEd+3B,GAAa/3B,EAAO,CAClB,kBAAmB9H,EACnB,UAAW,CACT,QAAS,GACT,KAAM,sBACP,CACP,CAAK,CACL,CAAG,CACH,CAEA,SAAS8/B,GAA4B9/B,EAAO,CAC1C,GAAI8T,GAAY9T,CAAK,EACnB,OAAOA,EAIT,GAAI,CAIF,GAAI,WAAaA,EACf,OAAQA,EAAQ,OAQlB,GAAI,WAAaA,GAAW,WAAaA,EAAQ,OAC/C,OAAQA,EAAQ,OAAO,MAE7B,MAAe,CAAE,CAEf,OAAOA,CACT,CAQA,SAAS+/B,GAAiCnrB,EAAQ,CAChD,MAAO,CACL,UAAW,CACT,OAAQ,CACN,CACE,KAAM,qBAEN,MAAO,oDAAoD,OAAOA,CAAM,CAAC,EAC1E,CACF,CACF,CACF,CACH,CAEA,SAASgrB,GACP93B,EACAjI,EACAC,EACAC,EACA,CAEA,MAAMd,EAAK6I,EAAM,UAAYA,EAAM,WAAa,CAAA,EAE1Ck4B,EAAM/gC,EAAE,OAASA,EAAE,QAAU,CAAA,EAE7BghC,EAAOD,EAAG,CAAC,EAAIA,EAAG,CAAC,GAAK,GAExBE,EAAQD,EAAI,WAAaA,EAAI,YAAc,CAAA,EAE3CE,EAASD,EAAK,OAASA,EAAK,QAAU,CAAA,EAEtCrE,EAAQ97B,EACR67B,EAAS97B,EACT67B,EAAWnC,GAAS35B,CAAG,GAAKA,EAAI,OAAS,EAAIA,EAAMugC,GAAiB,EAG1E,OAAID,EAAM,SAAW,GACnBA,EAAM,KAAK,CACT,MAAAtE,EACA,SAAAF,EACA,SAAUG,GACV,OAAQ,GACR,OAAAF,CACN,CAAK,EAGI9zB,CACT,CAEA,SAAS03B,GAAiB3gC,EAAM,CAC9BK,GAAeC,EAAO,IAAI,4BAA4BN,CAAI,EAAE,CAC9D,CAEA,SAAS8gC,IAAa,CACpB,MAAMh3B,EAASoC,EAAW,EAK1B,OAJiBpC,GAAUA,EAAO,WAAU,GAAO,CACjD,YAAa,IAAM,CAAE,EACrB,iBAAkB,EACnB,CAEH,CC/KA,MAAM03B,GAA2C,KACxC,CACL,KAAM,cACN,gBAAgBv4B,EAAO,CAErB,GAAI,CAACwc,EAAO,WAAa,CAACA,EAAO,UAAY,CAACA,EAAO,SACnD,OAIF,MAAMzkB,EAAOiI,EAAM,SAAWA,EAAM,QAAQ,KAASwc,EAAO,UAAYA,EAAO,SAAS,KAClF,CAAE,SAAAgc,CAAQ,EAAKhc,EAAO,UAAY,CAAE,EACpC,CAAE,UAAAic,CAAS,EAAKjc,EAAO,WAAa,CAAE,EAEtClf,EAAU,CACd,GAAI0C,EAAM,SAAWA,EAAM,QAAQ,QACnC,GAAIw4B,GAAY,CAAE,QAASA,GAC3B,GAAIC,GAAa,CAAE,aAAcA,EAClC,EACKvd,EAAU,CAAE,GAAGlb,EAAM,QAAS,GAAIjI,GAAO,CAAE,IAAAA,GAAQ,QAAAuF,CAAS,EAElE0C,EAAM,QAAUkb,CACjB,CACF,GC3BGwd,GAAc,QACdC,GAAgB,EAEhBvkB,GAAmB,eAEnBwkB,GAA4B,CAACp9B,EAAU,KAAO,CAClD,MAAM6U,EAAQ7U,EAAQ,OAASm9B,GACzBv2B,EAAM5G,EAAQ,KAAOk9B,GAE3B,MAAO,CACL,KAAMtkB,GACN,gBAAgBpU,EAAO0K,EAAM7J,EAAQ,CACnC,MAAMrF,EAAUqF,EAAO,WAAY,EAEnC2V,GAEEkJ,GACAlkB,EAAQ,YACRA,EAAQ,eACR4G,EACAiO,EACArQ,EACA0K,CACD,CACF,CACF,CACH,EAKMmuB,GAA4CD,GCpBlD,SAASE,GAAuBt9B,EAAS,CAKvC,MAAMkO,EAAe,CACnBwL,GAA2B,EAC3BR,GAA6B,EAC7BmiB,GAA6B,EAC7BjB,GAAwB,EACxBgC,GAA2B,EAC3BiB,GAAyB,EACzBvf,GAAmB,EACnBif,GAAwB,CACzB,EAGD,OAAI/8B,EAAQ,sBAAwB,IAClCkO,EAAa,KAAK2tB,IAA2B,EAGxC3tB,CACT,CAEA,SAASqvB,GAAoBC,EAAa,GAAI,CAC5C,MAAMC,EAAiB,CACrB,oBAAqBH,GAAuBE,CAAU,EACtD,QACE,OAAO,oBAAuB,SAC1B,mBACAxc,EAAO,gBAAkBA,EAAO,eAAe,GAC7CA,EAAO,eAAe,GACtB,OACR,oBAAqB,GACrB,kBAAmB,EACpB,EAMD,OAAIwc,EAAW,qBAAuB,MACpC,OAAOA,EAAW,oBAGb,CAAE,GAAGC,EAAgB,GAAGD,CAAY,CAC7C,CAEA,SAASE,IAAkC,CACzC,MAAMC,EACJ,OAAO3c,EAAO,OAAW,KAAgBA,EAC3C,GAAI,CAAC2c,EAEH,MAAO,GAGT,MAAMC,EAAeD,EAAyB,OAAS,SAAW,UAC5DE,EAAkBF,EAAyBC,CAAY,EAEvDE,EAAYD,GAAmBA,EAAgB,SAAWA,EAAgB,QAAQ,GAClFE,EAAQ/c,EAAO,UAAYA,EAAO,SAAS,MAAS,GAEpDgd,EAAqB,CAAC,oBAAqB,iBAAkB,wBAAyB,uBAAuB,EAG7GC,EACJ,CAAC,CAACH,GAAa9c,IAAWA,EAAO,KAAOgd,EAAmB,KAAK19B,GAAYy9B,EAAK,WAAW,GAAGz9B,CAAQ,IAAI,CAAC,EAIxG49B,EAAS,OAAOP,EAAyB,GAAO,IAEtD,MAAO,CAAC,CAACG,GAAa,CAACG,GAA4B,CAACC,CACtD,CAoDA,SAASC,GAAKC,EAAiB,GAAI,CACjC,MAAMp+B,EAAUu9B,GAAoBa,CAAc,EAElD,GAAI,CAACp+B,EAAQ,2BAA6B09B,KAAmC,CAC3Ev8B,GAAe,IAAM,CAEnB,QAAQ,MACN,uJACD,CACP,CAAK,EACD,MACJ,CAEMvF,IACGqlB,GAAa,GAChBplB,EAAO,KACL,oIACD,GAGL,MAAMyd,EAAgB,CACpB,GAAGtZ,EACH,YAAaq+B,GAAkCr+B,EAAQ,aAAeu5B,EAAkB,EACxF,aAAcjrB,GAAuBtO,CAAO,EAC5C,UAAWA,EAAQ,WAAa43B,EACjC,EAED,OAAOnjB,GAAYkS,GAAerN,CAAa,CACjD,CCnKA,MAAMV,GAAmB,aAEnB0lB,GAA0B,CAACt+B,EAAU,KAAO,CAChD,MAAM65B,EAAW,CACf,yBAA0B,CAAC,CAAC,IAAK,GAAG,CAAC,EACrC,qBAAsB,CAAC,IAAI,EAC3B,GAAG75B,CACJ,EAED,MAAO,CACL,KAAM4Y,GACN,MAAMvT,EAAQ,CACZk5B,GAAWl5B,EAAQw0B,CAAQ,EAC3BqB,GAAS71B,EAAQw0B,CAAQ,CAC1B,CACF,CACH,EAKM2E,GAA0CF,GAShD,SAASG,GACPz+B,EACA0+B,EACAvnB,EACAwnB,EACAjiC,EACA,CACA,GAAIkiC,GAAuB5+B,EAASmX,EAAS,OAAQA,EAAS,GAAG,EAAG,CAClE,MAAMuI,EAAUmf,GAAYH,EAAaC,CAAW,EAEpD,IAAIG,EAAgBC,EAAiBC,EAAgBC,EAEjDC,GAAqB,IACvB,CAACJ,EAAgBE,CAAc,EAAIG,GAAoB,SAAUzf,CAAO,EACxE,CAACqf,EAAiBE,CAAe,EAAIE,GAAoB,aAAchoB,CAAQ,GAGjF,MAAM3S,EAAQ46B,GAAa,CACzB,IAAK1f,EAAQ,IACb,OAAQA,EAAQ,OAChB,OAAQvI,EAAS,OACjB,eAAA2nB,EACA,gBAAAC,EACA,eAAAC,EACA,gBAAAC,EACA,MAAAviC,CACN,CAAK,EAED6/B,GAAa/3B,CAAK,CACtB,CACA,CAEA,SAAS26B,GACPE,EACAzc,EACA,CACA,MAAM9gB,EAAUw9B,GAAqB1c,EAAI,OAAO,EAChD,IAAI2c,EAEJ,GAAI,CACF,MAAMC,EAAe19B,EAAQu9B,CAAY,GAAKv9B,EAAQu9B,EAAa,YAAa,CAAA,GAAK,OAEjFG,IACFD,EAAUE,GAAmBD,CAAY,EAE5C,MAAY,CAEf,CAEE,MAAO,CAAC19B,EAASy9B,CAAO,CAC1B,CASA,SAASG,GACP1/B,EACAw7B,EACAlc,EACAxd,EACApF,EACA,CACA,GAAIkiC,GAAuB5+B,EAASw7B,EAAI,OAAQA,EAAI,WAAW,EAAG,CAChE,IAAIsD,EAAgBG,EAAiBF,EAErC,GAAIG,GAAqB,EAAI,CAC3B,GAAI,CACF,MAAMM,EAAehE,EAAI,kBAAkB,YAAY,GAAKA,EAAI,kBAAkB,YAAY,GAAK,OAE/FgE,IACFP,EAAkBQ,GAAmBD,CAAY,EAEpD,MAAY,CAEnB,CAEM,GAAI,CACFT,EAAkBY,GAAuBnE,CAAG,CAC7C,MAAY,CAEnB,CAEMsD,EAAiBh9B,CACvB,CAEI,MAAM0C,EAAQ46B,GAAa,CACzB,IAAK5D,EAAI,YACT,OAAAlc,EACA,OAAQkc,EAAI,OACZ,eAAAsD,EAEA,gBAAAC,EACA,gBAAAE,EACA,MAAAviC,CACN,CAAK,EAED6/B,GAAa/3B,CAAK,CACtB,CACA,CAQA,SAASo7B,GAA4B99B,EAAS,CAC5C,GAAIA,EAAS,CACX,MAAM4e,EAAgB5e,EAAQ,gBAAgB,GAAKA,EAAQ,gBAAgB,EAE3E,GAAI4e,EACF,OAAO,SAASA,EAAe,EAAE,CAEvC,CAGA,CAQA,SAAS+e,GAAmBD,EAAc,CACxC,OAAOA,EAAa,MAAM,IAAI,EAAE,OAAO,CAACj8B,EAAKs8B,IAAW,CACtD,KAAM,CAACj5B,EAAKf,CAAK,EAAIg6B,EAAO,MAAM,GAAG,EACrC,OAAIj5B,GAAOf,IACTtC,EAAIqD,CAAG,EAAIf,GAENtC,CACR,EAAE,EAAE,CACP,CAQA,SAAS+7B,GAAqBx9B,EAAS,CACrC,MAAMiP,EAAS,CAAE,EAEjB,OAAAjP,EAAQ,QAAQ,CAAC+D,EAAOe,IAAQ,CAC9BmK,EAAOnK,CAAG,EAAIf,CAClB,CAAG,EAEMkL,CACT,CAQA,SAAS4uB,GAAuBnE,EAAK,CACnC,MAAM15B,EAAU05B,EAAI,sBAAuB,EAE3C,OAAK15B,EAIEA,EAAQ,MAAM;AAAA,CAAM,EAAE,OAAO,CAACyB,EAAK/G,IAAS,CACjD,KAAM,CAACoK,EAAKf,CAAK,EAAIrJ,EAAK,MAAM,IAAI,EACpC,OAAIoK,GAAOf,IACTtC,EAAIqD,CAAG,EAAIf,GAENtC,CACR,EAAE,EAAE,EATI,CAAE,CAUb,CAQA,SAASu8B,GACPC,EACAv0B,EACA,CACA,OAAOu0B,EAAqB,KAAMC,GAC5B,OAAOA,GAAuB,SACzBx0B,EAAO,SAASw0B,CAAkB,EAGpCA,EAAmB,KAAKx0B,CAAM,CACtC,CACH,CAQA,SAASy0B,GACPC,EACAC,EACA,CACA,OAAOD,EAAyB,KAAME,GAChC,OAAOA,GAAU,SACZA,IAAUD,EAGZA,GAAUC,EAAM,CAAC,GAAKD,GAAUC,EAAM,CAAC,CAC/C,CACH,CAKA,SAAS7B,GAAWl5B,EAAQrF,EAAS,CAC9BohB,GAAmB,GAIxBI,GAA+BxC,GAAe,CAC5C,GAAIvX,EAAW,IAAKpC,EAClB,OAGF,KAAM,CAAE,SAAA8R,EAAU,KAAAzL,EAAM,MAAAhP,EAAO,aAAAqlB,CAAc,EAAG/C,EAC1C,CAAC0f,EAAaC,CAAW,EAAIjzB,EAE9ByL,GAILsnB,GAAsBz+B,EAAS0+B,EAAavnB,EAAWwnB,EAAajiC,GAASqlB,CAAY,CAC1F,EAAE,EAAK,CACV,CAKA,SAASmZ,GAAS71B,EAAQrF,EAAS,CAC3B,mBAAoB3D,GAI1Bu5B,GAA6B5W,GAAe,CAC1C,GAAIvX,EAAW,IAAKpC,EAClB,OAGF,KAAM,CAAE,MAAA3I,EAAO,aAAAqlB,CAAY,EAAK/C,EAE1Bwc,EAAMxc,EAAY,IAElB8X,EAAgB0E,EAAI7F,EAAmB,EAE7C,GAAI,CAACmB,EACH,OAGF,KAAM,CAAE,OAAAxX,EAAQ,gBAAiBxd,CAAS,EAAGg1B,EAE7C,GAAI,CACF4I,GAAoB1/B,EAASw7B,EAAKlc,EAAQxd,EAASpF,GAASqlB,CAAY,CACzE,OAAQpmB,EAAG,CACVC,GAAeC,EAAO,KAAK,0DAA2DF,CAAC,CAC7F,CACA,CAAG,CACH,CAQA,SAASijC,GAAuB5+B,EAASmgC,EAAQ5jC,EAAK,CACpD,OACE0jC,GAAuBjgC,EAAQ,yBAA0BmgC,CAAM,GAC/DL,GAAyB9/B,EAAQ,qBAAsBzD,CAAG,GAC1D,CAAC6a,GAAmB7a,EAAKkL,EAAW,CAAA,CAExC,CAQA,SAAS23B,GAAarjC,EAEpB,CACA,MAAMsJ,EAASoC,EAAW,EACpB44B,EAAoBh7B,GAAUtJ,EAAK,OAASA,EAAK,iBAAiB,MAAQA,EAAK,MAAM,MAAQ,OAE7FukC,EAAQD,GAAqBh7B,EAASA,EAAO,aAAa,YAAYg7B,EAAmB,EAAG,CAAC,EAAI,OACjGhjC,EAAU,uCAAuCtB,EAAK,MAAM,GAE5DyI,EAAQ,CACZ,QAAAnH,EACA,UAAW,CACT,OAAQ,CACN,CACE,KAAM,QACN,MAAOA,EACP,WAAYijC,EAAQ,CAAE,OAAQA,CAAO,EAAG,MACzC,CACF,CACF,EACD,QAAS,CACP,IAAKvkC,EAAK,IACV,OAAQA,EAAK,OACb,QAASA,EAAK,eACd,QAASA,EAAK,cACf,EACD,SAAU,CACR,SAAU,CACR,YAAaA,EAAK,OAClB,QAASA,EAAK,gBACd,QAASA,EAAK,gBACd,UAAW6jC,GAA4B7jC,EAAK,eAAe,CAC5D,CACF,CACF,EAED,OAAAuhB,GAAsB9Y,EAAO,CAC3B,KAAM,cACN,QAAS,EACb,CAAG,EAEMA,CACT,CAEA,SAASq6B,GAAYH,EAAaC,EAAa,CAQ7C,MAPI,CAACA,GAAeD,aAAuB,SAOvCA,aAAuB,SAAWA,EAAY,SACzCA,EAGF,IAAI,QAAQA,EAAaC,CAAW,CAC7C,CAEA,SAASO,IAAwB,CAC/B,MAAM75B,EAASoC,EAAW,EAC1B,OAAOpC,EAAS,EAAQA,EAAO,WAAY,EAAC,eAAkB,EAChE,CC7XA,MAAMk7B,GAAmB,IAAI,QACvBC,GAAuB,IAAI,IAE3BC,GAAuC,CAC3C,WAAY,GACZ,SAAU,GACV,kBAAmB,GACnB,4BAA6B,EAC/B,EAGA,SAASC,GAA2Br7B,EAAQw0B,EAAU,CACpD,KAAM,CACJ,WAAA8G,EACA,SAAAC,EACA,4BAAAC,EACA,2BAAAC,EACA,kBAAAC,EACA,wBAAAC,CACJ,EAAM,CACF,WAAYP,GAAqC,WACjD,SAAUA,GAAqC,SAC/C,4BAA6BA,GAAqC,4BAClE,GAAG5G,CACJ,EAEK5a,EACJ,OAAO6hB,GAA+B,WAAaA,EAA8BG,GAAM,GAEnFC,EAAkC3kC,GAAQ2iB,GAAoB3iB,EAAKykC,CAAuB,EAE1F57B,EAAQ,CAAE,EAEZu7B,IAGFt7B,EAAO,kBAAkBb,IACnBA,EAAM,OAAS,eAAiBA,EAAM,OACxCA,EAAM,MAAM,QAAQ9G,GAAQ,CAC1B,GAAIA,EAAK,KAAO,cAAe,CAC7B,MAAMyjC,EAAmBX,GAAqB,IAAI9iC,EAAK,OAAO,EAC1DyjC,IACFzjC,EAAK,UAAYyjC,EAAmB,IACpCX,GAAqB,OAAO9iC,EAAK,OAAO,EAEtD,CACA,CAAS,EAEI8G,EACR,EAEGq8B,GACFlf,GAAkC3C,GAAe,CAC/C,GAAIA,EAAY,SAAU,CACxB,MAAMthB,EAAO6iC,GAAiB,IAAIvhB,EAAY,QAAQ,EAClDthB,GAAQshB,EAAY,cACtBwhB,GAAqB,IAAI9iC,EAAMshB,EAAY,YAAY,CAEnE,CACA,CAAO,EAGHwC,GAA+BxC,GAAe,CAC5C,MAAMoiB,EAAcriB,GAAuBC,EAAaC,EAAkBiiB,EAAgC97B,CAAK,EAS/G,GAPI4Z,EAAY,UAAYA,EAAY,UAAU,QAChDuhB,GAAiB,IAAIvhB,EAAY,SAAUA,EAAY,UAAU,MAAM,EAMrEoiB,EAAa,CACf,MAAM7hB,EAAUC,GAAWR,EAAY,UAAU,GAAG,EAC9Cte,EAAO6e,EAAUpD,GAASoD,CAAO,EAAE,KAAO,OAChD6hB,EAAY,cAAc,CACxB,WAAY7hB,EACZ,iBAAkB7e,CAC5B,CAAS,CACT,CAEUqgC,GAAqBK,GACvBC,GAAeD,CAAW,CAElC,CAAK,GAGCR,GACFhL,GAA6B5W,GAAe,CAC1C,MAAMoiB,EAAcE,GAAYtiB,EAAaC,EAAkBiiB,EAAgC97B,CAAK,EAChG27B,GAAqBK,GACvBC,GAAeD,CAAW,CAElC,CAAK,CAEL,CAEA,SAASG,GAA4BpY,EAAO,CAC1C,OACEA,EAAM,YAAc,YACpB,kBAAmBA,GACnB,OAAQA,EAAQ,iBAAoB,WACnCA,EAAM,gBAAkB,SAAWA,EAAM,gBAAkB,iBAEhE,CAQA,SAASkY,GAAe3jC,EAAM,CAC5B,KAAM,CAAE,IAAAnB,CAAG,EAAK6C,EAAW1B,CAAI,EAAE,MAAQ,CAAE,EAE3C,GAAI,CAACnB,GAAO,OAAOA,GAAQ,SACzB,OAGF,MAAMkQ,EAAUsgB,GAAqC,WAAY,CAAC,CAAE,QAAA7D,CAAO,IAAO,CAChFA,EAAQ,QAAQC,GAAS,CACnBoY,GAA4BpY,CAAK,GAAKA,EAAM,KAAK,SAAS5sB,CAAG,IAC9CilC,GAA8BrY,CAAK,EAC3C,QAAQptB,GAAQ2B,EAAK,aAAa,GAAG3B,CAAI,CAAC,EAGnD,WAAW0Q,CAAO,EAE1B,CAAK,CACL,CAAG,CACH,CAQA,SAASg1B,GAAuBC,EAAiB,CAC/C,IAAIr9B,EAAO,UACPC,EAAU,UACV7F,EAAQ,GACZ,UAAWkjC,KAAQD,EAAiB,CAElC,GAAIC,IAAS,IAAK,CAChB,CAACt9B,EAAMC,CAAO,EAAIo9B,EAAgB,MAAM,GAAG,EAC3C,KACN,CAEI,GAAI,CAAC,MAAM,OAAOC,CAAI,CAAC,EAAG,CACxBt9B,EAAO5F,IAAU,IAAM,OAASA,EAChC6F,EAAUo9B,EAAgB,MAAMjjC,CAAK,EAAE,CAAC,EACxC,KACN,CACIA,GAASkjC,CACb,CACE,OAAIljC,IAAUijC,IAEZr9B,EAAO5F,GAEF,CAAE,KAAA4F,EAAM,QAAAC,CAAS,CAC1B,CAEA,SAASs9B,EAAgBr6B,EAAO,EAAG,CACjC,QAASynB,GAAgC,YAAY,YAAcznB,GAAQ,GAC7E,CAEA,SAASi6B,GAA8BK,EAAgB,CACrD,KAAM,CAAE,KAAAx9B,EAAM,QAAAC,CAAO,EAAKm9B,GAAuBI,EAAe,eAAe,EAEzEC,EAAiB,CAAE,EAIzB,OAFAA,EAAe,KAAK,CAAC,2BAA4Bx9B,CAAO,EAAG,CAAC,wBAAyBD,CAAI,CAAC,EAErF2qB,EAGE,CACL,GAAG8S,EACH,CAAC,8BAA+BF,EAAgBC,EAAe,aAAa,CAAC,EAC7E,CAAC,2BAA4BD,EAAgBC,EAAe,UAAU,CAAC,EACvE,CAAC,mCAAoCD,EAAgBC,EAAe,iBAAiB,CAAC,EACtF,CAAC,iCAAkCD,EAAgBC,EAAe,eAAe,CAAC,EAClF,CAAC,6BAA8BD,EAAgBC,EAAe,YAAY,CAAC,EAC3E,CAAC,uCAAwCD,EAAgBC,EAAe,qBAAqB,CAAC,EAC9F,CAAC,8BAA+BD,EAAgBC,EAAe,UAAU,CAAC,EAC1E,CAAC,6BAA8BD,EAAgBC,EAAe,YAAY,CAAC,EAC3E,CAAC,8BAA+BD,EAAgBC,EAAe,aAAa,CAAC,EAC7E,CAAC,4BAA6BD,EAAgBC,EAAe,WAAW,CAAC,CAC1E,EAdQC,CAeX,CAMA,SAAS5iB,GACP6iB,EACAf,EACA,CAGA,MAAMjD,EAAO/c,EAAO,UAAYA,EAAO,SAAS,KAEhD,GAAK+c,EAUE,CACL,IAAIiE,EACAC,EAGJ,GAAI,CACFD,EAAc,IAAI,IAAID,EAAWhE,CAAI,EACrCkE,EAAgB,IAAI,IAAIlE,CAAI,EAAE,MAC/B,MAAW,CACV,MAAO,EACb,CAEI,MAAMmE,EAAsBF,EAAY,SAAWC,EACnD,OAAKjB,EAID1mB,GAAyB0nB,EAAY,SAAU,EAAEhB,CAAuB,GACvEkB,GAAuB5nB,GAAyB0nB,EAAY,SAAUhB,CAAuB,EAJzFkB,CAOb,KA/Ba,CAIT,MAAMC,EAA8B,CAAC,CAACJ,EAAU,MAAM,WAAW,EACjE,OAAKf,EAGI1mB,GAAyBynB,EAAWf,CAAuB,EAF3DmB,CAIb,CAsBA,CAOA,SAASb,GACPtiB,EACAC,EACAC,EACA9Z,EACA,CACA,MAAMo2B,EAAMxc,EAAY,IAClB8X,EAAgB0E,GAAOA,EAAI7F,EAAmB,EAEpD,GAAI,CAAC6F,GAAOA,EAAI,wBAA0B,CAAC1E,EACzC,OAGF,MAAM1X,EAAyBlf,GAAiB,GAAM+e,EAAiB6X,EAAc,GAAG,EAGxF,GAAI9X,EAAY,cAAgBI,EAAwB,CACtD,MAAM/f,EAASm8B,EAAI,uBACnB,GAAI,CAACn8B,EAAQ,OAEb,MAAM3B,EAAO0H,EAAM/F,CAAM,EACrB3B,GAAQo5B,EAAc,cAAgB,SACxCrW,GAAc/iB,EAAMo5B,EAAc,WAAW,EAC7Cp5B,EAAK,IAAK,EAGV,OAAO0H,EAAM/F,CAAM,GAErB,MACJ,CAEE,MAAMkgB,EAAUC,GAAWsX,EAAc,GAAG,EACtCp2B,EAAO6e,EAAUpD,GAASoD,CAAO,EAAE,KAAO,OAE1CE,EAAY,CAAC,CAACviB,EAAe,EAE7BQ,EACJ0hB,GAA0BK,EACtB/W,GAAkB,CAChB,KAAM,GAAGouB,EAAc,MAAM,IAAIA,EAAc,GAAG,GAClD,WAAY,CACV,KAAM,MACN,cAAeA,EAAc,OAC7B,WAAYvX,EACZ,IAAKuX,EAAc,IACnB,iBAAkBp2B,EAClB,CAAC8F,CAAgC,EAAG,oBACpC,CAACC,EAA4B,EAAG,aACjC,CACF,CAAA,EACD,IAAI1I,GAEV,OAAAy9B,EAAI,uBAAyB99B,EAAK,YAAa,EAAC,OAChD0H,EAAMo2B,EAAI,sBAAsB,EAAI99B,EAEhCwhB,EAAoB4X,EAAc,GAAG,GACvCsL,GACE5G,EAIAt7B,GAAmB,GAAIuf,EAAY/hB,EAAO,MAC3C,EAGIA,CACT,CAEA,SAAS0kC,GAA8B5G,EAAK99B,EAAM,CAChD,KAAM,CAAE,eAAgBma,EAAa,QAAAG,CAAS,EAAGL,GAAa,CAAE,KAAAja,EAAM,EAElEma,GACFwqB,GAAe7G,EAAK3jB,EAAaG,CAAO,CAE5C,CAEA,SAASqqB,GACP7G,EACA8G,EACAC,EACA,CACA,GAAI,CAEF/G,EAAI,iBAAiB,eAAgB8G,CAAiB,EAClDC,GAKF/G,EAAI,iBAAiB,UAAW+G,CAAmB,CAEtD,MAAW,CAEd,CACA,CAEA,SAAS/iB,GAAWjjB,EAAK,CACvB,GAAI,CAIF,OADe,IAAI,IAAIA,EAAKykB,EAAO,SAAS,MAAM,EACpC,IACf,MAAY,CACX,MACJ,CACA,CC1VA,SAASwhB,IAAiC,CACpCxhB,GAAUA,EAAO,SACnBA,EAAO,SAAS,iBAAiB,mBAAoB,IAAM,CACzD,MAAM/jB,EAAaC,EAAe,EAClC,GAAI,CAACD,EACH,OAGF,MAAME,EAAWC,EAAYH,CAAU,EAEvC,GAAI+jB,EAAO,SAAS,QAAU7jB,EAAU,CACtC,MAAMslC,EAAkB,YAElB,CAAE,GAAAvjC,EAAI,OAAAihC,GAAW/gC,EAAWjC,CAAQ,EAEtCvB,GACFC,EAAO,IAAI,0BAA0B4mC,CAAe,8CAA8CvjC,CAAE,EAAE,EAKnGihC,GACHhjC,EAAS,UAAU,CAAE,KAAMG,GAAmB,QAASmlC,EAAiB,EAG1EtlC,EAAS,aAAa,6BAA8B,iBAAiB,EACrEA,EAAS,IAAK,CACtB,CACA,CAAK,EAEDvB,GAAeC,EAAO,KAAK,oFAAoF,CAEnH,CC/BA,MAAM6mC,GAAiC,iBAEjCC,GAAkC,CACtC,GAAGt4B,GACH,qBAAsB,GACtB,mBAAoB,GACpB,mBAAoB,GACpB,eAAgB,GAChB,yBAA0B,GAC1B,UAAW,GACX,aAAc,CAAE,EAChB,GAAGo2B,EACL,EAWMmC,GAA6B,CAAC/I,EAAW,KAAO,CACpD98B,GAAkC,EAElC,KAAM,CACJ,UAAA8lC,EACA,eAAAC,EACA,yBAAAC,EACA,aAAc,CAAE,mBAAAC,EAAoB,yBAAAC,CAA0B,EAC9D,gBAAAC,EACA,YAAAh4B,EACA,aAAAC,EACA,iBAAAC,EACA,mBAAA+3B,EACA,WAAAxC,EACA,SAAAC,EACA,4BAAAC,EACA,2BAAAC,EACA,kBAAAC,EACA,mBAAAqC,EACA,qBAAAC,CACJ,EAAM,CACF,GAAGV,GACH,GAAG9I,CACJ,EAEKyJ,EAAoB9T,GAAuB,CAAE,yBAA0ByT,GAA4B,EAAK,CAAE,EAE5GJ,GACF5L,GAAkB,EAIlB8L,GACA1mC,EAAW,qBACX,oBAAoB,qBACpB,oBAAoB,oBAAoB,SAAS,sBAAsB,EAEvEm0B,GAAkC,EACzBsS,GACT3S,GAAwB,EAGtB6S,GACFjS,GAA2B,EAG7B,MAAMwS,EAAc,CAClB,KAAM,OACN,OAAQ,MACT,EAGD,SAASC,EAAiBn+B,EAAQsF,EAAkB,CAClD,MAAM84B,EAAwB94B,EAAiB,KAAO,WAEhD+4B,EAAwBR,EAC1BA,EAAgBv4B,CAAgB,EAChCA,EAEEvE,EAAas9B,EAAsB,YAAc,CAAE,EAIrD/4B,EAAiB,OAAS+4B,EAAsB,OAClDt9B,EAAWW,CAAgC,EAAI,SAC/C28B,EAAsB,WAAat9B,GAGrCm9B,EAAY,KAAOG,EAAsB,KACzCH,EAAY,OAASn9B,EAAWW,CAAgC,EAEhE,MAAM48B,EAAWj5B,GAAcg5B,EAAuB,CACpD,YAAAx4B,EACA,aAAAC,EACA,iBAAAC,EAEA,kBAAmBq4B,EACnB,cAAe/lC,GAAQ,CACrB4lC,EAAmB,EACnBlS,GAAsB1zB,EAAM,CAAE,wBAAyB,CAACulC,CAAwB,CAAE,CACnF,CACP,CAAK,EAED,SAASW,GAAa,CAChB,CAAC,cAAe,UAAU,EAAE,SAAS5iB,EAAO,SAAS,UAAU,GACjE3b,EAAO,KAAK,2BAA4Bs+B,CAAQ,CAExD,CAEI,OAAIF,GAAyBziB,EAAO,WAClCA,EAAO,SAAS,iBAAiB,mBAAoB,IAAM,CACzD4iB,EAAY,CACpB,CAAO,EAEDA,EAAY,GAGPD,CACX,CAEE,MAAO,CACL,KAAMjB,GACN,cAAcr9B,EAAQ,CACpB,IAAIpI,EACA4mC,EAAc7iB,EAAO,UAAYA,EAAO,SAAS,KAErD,SAAS8iB,GAAqB,CACxB7mC,GAAc,CAACmC,EAAWnC,CAAU,EAAE,YACxCrB,GAAeC,EAAO,IAAI,oDAAoDuD,EAAWnC,CAAU,EAAE,EAAE,EAAE,EAEzGA,EAAW,IAAK,EAE1B,CAEMoI,EAAO,GAAG,sBAAuBsF,GAAoB,CAC/ClD,EAAW,IAAKpC,IAIpBy+B,EAAoB,EAEpB7mC,EAAaumC,EAAiBn+B,EAAQ,CACpC,GAAI,aACJ,GAAGsF,CACb,CAAS,EACT,CAAO,EAEDtF,EAAO,GAAG,oBAAqB,CAACsF,EAAkBo5B,EAAe,CAAA,IAAO,CACtE,GAAIt8B,EAAW,IAAKpC,EAClB,OAEFy+B,EAAoB,EAEpB,MAAMjsB,EAAcksB,EAAa,aAAeC,GAAe,cAAc,EACvEhsB,EAAU+rB,EAAa,SAAWC,GAAe,SAAS,EAE1DC,GAAqBC,GAA8BrsB,EAAaG,CAAO,EAC7EpQ,EAAiB,EAAC,sBAAsBq8B,EAAkB,EAE1DhnC,EAAaumC,EAAiBn+B,EAAQ,CACpC,GAAI,WACJ,GAAGsF,CACb,CAAS,CACT,CAAO,EAODtF,EAAO,GAAG,UAAW3H,GAAQ,CAC3B,MAAMwB,EAAKE,EAAW1B,CAAI,EAAE,GAC5B,GAAIA,IAASN,EAAYM,CAAI,GAAMwB,IAAO,cAAgBA,IAAO,WAC/D,OAGF,MAAMvB,EAAQiK,EAAiB,EACzBu8B,EAAwBxmC,EAAM,sBAAuB,EAE3DA,EAAM,sBAAsB,CAC1B,GAAGwmC,EACH,QAASA,EAAsB,UAAY,OAAYA,EAAsB,QAAU5kC,GAAc7B,CAAI,EACzG,IAAKymC,EAAsB,KAAO3+B,GAAkC9H,CAAI,CAClF,CAAS,CACT,CAAO,EAEGsjB,EAAO,WACLoiB,GACFgB,GAAgC/+B,EAAQ,CACtC,KAAM2b,EAAO,SAAS,SAEtB,UAAWgO,EAA+BA,EAA+B,IAAO,OAChF,WAAY,CACV,CAACjoB,CAAgC,EAAG,MACpC,CAACP,CAAgC,EAAG,uBACrC,CACb,CAAW,EAGC68B,GACFvO,GAAiC,CAAC,CAAE,GAAAG,EAAI,KAAArzB,KAAW,CAUjD,GAAIA,IAAS,QAAaiiC,GAAeA,EAAY,QAAQ5O,CAAE,IAAM,GAAI,CACvE4O,EAAc,OACd,MACd,CAEgBjiC,IAASqzB,IACX4O,EAAc,OACdQ,GAAkCh/B,EAAQ,CACxC,KAAM2b,EAAO,SAAS,SACtB,WAAY,CACV,CAACja,CAAgC,EAAG,MACpC,CAACP,CAAgC,EAAG,yBACrC,CACjB,CAAe,EAEf,CAAW,GAID28B,GACFX,GAAgC,EAG9BQ,GACFsB,GAA4Bp5B,EAAaC,EAAcC,EAAkBm4B,CAAW,EAGlFV,GACFrL,GAAgC,EAGlCkJ,GAA2Br7B,EAAQ,CACjC,WAAAs7B,EACA,SAAAC,EACA,4BAAAC,EACA,wBAAyBx7B,EAAO,WAAU,EAAG,wBAC7C,2BAAAy7B,EACA,kBAAAC,CACR,CAAO,CACF,CACF,CACH,EASA,SAASqD,GACP/+B,EACA2rB,EACA+S,EACA,CACA1+B,EAAO,KAAK,oBAAqB2rB,EAAa+S,CAAY,EAE1Dn8B,IAAkB,mBAAmBopB,EAAY,IAAI,EAErD,MAAMtzB,EAAOR,EAAe,EAE5B,OADWQ,GAAQ0B,EAAW1B,CAAI,EAAE,MACtB,WAAaA,EAAO,MACpC,CAMA,SAAS2mC,GAAkCh/B,EAAQ2rB,EAAa,CAC9DznB,GAAmB,EAAC,sBAAsB,CAAE,QAAStL,GAAiB,CAAA,CAAE,EACxE2J,EAAiB,EAAC,sBAAsB,CAAE,QAAS3J,GAAiB,CAAA,CAAE,EAEtEoH,EAAO,KAAK,sBAAuB2rB,CAAW,EAE9CppB,IAAkB,mBAAmBopB,EAAY,IAAI,EAErD,MAAMtzB,EAAOR,EAAe,EAE5B,OADWQ,GAAQ0B,EAAW1B,CAAI,EAAE,MACtB,aAAeA,EAAO,MACtC,CAGA,SAASsmC,GAAeO,EAAU,CAIhC,MAAMC,EAAUC,GAAc,aAAaF,CAAQ,GAAG,EAEtD,OAAOC,EAAUA,EAAQ,aAAa,SAAS,EAAI,MACrD,CAGA,SAASF,GACPp5B,EACAC,EACAC,EACAm4B,EACA,CACA,IAAImB,EACJ,MAAMC,EAAiC,IAAM,CAC3C,MAAMzlC,EAAK,kBAELjC,EAAaC,EAAe,EAC5BC,EAAWF,GAAcG,EAAYH,CAAU,EACrD,GAAIE,EAAU,CACZ,MAAMynC,EAAoBxlC,EAAWjC,CAAQ,EAAE,GAC/C,GAAI,CAAC,aAAc,UAAU,EAAE,SAASynC,CAAiB,EAAI,CAC3DhpC,GACEC,EAAO,KAAK,4BAA4BqD,CAAE,6DAA6D,EACzG,MACR,CACA,CAQI,GANIwlC,IACFA,EAAwB,aAAa93B,GAAmD,wBAAwB,EAChH83B,EAAwB,IAAK,EAC7BA,EAA0B,QAGxB,CAACnB,EAAY,KAAM,CACrB3nC,GAAeC,EAAO,KAAK,4BAA4BqD,CAAE,mDAAmD,EAC5G,MACN,CAEIwlC,EAA0Bh6B,GACxB,CACE,KAAM64B,EAAY,KAClB,GAAArkC,EACA,WAAY,CACV,CAAC6H,CAAgC,EAAGw8B,EAAY,QAAU,KAC3D,CACF,EACD,CACE,YAAAr4B,EACA,aAAAC,EACA,iBAAAC,CACD,CACF,CACF,EAEG4V,EAAO,UACT,iBAAiB,QAAS2jB,EAAgC,CAAE,KAAM,GAAO,QAAS,GAAM,CAE5F,CCtWA,SAASxG,GAAKn+B,EAAS,CACrB,MAAM4mB,EAAO,CACX,GAAG5mB,CACJ,EAED,OAAAwX,GAAiBoP,EAAM,OAAO,EAC9Bie,GAAW,QAAS,CAAEvgC,QAAAA,GAAAA,QAAS,EACxBwgC,GAAOle,CAAI,CACpB;;;;;;;4CCNa,IAAIre,EAAe,OAAO,QAApB,YAA4B,OAAO,IAAIw8B,EAAEx8B,EAAE,OAAO,IAAI,eAAe,EAAE,MAAMy8B,EAAEz8B,EAAE,OAAO,IAAI,cAAc,EAAE,MAAM5M,EAAE4M,EAAE,OAAO,IAAI,gBAAgB,EAAE,MAAM08B,EAAE18B,EAAE,OAAO,IAAI,mBAAmB,EAAE,MAAM28B,EAAE38B,EAAE,OAAO,IAAI,gBAAgB,EAAE,MAAM48B,EAAE58B,EAAE,OAAO,IAAI,gBAAgB,EAAE,MAAM68B,EAAE78B,EAAE,OAAO,IAAI,eAAe,EAAE,MAAM88B,EAAE98B,EAAE,OAAO,IAAI,kBAAkB,EAAE,MAAM+8B,EAAE/8B,EAAE,OAAO,IAAI,uBAAuB,EAAE,MAAMg9B,EAAEh9B,EAAE,OAAO,IAAI,mBAAmB,EAAE,MAAMi9B,EAAEj9B,EAAE,OAAO,IAAI,gBAAgB,EAAE,MAAMk9B,EAAEl9B,EACpf,OAAO,IAAI,qBAAqB,EAAE,MAAMm9B,EAAEn9B,EAAE,OAAO,IAAI,YAAY,EAAE,MAAMo9B,EAAEp9B,EAAE,OAAO,IAAI,YAAY,EAAE,MAAMq9B,EAAEr9B,EAAE,OAAO,IAAI,aAAa,EAAE,MAAMs9B,EAAEt9B,EAAE,OAAO,IAAI,mBAAmB,EAAE,MAAMu9B,EAAEv9B,EAAE,OAAO,IAAI,iBAAiB,EAAE,MAAMw9B,EAAEx9B,EAAE,OAAO,IAAI,aAAa,EAAE,MAClQ,SAASy9B,EAAE19B,EAAE,CAAC,GAAc,OAAOA,GAAlB,UAA4BA,IAAP,KAAS,CAAC,IAAI29B,EAAE39B,EAAE,SAAS,OAAO29B,EAAG,CAAA,KAAKlB,EAAE,OAAOz8B,EAAEA,EAAE,KAAKA,EAAC,CAAE,KAAK+8B,EAAE,KAAKC,EAAE,KAAK3pC,EAAE,KAAKupC,EAAE,KAAKD,EAAE,KAAKO,EAAE,OAAOl9B,EAAE,QAAQ,OAAOA,EAAEA,GAAGA,EAAE,SAASA,EAAC,CAAE,KAAK88B,EAAE,KAAKG,EAAE,KAAKI,EAAE,KAAKD,EAAE,KAAKP,EAAE,OAAO78B,EAAE,QAAQ,OAAO29B,CAAC,CAAC,CAAC,KAAKjB,EAAE,OAAOiB,CAAC,CAAC,CAAC,CAAC,SAASC,EAAE59B,EAAE,CAAC,OAAO09B,EAAE19B,CAAC,IAAIg9B,CAAC,CAAC,OAAAa,EAAiB,UAACd,EAAEc,EAAA,eAAuBb,EAAEa,EAAuB,gBAACf,EAAEe,kBAAwBhB,EAAEgB,EAAA,QAAgBpB,EAAEoB,EAAkB,WAACZ,EAAEY,EAAA,SAAiBxqC,EAAEwqC,EAAY,KAACR,EAAEQ,OAAaT,EAAES,EAAA,OAAenB,EAChfmB,EAAA,SAAiBjB,EAAEiB,EAAA,WAAmBlB,EAAEkB,EAAA,SAAiBX,EAAEW,EAAA,YAAoB,SAAS79B,EAAE,CAAC,OAAO49B,EAAE59B,CAAC,GAAG09B,EAAE19B,CAAC,IAAI+8B,CAAC,EAAEc,EAAwB,iBAACD,EAAEC,EAAyB,kBAAC,SAAS79B,EAAE,CAAC,OAAO09B,EAAE19B,CAAC,IAAI88B,CAAC,EAAEe,EAAyB,kBAAC,SAAS79B,EAAE,CAAC,OAAO09B,EAAE19B,CAAC,IAAI68B,CAAC,EAAEgB,EAAiB,UAAC,SAAS79B,EAAE,CAAC,OAAiB,OAAOA,GAAlB,UAA4BA,IAAP,MAAUA,EAAE,WAAWy8B,CAAC,EAAEoB,EAAoB,aAAC,SAAS79B,EAAE,CAAC,OAAO09B,EAAE19B,CAAC,IAAIi9B,CAAC,EAAEY,EAAkB,WAAC,SAAS79B,EAAE,CAAC,OAAO09B,EAAE19B,CAAC,IAAI3M,CAAC,EAAEwqC,EAAc,OAAC,SAAS79B,EAAE,CAAC,OAAO09B,EAAE19B,CAAC,IAAIq9B,CAAC,EAC1dQ,EAAA,OAAe,SAAS79B,EAAE,CAAC,OAAO09B,EAAE19B,CAAC,IAAIo9B,CAAC,EAAES,WAAiB,SAAS79B,EAAE,CAAC,OAAO09B,EAAE19B,CAAC,IAAI08B,CAAC,EAAEmB,EAAkB,WAAC,SAAS79B,EAAE,CAAC,OAAO09B,EAAE19B,CAAC,IAAI48B,CAAC,EAAEiB,EAAA,aAAqB,SAAS79B,EAAE,CAAC,OAAO09B,EAAE19B,CAAC,IAAI28B,CAAC,EAAEkB,EAAkB,WAAC,SAAS79B,EAAE,CAAC,OAAO09B,EAAE19B,CAAC,IAAIk9B,CAAC,EAChNW,EAAA,mBAAC,SAAS79B,EAAE,CAAC,OAAiB,OAAOA,GAAlB,UAAkC,OAAOA,GAApB,YAAuBA,IAAI3M,GAAG2M,IAAIg9B,GAAGh9B,IAAI48B,GAAG58B,IAAI28B,GAAG38B,IAAIk9B,GAAGl9B,IAAIm9B,GAAc,OAAOn9B,GAAlB,UAA4BA,IAAP,OAAWA,EAAE,WAAWq9B,GAAGr9B,EAAE,WAAWo9B,GAAGp9B,EAAE,WAAW68B,GAAG78B,EAAE,WAAW88B,GAAG98B,EAAE,WAAWi9B,GAAGj9B,EAAE,WAAWu9B,GAAGv9B,EAAE,WAAWw9B,GAAGx9B,EAAE,WAAWy9B,GAAGz9B,EAAE,WAAWs9B,EAAE,EAAEO,EAAc,OAACH,0CCX1TI,GAAA,QAAUC,GAA0C,2DCD7D,IAAIC,EAAUD,GAAmB,EAM7BE,EAAgB,CAClB,kBAAmB,GACnB,YAAa,GACb,aAAc,GACd,aAAc,GACd,YAAa,GACb,gBAAiB,GACjB,yBAA0B,GAC1B,yBAA0B,GAC1B,OAAQ,GACR,UAAW,GACX,KAAM,EACP,EACGC,EAAgB,CAClB,KAAM,GACN,OAAQ,GACR,UAAW,GACX,OAAQ,GACR,OAAQ,GACR,UAAW,GACX,MAAO,EACR,EACGC,EAAsB,CACxB,SAAY,GACZ,OAAQ,GACR,aAAc,GACd,YAAa,GACb,UAAW,EACZ,EACGC,EAAe,CACjB,SAAY,GACZ,QAAS,GACT,aAAc,GACd,YAAa,GACb,UAAW,GACX,KAAM,EACP,EACGC,EAAe,CAAE,EACrBA,EAAaL,EAAQ,UAAU,EAAIG,EACnCE,EAAaL,EAAQ,IAAI,EAAII,EAE7B,SAASE,EAAWllC,EAAW,CAE7B,OAAI4kC,EAAQ,OAAO5kC,CAAS,EACnBglC,EAIFC,EAAajlC,EAAU,QAAW,GAAK6kC,CAChD,CAEA,IAAIM,EAAiB,OAAO,eACxBC,EAAsB,OAAO,oBAC7BC,EAAwB,OAAO,sBAC/BC,EAA2B,OAAO,yBAClCC,EAAiB,OAAO,eACxBC,EAAkB,OAAO,UAC7B,SAASC,EAAqBC,EAAiBC,EAAiBC,EAAW,CACzE,GAAI,OAAOD,GAAoB,SAAU,CAEvC,GAAIH,EAAiB,CACnB,IAAIK,EAAqBN,EAAeI,CAAe,EAEnDE,GAAsBA,IAAuBL,GAC/CC,EAAqBC,EAAiBG,EAAoBD,CAAS,CAE3E,CAEI,IAAInhB,EAAO2gB,EAAoBO,CAAe,EAE1CN,IACF5gB,EAAOA,EAAK,OAAO4gB,EAAsBM,CAAe,CAAC,GAM3D,QAHIG,EAAgBZ,EAAWQ,CAAe,EAC1CK,EAAgBb,EAAWS,CAAe,EAErCvsB,EAAI,EAAGA,EAAIqL,EAAK,OAAQ,EAAErL,EAAG,CACpC,IAAIlU,EAAMuf,EAAKrL,CAAC,EAEhB,GAAI,CAAC0rB,EAAc5/B,CAAG,GAAK,EAAE0gC,GAAaA,EAAU1gC,CAAG,IAAM,EAAE6gC,GAAiBA,EAAc7gC,CAAG,IAAM,EAAE4gC,GAAiBA,EAAc5gC,CAAG,GAAI,CAC7I,IAAI8gC,EAAaV,EAAyBK,EAAiBzgC,CAAG,EAE9D,GAAI,CAEFigC,EAAeO,EAAiBxgC,EAAK8gC,CAAU,CAChD,MAAW,CAAA,CACpB,CACA,CACA,CAEE,OAAON,CACT,CAEA,OAAAO,GAAiBR,UCjGjB,MAAMvrC,GAAe,OAAO,iBAAqB,KAAe,iBCMhE,IAAIgsC,GACAC,GACAC,GAEAC,GACAC,GAAiB,GAErB,MAAMC,GAAqC,IAAI,QAK/C,SAASC,GAGPC,EACA7jC,EACA,CACA,MAAI,CAACsjC,IAAc,CAACC,IAAgB,CAACC,IAAsB,CAACC,IAC1DnsC,IACEC,EAAO,KACL,eAAeyI,CAAO,6GACvB,EAEI6jC,GAMF,SAAUC,EAAQxhB,EAAM,CAC7B,MAAMyhB,EAASF,EAAqBC,EAAQxhB,CAAI,EAC1C0hB,EAAW1hB,GAAQA,EAAK,SAExB8Q,EAAiB6Q,GAAmB,EAK1C,OAAIF,EAAO,MAAM,gBAAkB,OAAS3Q,GAC1C8Q,GAA0B9Q,EAAgB2Q,EAAO,MAAM,SAAUD,EAAQ,OAAWE,CAAQ,EAG9FD,EAAO,UAAWI,GAAU,CAC1B,MAAMC,EAAWD,EAAM,UACnBA,EAAM,gBAAkB,QAAUA,EAAM,gBAAkB,QAC5DE,GAAiB,CACf,SAAAD,EACA,OAAAN,EACA,eAAgBK,EAAM,cACtB,QAAAnkC,EACA,SAAAgkC,CACV,CAAS,CAET,CAAK,EAEMD,CACR,CACH,CAKA,SAASO,GACP5oC,EACAsE,EACA,CACA,MAAMmK,EAAcm0B,GAA0B,CAC5C,GAAG5iC,EACH,mBAAoB,GACpB,qBAAsB,EAC1B,CAAG,EAEK,CACJ,UAAA6oC,EACA,YAAAC,EACA,kBAAAC,EACA,yBAAAC,EACA,YAAAC,EACA,cAAAC,EACA,mBAAA9F,EAAqB,GACrB,qBAAAC,EAAuB,EAC3B,EAAMrjC,EAEJ,MAAO,CACL,GAAGyO,EACH,OAAQ,CACNm5B,GAAaiB,EACbhB,GAAeiB,EACfhB,GAAqBiB,EACrBhB,GAAekB,EAEfjB,GAAiBkB,GAAiB,EACnC,EACD,cAAc7jC,EAAQ,CACpBoJ,EAAY,cAAcpJ,CAAM,EAEhC,MAAM8jC,EAAenoB,GAAUA,EAAO,UAAYA,EAAO,SAAS,SAC9DoiB,GAAsB+F,GACxB/E,GAAgC/+B,EAAQ,CACtC,KAAM8jC,EACN,WAAY,CACV,CAACpiC,CAAgC,EAAG,MACpC,CAACN,EAA4B,EAAG,WAChC,CAACD,CAAgC,EAAG,oCAAoClC,CAAO,EAChF,CACX,CAAS,EAGC++B,GACF4E,GAAmC,IAAI5iC,CAAM,CAEhD,CACF,CACH,CA8DA,SAASsjC,GAAiB/hB,EAExB,CACA,KAAM,CAAE,SAAA8hB,EAAU,OAAAN,EAAQ,eAAAvgB,EAAgB,QAAAvjB,EAAS,QAAA8kC,EAAS,SAAAd,EAAU,UAAAe,CAAS,EAAKziB,EAE9E0iB,EAAW,MAAM,QAAQF,CAAO,EAAIA,EAAUrB,GAAaK,EAAQM,EAAUJ,CAAQ,EAErFjjC,EAASoC,EAAW,EAC1B,GAAI,GAACpC,GAAU,CAAC4iC,GAAmC,IAAI5iC,CAAM,KAIxDwiB,IAAmB,QAAUA,IAAmB,QAAUyhB,EAAU,CACvE,IAAIjlC,EACF6D,EAAS,MACX,MAAMqhC,EAAsBC,GAAgCd,EAAUW,GAAajB,CAAM,EAErFmB,IACFllC,EAAOolC,GAAgBC,GAA8BL,GAAajB,EAAQM,CAAQ,CAAC,EACnFxgC,EAAS,UAGP,CAACqhC,GAAuB,CAACllC,KAC3B,CAACA,EAAM6D,CAAM,EAAIyhC,GAAkBvB,EAAQM,EAAUY,EAAUhB,CAAQ,GAGzEjE,GAAkCh/B,EAAQ,CACxC,KAAAhB,EACA,WAAY,CACV,CAAC0C,CAAgC,EAAGmB,EACpC,CAACzB,EAA4B,EAAG,aAChC,CAACD,CAAgC,EAAG,sCAAsClC,CAAO,EAClF,CACP,CAAK,CACL,CACA,CAQA,SAASslC,GAA0BC,EAAUvB,EAAU,CAKrD,GAJI,CAACA,GAAYA,IAAa,KAI1B,CAACuB,EAAS,YAAa,EAAC,WAAWvB,EAAS,YAAW,CAAE,EAC3D,OAAOuB,EAKT,MAAMC,EAAaxB,EAAS,SAAS,GAAG,EAAIA,EAAS,OAAS,EAAIA,EAAS,OACrEyB,EAAWF,EAAS,OAAOC,CAAU,EAC3C,OAAIC,GAAYA,IAAa,IAEpBF,EAGFA,EAAS,MAAMC,CAAU,GAAK,GACvC,CAEA,SAASE,GAAcC,EAAaJ,EAAUvB,EAAU,CACtD,MAAM4B,EAAoBD,GAAejC,GAAiB4B,GAA0BC,EAAUvB,CAAQ,EAAIuB,EAW1G,MAAO,CAPLK,EAAkBA,EAAkB,OAAS,CAAC,IAAM,KAGhDA,EAAkB,MAAM,EAAE,IAAM,KAFhCA,EAAkB,MAAM,EAAG,EAAE,EAI3BA,EAEe,OAAO,CAChC,CAEA,SAASC,GAAqBxpC,EAAM,CAClC,OAAOA,EAAK,SAAS,GAAG,CAC1B,CAEA,SAASypC,GAA6BzpC,EAAM0pC,EAAQ,CAClD,OAAQF,GAAqBxpC,CAAI,GAAK0pC,EAAO,MAAM,UAAYA,EAAO,MAAM,SAAS,OAAS,GAAM,EACtG,CAEA,SAASC,GAAkBC,EAAO,CAChC,MAAO,CAAC,EAAE,CAACA,EAAM,UAAYA,EAAM,SAAWA,EAAM,MAAQA,EAAM,KAAK,SAAS,IAAI,EACtF,CAEA,SAASf,GAAgCd,EAAUN,EAAQ,CACzD,MAAMoC,EAAgBzC,GAAaK,EAAQM,CAAQ,EAEnD,GAAI8B,GACF,UAAWtpC,KAASspC,EAClB,GAAIF,GAAkBppC,EAAM,KAAK,GAAKupC,GAAUvpC,CAAK,EACnD,MAAO,GAKb,MAAO,EACT,CAcA,SAASwpC,GAASxpC,EAAO,CACvB,OAAOypC,GAAazpC,EAAM,MAAM,MAAQ,EAAE,CAC5C,CAEA,SAASupC,GAAUvpC,EAAO,CACxB,OAAOA,EAAM,OAAO,GAAG,GAAK,EAC9B,CAEA,SAASypC,GAAahqC,EAAM,CAC1B,OAAOA,EAAKA,EAAK,OAAS,CAAC,IAAM,IAAMA,EAAK,MAAM,EAAG,EAAE,EAAIA,CAC7D,CAEA,SAASiqC,GAAUjqC,EAAM,CACvB,OAAOA,EAAKA,EAAK,OAAS,CAAC,IAAM,IAAMA,EAAK,MAAM,EAAG,EAAE,EAAIA,CAC7D,CAEA,SAAS8oC,GAAgB9oC,EAAM,CAC7B,OAAOA,EAAK,CAAC,IAAM,IAAMA,EAAO,IAAIA,CAAI,EAC1C,CAEA,SAAS+oC,GAA8BL,EAAWX,EAAU,CAC1D,MAAM8B,EAAgBzC,GAAasB,EAAWX,CAAQ,EAEtD,GAAI,CAAC8B,GAAiBA,EAAc,SAAW,EAC7C,MAAO,GAGT,UAAWtpC,KAASspC,EAClB,GAAItpC,EAAM,MAAM,MAAQA,EAAM,MAAM,OAAS,IAAK,CAChD,MAAMP,EAAO+pC,GAASxpC,CAAK,EACrB2pC,EAAejB,GAA0BlB,EAAS,SAAUe,GAAgBvoC,EAAM,YAAY,CAAC,EAErG,OAAO0pC,GACLA,GAAUjqC,GAAQ,EAAE,EAClB8oC,GACEC,GACEL,EAAU,OAAOkB,GAASA,IAAUrpC,EAAM,KAAK,EAC/C,CACE,SAAU2pC,CACX,CACF,CACF,CACJ,CACP,CAGE,MAAO,EACT,CAEA,SAASlB,GACPvB,EACAM,EACAY,EACAhB,EAAW,GACX,CACA,GAAI,CAACF,GAAUA,EAAO,SAAW,EAC/B,MAAO,CAACJ,GAAiB4B,GAA0BlB,EAAS,SAAUJ,CAAQ,EAAII,EAAS,SAAU,KAAK,EAG5G,IAAIuB,EAAc,GAClB,GAAIX,EACF,UAAWe,KAAUf,EAAU,CAC7B,MAAMiB,EAAQF,EAAO,MACrB,GAAIE,EAAO,CAET,GAAIA,EAAM,MACR,OAAOP,GAAcC,EAAaI,EAAO,SAAU/B,CAAQ,EAE7D,MAAM3nC,EAAO4pC,EAAM,KAGnB,GAAI5pC,GAAQ,CAACypC,GAA6BzpC,EAAM0pC,CAAM,EAAG,CACvD,MAAMS,EAAUnqC,EAAK,CAAC,IAAM,KAAOspC,EAAYA,EAAY,OAAS,CAAC,IAAM,IAAMtpC,EAAO,IAAIA,CAAI,GAIhG,GAHAspC,GAAea,EAGXpC,EAAS,SAAS,SAASJ,EAAW+B,EAAO,QAAQ,EACvD,OAME/tB,GAAuB2tB,CAAW,IAAM3tB,GAAuB+tB,EAAO,QAAQ,GAE9E,CAACF,GAAqBF,CAAW,EAE1B,EAAEjC,GAAiB,GAAKM,GAAYwC,EAAS,OAAO,GAIzDV,GAA6BH,EAAaI,CAAM,IAClDJ,EAAcA,EAAY,MAAM,EAAG,EAAE,GAGhC,EAAEjC,GAAiB,GAAKM,GAAY2B,EAAa,OAAO,EAE3E,CACA,CACA,CAOE,MAAO,CAJyBjC,GAC5B4B,GAA0BlB,EAAS,SAAUJ,CAAQ,EACrDI,EAAS,UAAY,IAEQ,KAAK,CACxC,CAEA,SAASF,GACP9Q,EACAgR,EACAN,EACAgB,EACAd,EACAe,EACA,CACA,MAAMC,EAAW,MAAM,QAAQF,CAAO,EAClCA,EACCrB,GAAaK,EAAQM,EAAUJ,CAAQ,EAE5C,GAAIgB,EAAU,CACZ,IAAIjlC,EACF6D,EAAS,MACX,MAAMqhC,EAAsBC,GAAgCd,EAAuBN,CAAM,EAErFmB,IACFllC,EAAOolC,GAAgBC,GAA2CtB,EAAQM,CAAQ,CAAC,EACnFxgC,EAAS,UAGP,CAACqhC,GAAuB,CAACllC,KAC3B,CAACA,EAAM6D,CAAM,EAAIyhC,GAAkBvB,EAAQM,EAAUY,EAAUhB,CAAQ,GAGzE1gC,EAAiB,EAAC,mBAAmBvD,CAAI,EAErCqzB,IACFA,EAAe,WAAWrzB,CAAI,EAC9BqzB,EAAe,aAAa3wB,EAAkCmB,CAAM,EAE1E,CACA,CA8DA,SAASqgC,IAAoB,CAC3B,MAAM7qC,EAAOR,EAAe,EACtBC,EAAWO,EAAON,EAAYM,CAAI,EAAI,OAE5C,GAAI,CAACP,EACH,OAGF,MAAM+B,EAAKE,EAAWjC,CAAQ,EAAE,GAGhC,OAAO+B,IAAO,cAAgBA,IAAO,WAAa/B,EAAW,MAC/D,CClgBA,SAAS4tC,GACP/qC,EACA,CACA,OAAO4oC,GAAgD5oC,EAAS,GAAG,CACrE,CAoBA,SAASgrC,GAER7C,EAAsB,CACrB,OAAOD,GAA0CC,EAAsB,GAAG,CAC5E,CAMA,MAAM8C,GAA0BD,GCvB1BE,GAASA,IAAW,CAEhB,KAAA,CAAEC,SAAAA,GAAaC,OAAO1C,SAC5B,OAAIyC,EAASE,SAAS,YAAY,EAAUC,MACxCH,EAASE,SAAS,QAAQ,EAAUC,OACjCA,OACX,EAEAC,GAAY,CACR9wB,UAAW,CAAC,wBAAwB,EACpCD,SAAU,CAAC,uCAAwC,gCAAgC,EACnFha,IAAK,gEACL0N,aAAc,CACVq9B,GAA8C,CAC1C1C,UAAW2C,GAAM3C,UACjBC,YAAAA,GACAC,kBAAAA,GACAC,yBAAAA,GACAC,YAAAA,EACH,CAAA,EACDsC,GAA6B,CACzBxL,qBAAsB,CAClB,0HACA,sGAAsG,CAE7G,CAAA,EACD3iB,GAA0B,CAGtBH,OAAQ,CAAC,OAAQ,OAAO,CAAA,CAC3B,CAAC,EAEN+jB,wBAAyB,CACrB,YACA,oGACA,sHAAsH,EAE1HnT,YAAaqd,GAAO,EACpBO,QAASP,OAAaI,QACtBlxB,aAAc,CACV,YAMA,kGACA,+HAA+H,EAKnIsxB,iBAAkB,GAElB9d,QAAS+d,0CACb,CAAC,EAODP,OAAO1tB,iBAAmB6tB,GAC1BH,OAAO5tB,eAAiB+tB,GAEXK,MAAAA,GAA4BL,GAA+BM,EAAmB,ECzE9EC,GAAoBA,IAAM,CAC7BC,MAAAA,EAAcvW,SAASwW,eAAe,MAAM,EAClDC,cAAWF,CAAY,EAAEG,cAAQC,GAAI,CAAA,aAAcP,IAA6B,CACpF","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97]}